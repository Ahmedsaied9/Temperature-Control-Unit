

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 25 02:32:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.32
    45                           ; Generated 02/02/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F46K20 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataBANK0
    81  0029A0                     __pidataBANK0:
    82                           	callstack 0
    83                           
    84                           ;initializer for _max_temp
    85  0029A0  0063               	dw	99
    86                           
    87                           ;initializer for _min_temp
    88  0029A2  0028               	dw	40
    89  0000                     _TMR0	set	4054
    90  0000                     _ADRES	set	4035
    91  0000                     _PORTB	set	3969
    92  0000                     _EECON2	set	4007
    93  0000                     _EEDATA	set	4008
    94  0000                     _EEADR	set	4009
    95  0000                     _PORTDbits	set	3971
    96  0000                     _PORTD	set	3971
    97  0000                     _PORTBbits	set	3969
    98  0000                     _LATB	set	3978
    99  0000                     _TRISB	set	3987
   100  0000                     _T0CONbits	set	4053
   101  0000                     _ADCON2bits	set	4032
   102  0000                     _ADCON1bits	set	4033
   103  0000                     _ADCON0bits	set	4034
   104  0000                     _TRISD	set	3989
   105  0000                     _WR	set	32049
   106  0000                     _WREN	set	32050
   107  0000                     _RD	set	32048
   108  0000                     _CFGS	set	32054
   109  0000                     _EEPGD	set	32055
   110  0000                     _TMR0IF	set	32658
   111  0000                     _PSA	set	32427
   112  0000                     _T08BIT	set	32430
   113  0000                     _TMR0ON	set	32431
   114  0000                     _T0CS	set	32429
   115  0000                     _PEIE	set	32662
   116  0000                     _IPEN	set	32391
   117  0000                     _TMR0IE	set	32661
   118  0000                     _ADFM	set	32263
   119  0000                     _ADON	set	32272
   120  0000                     _ANS0	set	31728
   121  0000                     _TRISA0	set	31888
   122  0000                     _GIE	set	32663
   123  0000                     _LATC5	set	31837
   124  0000                     _LATC4	set	31836
   125  0000                     _TRISC5	set	31909
   126  0000                     _TRISC4	set	31908
   127                           
   128                           	psect	smallconst
   129  001000                     __psmallconst:
   130                           	callstack 0
   131  001000  00                 	db	0
   132  001001                     STR_4:
   133  001001  44                 	db	68	;'D'
   134  001002  65                 	db	101	;'e'
   135  001003  73                 	db	115	;'s'
   136  001004  69                 	db	105	;'i'
   137  001005  72                 	db	114	;'r'
   138  001006  65                 	db	101	;'e'
   139  001007  64                 	db	100	;'d'
   140  001008  20                 	db	32
   141  001009  54                 	db	84	;'T'
   142  00100A  65                 	db	101	;'e'
   143  00100B  6D                 	db	109	;'m'
   144  00100C  70                 	db	112	;'p'
   145  00100D  3D                 	db	61	;'='
   146  00100E  25                 	db	37
   147  00100F  64                 	db	100	;'d'
   148  001010  00                 	db	0
   149  001011                     STR_3:
   150  001011  43                 	db	67	;'C'
   151  001012  75                 	db	117	;'u'
   152  001013  72                 	db	114	;'r'
   153  001014  72                 	db	114	;'r'
   154  001015  65                 	db	101	;'e'
   155  001016  6E                 	db	110	;'n'
   156  001017  74                 	db	116	;'t'
   157  001018  20                 	db	32
   158  001019  54                 	db	84	;'T'
   159  00101A  65                 	db	101	;'e'
   160  00101B  6D                 	db	109	;'m'
   161  00101C  70                 	db	112	;'p'
   162  00101D  3D                 	db	61	;'='
   163  00101E  25                 	db	37
   164  00101F  64                 	db	100	;'d'
   165  001020  00                 	db	0
   166  001021                     STR_7:
   167  001021  54                 	db	84	;'T'
   168  001022  65                 	db	101	;'e'
   169  001023  6D                 	db	109	;'m'
   170  001024  70                 	db	112	;'p'
   171  001025  20                 	db	32
   172  001026  61                 	db	97	;'a'
   173  001027  73                 	db	115	;'s'
   174  001028  20                 	db	32
   175  001029  64                 	db	100	;'d'
   176  00102A  65                 	db	101	;'e'
   177  00102B  73                 	db	115	;'s'
   178  00102C  69                 	db	105	;'i'
   179  00102D  72                 	db	114	;'r'
   180  00102E  65                 	db	101	;'e'
   181  00102F  64                 	db	100	;'d'
   182  001030  00                 	db	0
   183  001031                     STR_1:
   184  001031  65                 	db	101	;'e'
   185  001032  6E                 	db	110	;'n'
   186  001033  74                 	db	116	;'t'
   187  001034  65                 	db	101	;'e'
   188  001035  72                 	db	114	;'r'
   189  001036  20                 	db	32
   190  001037  79                 	db	121	;'y'
   191  001038  6F                 	db	111	;'o'
   192  001039  75                 	db	117	;'u'
   193  00103A  72                 	db	114	;'r'
   194  00103B  20                 	db	32
   195  00103C  74                 	db	116	;'t'
   196  00103D  65                 	db	101	;'e'
   197  00103E  6D                 	db	109	;'m'
   198  00103F  70                 	db	112	;'p'
   199  001040  00                 	db	0
   200  001041                     STR_8:
   201  001041  49                 	db	73	;'I'
   202  001042  6E                 	db	110	;'n'
   203  001043  76                 	db	118	;'v'
   204  001044  61                 	db	97	;'a'
   205  001045  6C                 	db	108	;'l'
   206  001046  69                 	db	105	;'i'
   207  001047  64                 	db	100	;'d'
   208  001048  20                 	db	32
   209  001049  49                 	db	73	;'I'
   210  00104A  6E                 	db	110	;'n'
   211  00104B  70                 	db	112	;'p'
   212  00104C  75                 	db	117	;'u'
   213  00104D  74                 	db	116	;'t'
   214  00104E  00                 	db	0
   215  00104F                     STR_2:
   216  00104F  4F                 	db	79	;'O'
   217  001050  55                 	db	85	;'U'
   218  001051  54                 	db	84	;'T'
   219  001052  20                 	db	32
   220  001053  6F                 	db	111	;'o'
   221  001054  66                 	db	102	;'f'
   222  001055  20                 	db	32
   223  001056  72                 	db	114	;'r'
   224  001057  61                 	db	97	;'a'
   225  001058  6E                 	db	110	;'n'
   226  001059  67                 	db	103	;'g'
   227  00105A  65                 	db	101	;'e'
   228  00105B  00                 	db	0
   229  00105C                     STR_6:
   230  00105C  48                 	db	72	;'H'
   231  00105D  65                 	db	101	;'e'
   232  00105E  61                 	db	97	;'a'
   233  00105F  74                 	db	116	;'t'
   234  001060  65                 	db	101	;'e'
   235  001061  72                 	db	114	;'r'
   236  001062  20                 	db	32
   237  001063  4F                 	db	79	;'O'
   238  001064  4E                 	db	78	;'N'
   239  001065  00                 	db	0
   240  001066                     STR_5:
   241  001066  46                 	db	70	;'F'
   242  001067  61                 	db	97	;'a'
   243  001068  6E                 	db	110	;'n'
   244  001069  20                 	db	32
   245  00106A  4F                 	db	79	;'O'
   246  00106B  4E                 	db	78	;'N'
   247  00106C  00                 	db	0
   248  00106D  00                 	db	0	; dummy byte at the end
   249  0000                     
   250                           ; #config settings
   251                           
   252                           	psect	cinit
   253  0028DA                     __pcinit:
   254                           	callstack 0
   255  0028DA                     start_initialization:
   256                           	callstack 0
   257  0028DA                     __initialization:
   258                           	callstack 0
   259                           
   260                           ; Initialize objects allocated to BANK0 (4 bytes)
   261                           ; load TBLPTR registers with __pidataBANK0
   262  0028DA  0EA0               	movlw	low __pidataBANK0
   263  0028DC  6EF6               	movwf	tblptrl,c
   264  0028DE  0E29               	movlw	high __pidataBANK0
   265  0028E0  6EF7               	movwf	tblptrh,c
   266  0028E2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   267  0028E4  6EF8               	movwf	tblptru,c
   268  0028E6  EE00  F0D1         	lfsr	0,__pdataBANK0
   269  0028EA  EE10 F004          	lfsr	1,4
   270  0028EE                     copy_data0:
   271  0028EE  0009               	tblrd		*+
   272  0028F0  CFF5 FFEE          	movff	tablat,postinc0
   273  0028F4  50E5               	movf	postdec1,w,c
   274  0028F6  50E1               	movf	fsr1l,w,c
   275  0028F8  E1FA               	bnz	copy_data0
   276                           
   277                           ; Clear objects allocated to BANK0 (94 bytes)
   278  0028FA  EE00  F060         	lfsr	0,__pbssBANK0
   279  0028FE  0E5E               	movlw	94
   280  002900                     clear_0:
   281  002900  6AEE               	clrf	postinc0,c
   282  002902  06E8               	decf	wreg,f,c
   283  002904  E1FD               	bnz	clear_0
   284  002906                     end_of_initialization:
   285                           	callstack 0
   286  002906                     __end_of__initialization:
   287                           	callstack 0
   288  002906  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289  002908  6EF8               	movwf	tblptru,c
   290  00290A  0100               	movlb	0
   291  00290C  EF04  F00A         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	bssBANK0
   294  000060                     __pbssBANK0:
   295                           	callstack 0
   296  000060                     _nout:
   297                           	callstack 0
   298  000060                     	ds	2
   299  000062                     _width:
   300                           	callstack 0
   301  000062                     	ds	2
   302  000064                     _prec:
   303                           	callstack 0
   304  000064                     	ds	2
   305  000066                     _flags:
   306                           	callstack 0
   307  000066                     	ds	2
   308  000068                     _invalid:
   309                           	callstack 0
   310  000068                     	ds	2
   311  00006A                     _result_3:
   312                           	callstack 0
   313  00006A                     	ds	2
   314  00006C                     _result_2:
   315                           	callstack 0
   316  00006C                     	ds	2
   317  00006E                     _result_1:
   318                           	callstack 0
   319  00006E                     	ds	2
   320  000070                     _num_read:
   321                           	callstack 0
   322  000070                     	ds	2
   323  000072                     _avg_temp:
   324                           	callstack 0
   325  000072                     	ds	2
   326  000074                     _sum:
   327                           	callstack 0
   328  000074                     	ds	2
   329  000076                     _temp:
   330                           	callstack 0
   331  000076                     	ds	2
   332  000078                     _set_point:
   333                           	callstack 0
   334  000078                     	ds	2
   335  00007A                     _units:
   336                           	callstack 0
   337  00007A                     	ds	2
   338  00007C                     _tens:
   339                           	callstack 0
   340  00007C                     	ds	2
   341  00007E                     _dbuf:
   342                           	callstack 0
   343  00007E                     	ds	32
   344  00009E                     _txt_new:
   345                           	callstack 0
   346  00009E                     	ds	16
   347  0000AE                     _txt:
   348                           	callstack 0
   349  0000AE                     	ds	16
   350                           
   351                           	psect	dataBANK0
   352  0000D1                     __pdataBANK0:
   353                           	callstack 0
   354  0000D1                     _max_temp:
   355                           	callstack 0
   356  0000D1                     	ds	2
   357  0000D3                     _min_temp:
   358                           	callstack 0
   359  0000D3                     	ds	2
   360                           
   361                           	psect	cstackBANK0
   362  0000BE                     __pcstackBANK0:
   363                           	callstack 0
   364  0000BE                     sprintf@ap:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x0
   368  0000BE                     	ds	2
   369  0000C0                     sprintf@f:
   370                           	callstack 0
   371                           
   372                           ; 6 bytes @ 0x2
   373  0000C0                     	ds	6
   374  0000C6                     main@input:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x8
   378  0000C6                     	ds	2
   379  0000C8                     main@c:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0xA
   383  0000C8                     	ds	1
   384  0000C9                     main@result:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0xB
   388  0000C9                     	ds	2
   389  0000CB                     main@k:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0xD
   393  0000CB                     	ds	2
   394  0000CD                     main@i:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0xF
   398  0000CD                     	ds	2
   399  0000CF                     main@j:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x11
   403  0000CF                     	ds	2
   404                           
   405                           	psect	cstackCOMRAM
   406  000001                     __pcstackCOMRAM:
   407                           	callstack 0
   408  000001                     ??_Get_Key:
   409  000001                     ??_key_num:
   410  000001                     ?_strlen:
   411                           	callstack 0
   412  000001                     ?___wmul:
   413                           	callstack 0
   414  000001                     ?___aodiv:
   415                           	callstack 0
   416  000001                     ?___aomod:
   417                           	callstack 0
   418  000001                     LCDWriteNibble@rs:
   419                           	callstack 0
   420  000001                     ___wmul@multiplier:
   421                           	callstack 0
   422  000001                     fputc@c:
   423                           	callstack 0
   424  000001                     strlen@s:
   425                           	callstack 0
   426  000001                     ___aodiv@dividend:
   427                           	callstack 0
   428  000001                     ___aomod@dividend:
   429                           	callstack 0
   430                           
   431                           ; 8 bytes @ 0x0
   432  000001                     	ds	1
   433  000002                     LCDWriteNibble@ch4:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x1
   437  000002                     	ds	1
   438  000003                     LCDWriteNibble@ch_shifted:
   439                           	callstack 0
   440  000003                     Get_Key@Key:
   441                           	callstack 0
   442  000003                     key_num@k:
   443                           	callstack 0
   444  000003                     ___wmul@multiplicand:
   445                           	callstack 0
   446  000003                     fputc@fp:
   447                           	callstack 0
   448  000003                     strlen@a:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x2
   452  000003                     	ds	1
   453  000004                     LCDWriteNibble@ch5:
   454                           	callstack 0
   455  000004                     Get_Key@r:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x3
   459  000004                     	ds	1
   460  000005                     ??_fputc:
   461  000005                     LCDWriteNibble@ch6:
   462                           	callstack 0
   463  000005                     Get_Key@c:
   464                           	callstack 0
   465  000005                     ___wmul@product:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x4
   469  000005                     	ds	1
   470  000006                     LCDWriteNibble@ch7:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x5
   474  000006                     	ds	1
   475  000007                     ?___xxtofl:
   476                           	callstack 0
   477  000007                     LCDWriteNibble@ch:
   478                           	callstack 0
   479  000007                     ___xxtofl@val:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x6
   483  000007                     	ds	1
   484  000008                     ??_LCDPutCmd:
   485  000008                     ??_LCDPutChar:
   486                           
   487                           ; 1 bytes @ 0x7
   488  000008                     	ds	1
   489  000009                     LCDPutChar@ch:
   490                           	callstack 0
   491  000009                     LCDPutCmd@ch:
   492                           	callstack 0
   493  000009                     ___aodiv@divisor:
   494                           	callstack 0
   495  000009                     ___aomod@divisor:
   496                           	callstack 0
   497                           
   498                           ; 8 bytes @ 0x8
   499  000009                     	ds	1
   500  00000A                     ??_LCD_Initialize:
   501  00000A                     LCDGoto@ln:
   502                           	callstack 0
   503  00000A                     LCDPutStr@str:
   504                           	callstack 0
   505  00000A                     fputs@s:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x9
   509  00000A                     	ds	1
   510  00000B                     ??_LCDGoto:
   511  00000B                     ??___xxtofl:
   512                           
   513                           ; 1 bytes @ 0xA
   514  00000B                     	ds	1
   515  00000C                     ??_LCDPutStr:
   516  00000C                     fputs@fp:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0xB
   520  00000C                     	ds	1
   521  00000D                     _LCDGoto$511:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xC
   525  00000D                     	ds	1
   526  00000E                     LCDPutStr@i:
   527                           	callstack 0
   528  00000E                     fputs@c:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0xD
   532  00000E                     	ds	1
   533  00000F                     LCDGoto@pos:
   534                           	callstack 0
   535  00000F                     ___xxtofl@sign:
   536                           	callstack 0
   537  00000F                     fputs@i:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0xE
   541  00000F                     	ds	1
   542  000010                     ___xxtofl@exp:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0xF
   546  000010                     	ds	1
   547  000011                     ?_pad:
   548                           	callstack 0
   549  000011                     ___aodiv@counter:
   550                           	callstack 0
   551  000011                     ___aomod@counter:
   552                           	callstack 0
   553  000011                     pad@fp:
   554                           	callstack 0
   555  000011                     ___xxtofl@arg:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x10
   559  000011                     	ds	1
   560  000012                     ___aodiv@sign:
   561                           	callstack 0
   562  000012                     ___aomod@sign:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x11
   566  000012                     	ds	1
   567  000013                     ?_abs:
   568                           	callstack 0
   569  000013                     pad@buf:
   570                           	callstack 0
   571  000013                     abs@a:
   572                           	callstack 0
   573  000013                     ___aodiv@quotient:
   574                           	callstack 0
   575                           
   576                           ; 8 bytes @ 0x12
   577  000013                     	ds	2
   578  000015                     ??_abs:
   579  000015                     ?___fldiv:
   580                           	callstack 0
   581  000015                     pad@p:
   582                           	callstack 0
   583  000015                     ___fldiv@b:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x14
   587  000015                     	ds	2
   588  000017                     ??_pad:
   589                           
   590                           ; 1 bytes @ 0x16
   591  000017                     	ds	1
   592  000018                     pad@i:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x17
   596  000018                     	ds	1
   597  000019                     ___fldiv@a:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x18
   601  000019                     	ds	1
   602  00001A                     pad@w:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x19
   606  00001A                     	ds	2
   607  00001C                     ?_dtoa:
   608                           	callstack 0
   609  00001C                     dtoa@fp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x1B
   613  00001C                     	ds	1
   614  00001D                     ??___fldiv:
   615                           
   616                           ; 1 bytes @ 0x1C
   617  00001D                     	ds	1
   618  00001E                     dtoa@d:
   619                           	callstack 0
   620                           
   621                           ; 8 bytes @ 0x1D
   622  00001E                     	ds	3
   623  000021                     ___fldiv@rem:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x20
   627  000021                     	ds	4
   628  000025                     ___fldiv@sign:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x24
   632  000025                     	ds	1
   633  000026                     ??_dtoa:
   634  000026                     ___fldiv@new_exp:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x25
   638  000026                     	ds	2
   639  000028                     ___fldiv@grs:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0x27
   643  000028                     	ds	4
   644  00002C                     ___fldiv@bexp:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x2B
   648  00002C                     	ds	1
   649  00002D                     ___fldiv@aexp:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x2C
   653  00002D                     	ds	1
   654  00002E                     ?___fltol:
   655                           	callstack 0
   656  00002E                     _dtoa$1048:
   657                           	callstack 0
   658  00002E                     ___fltol@f1:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x2D
   662  00002E                     	ds	2
   663  000030                     dtoa@p:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x2F
   667  000030                     	ds	2
   668  000032                     ??___fltol:
   669  000032                     dtoa@w:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x31
   673  000032                     	ds	2
   674  000034                     dtoa@s:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x33
   678  000034                     	ds	2
   679  000036                     ___fltol@sign1:
   680                           	callstack 0
   681  000036                     dtoa@n:
   682                           	callstack 0
   683                           
   684                           ; 8 bytes @ 0x35
   685  000036                     	ds	1
   686  000037                     ___fltol@exp1:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x36
   690  000037                     	ds	1
   691  000038                     ?_adc_init:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x37
   695  000038                     	ds	2
   696  00003A                     adc_init@result0:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x39
   700  00003A                     	ds	4
   701  00003E                     dtoa@i:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x3D
   705  00003E                     	ds	2
   706  000040                     ?_vfpfcnvrt:
   707                           	callstack 0
   708  000040                     vfpfcnvrt@fp:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x3F
   712  000040                     	ds	2
   713  000042                     vfpfcnvrt@fmt:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x41
   717  000042                     	ds	2
   718  000044                     vfpfcnvrt@ap:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x43
   722  000044                     	ds	2
   723  000046                     ??_vfpfcnvrt:
   724                           
   725                           ; 1 bytes @ 0x45
   726  000046                     	ds	2
   727  000048                     vfpfcnvrt@ll:
   728                           	callstack 0
   729                           
   730                           ; 8 bytes @ 0x47
   731  000048                     	ds	8
   732  000050                     ?_vfprintf:
   733                           	callstack 0
   734  000050                     vfprintf@fp:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x4F
   738  000050                     	ds	2
   739  000052                     vfprintf@fmt:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x51
   743  000052                     	ds	2
   744  000054                     vfprintf@ap:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x53
   748  000054                     	ds	2
   749  000056                     vfprintf@cfmt:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x55
   753  000056                     	ds	2
   754  000058                     ?_sprintf:
   755                           	callstack 0
   756  000058                     sprintf@s:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x57
   760  000058                     	ds	2
   761  00005A                     sprintf@fmt:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x59
   765  00005A                     	ds	4
   766  00005E                     ??_main:
   767                           
   768                           ; 1 bytes @ 0x5D
   769  00005E                     	ds	2
   770                           
   771 ;;
   772 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   773 ;;
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 32 in file "newmain.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  result          2   11[BANK0 ] int 
   781 ;;  j               2   17[BANK0 ] int 
   782 ;;  i               2   15[BANK0 ] int 
   783 ;;  k               2   13[BANK0 ] int 
   784 ;;  input           2    8[BANK0 ] unsigned char [2]
   785 ;;  invalid         2    0        int 
   786 ;;  c               1   10[BANK0 ] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2   64[None  ] int 
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;Total ram usage:       13 bytes
   801 ;; Hardware stack levels required when called: 8
   802 ;; This function calls:
   803 ;;		_Get_Key
   804 ;;		_KeyPad_Init
   805 ;;		_LCDGoto
   806 ;;		_LCDPutChar
   807 ;;		_LCDPutCmd
   808 ;;		_LCDPutStr
   809 ;;		_LCD_Initialize
   810 ;;		___wmul
   811 ;;		_adc_init
   812 ;;		_key_num
   813 ;;		_sprintf
   814 ;; This function is called by:
   815 ;;		Startup code after reset
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text0
   820  001408                     __ptext0:
   821                           	callstack 0
   822  001408                     _main:
   823                           	callstack 23
   824  001408                     
   825                           ;newmain.c: 34:     TRISD = 0x00;
   826  001408  0E00               	movlw	0
   827  00140A  6E95               	movwf	149,c	;volatile
   828  00140C                     
   829                           ;newmain.c: 35:     TRISC4=0;
   830  00140C  9894               	bcf	3988,4,c	;volatile
   831  00140E                     
   832                           ;newmain.c: 36:     TRISC5=0;
   833  00140E  9A94               	bcf	3988,5,c	;volatile
   834  001410                     
   835                           ;newmain.c: 37:    LCD_Initialize();
   836  001410  EC33  F014         	call	_LCD_Initialize	;wreg free
   837  001414                     
   838                           ;newmain.c: 38:    KeyPad_Init();
   839  001414  ECCC  F014         	call	_KeyPad_Init	;wreg free
   840  001418                     
   841                           ;newmain.c: 55:     char c = -1;
   842  001418  0100               	movlb	0	; () banked
   843  00141A  69C8               	setf	main@c& (0+255),b
   844  00141C                     l2922:
   845                           
   846                           ;newmain.c: 57:    {;newmain.c: 64:     LATC4=0;
   847  00141C  988B               	bcf	3979,4,c	;volatile
   848  00141E                     
   849                           ;newmain.c: 65:     LATC5=0;
   850  00141E  9A8B               	bcf	3979,5,c	;volatile
   851  001420                     
   852                           ;newmain.c: 70:     for(int k = 0 ; k<2; k++)
   853  001420  0E00               	movlw	0
   854  001422  0100               	movlb	0	; () banked
   855  001424  6FCC               	movwf	(main@k+1)& (0+255),b
   856  001426  0E00               	movlw	0
   857  001428  6FCB               	movwf	main@k& (0+255),b
   858  00142A                     l2932:
   859                           
   860                           ; BSR set to: 0
   861                           ;newmain.c: 71:     {input[k]=0;}
   862  00142A  0EC6               	movlw	low main@input
   863  00142C  25CB               	addwf	main@k& (0+255),w,b
   864  00142E  6ED9               	movwf	fsr2l,c
   865  001430  0E00               	movlw	high main@input
   866  001432  21CC               	addwfc	(main@k+1)& (0+255),w,b
   867  001434  6EDA               	movwf	fsr2h,c
   868  001436  0E00               	movlw	0
   869  001438  6EDF               	movwf	indf2,c
   870  00143A                     
   871                           ; BSR set to: 0
   872  00143A  4BCB               	infsnz	main@k& (0+255),f,b
   873  00143C  2BCC               	incf	(main@k+1)& (0+255),f,b
   874  00143E                     
   875                           ; BSR set to: 0
   876  00143E  BFCC               	btfsc	(main@k+1)& (0+255),7,b
   877  001440  EF2B  F00A         	goto	u2421
   878  001444  51CC               	movf	(main@k+1)& (0+255),w,b
   879  001446  E109               	bnz	u2420
   880  001448  0E02               	movlw	2
   881  00144A  5DCB               	subwf	main@k& (0+255),w,b
   882  00144C  A0D8               	btfss	status,0,c
   883  00144E  EF2B  F00A         	goto	u2421
   884  001452  EF2D  F00A         	goto	u2420
   885  001456                     u2421:
   886  001456  EF15  F00A         	goto	l2932
   887  00145A                     u2420:
   888  00145A                     
   889                           ; BSR set to: 0
   890                           ;newmain.c: 74:    LCDGoto(0,0);
   891  00145A  0E00               	movlw	0
   892  00145C  6E0A               	movwf	LCDGoto@ln^0,c
   893  00145E  0E00               	movlw	0
   894  001460  EC31  F013         	call	_LCDGoto
   895  001464                     
   896                           ;newmain.c: 75:    LCDPutStr("enter your temp");
   897  001464  0E31               	movlw	low STR_1
   898  001466  6E0A               	movwf	LCDPutStr@str^0,c
   899  001468  0E10               	movlw	high STR_1
   900  00146A  6E0B               	movwf	(LCDPutStr@str+1)^0,c
   901  00146C  ECF3  F012         	call	_LCDPutStr	;wreg free
   902  001470                     
   903                           ;newmain.c: 76:    _delay((unsigned long)((800)*(8e6/4000.0)));
   904  001470  0E09               	movlw	9
   905  001472  6E5F               	movwf	(??_main+1)^0,c
   906  001474  0E1E               	movlw	30
   907  001476  6E5E               	movwf	??_main^0,c
   908  001478  0EE4               	movlw	228
   909  00147A                     u2837:
   910  00147A  2EE8               	decfsz	wreg,f,c
   911  00147C  D7FE               	bra	u2837
   912  00147E  2E5E               	decfsz	??_main^0,f,c
   913  001480  D7FC               	bra	u2837
   914  001482  2E5F               	decfsz	(??_main+1)^0,f,c
   915  001484  D7FA               	bra	u2837
   916  001486  F000 F000          	nop2	
   917  00148A                     
   918                           ;newmain.c: 77:    LCDPutCmd(0x01);
   919  00148A  0E01               	movlw	1
   920  00148C  EC50  F014         	call	_LCDPutCmd
   921  001490                     
   922                           ;newmain.c: 80:    for(int i=0;i<2;i++)
   923  001490  0E00               	movlw	0
   924  001492  0100               	movlb	0	; () banked
   925  001494  6FCE               	movwf	(main@i+1)& (0+255),b
   926  001496  0E00               	movlw	0
   927  001498  6FCD               	movwf	main@i& (0+255),b
   928  00149A                     l2956:
   929                           
   930                           ; BSR set to: 0
   931                           ;newmain.c: 88:        if((c>=0 && c<=15))
   932  00149A  0E10               	movlw	16
   933  00149C  61C8               	cpfslt	main@c& (0+255),b
   934  00149E  EF53  F00A         	goto	u2431
   935  0014A2  EF55  F00A         	goto	u2430
   936  0014A6                     u2431:
   937  0014A6  EF62  F00A         	goto	l2962
   938  0014AA                     u2430:
   939  0014AA                     
   940                           ; BSR set to: 0
   941                           ;newmain.c: 89:        {;newmain.c: 90:            input[i]=key_num(c);
   942  0014AA  0EC6               	movlw	low main@input
   943  0014AC  25CD               	addwf	main@i& (0+255),w,b
   944  0014AE  6ED9               	movwf	fsr2l,c
   945  0014B0  0E00               	movlw	high main@input
   946  0014B2  21CE               	addwfc	(main@i+1)& (0+255),w,b
   947  0014B4  6EDA               	movwf	fsr2h,c
   948  0014B6  51C8               	movf	main@c& (0+255),w,b
   949  0014B8  ECDD  F010         	call	_key_num
   950  0014BC  6EDF               	movwf	indf2,c
   951  0014BE                     
   952                           ;newmain.c: 91:            LCDPutChar('5');
   953  0014BE  0E35               	movlw	53
   954  0014C0  ECA3  F014         	call	_LCDPutChar
   955  0014C4                     l2962:
   956                           
   957                           ;newmain.c: 102:    }
   958  0014C4  0100               	movlb	0	; () banked
   959  0014C6  4BCD               	infsnz	main@i& (0+255),f,b
   960  0014C8  2BCE               	incf	(main@i+1)& (0+255),f,b
   961  0014CA                     
   962                           ; BSR set to: 0
   963  0014CA  BFCE               	btfsc	(main@i+1)& (0+255),7,b
   964  0014CC  EF71  F00A         	goto	u2441
   965  0014D0  51CE               	movf	(main@i+1)& (0+255),w,b
   966  0014D2  E109               	bnz	u2440
   967  0014D4  0E02               	movlw	2
   968  0014D6  5DCD               	subwf	main@i& (0+255),w,b
   969  0014D8  A0D8               	btfss	status,0,c
   970  0014DA  EF71  F00A         	goto	u2441
   971  0014DE  EF73  F00A         	goto	u2440
   972  0014E2                     u2441:
   973  0014E2  EF4D  F00A         	goto	l2956
   974  0014E6                     u2440:
   975  0014E6                     
   976                           ; BSR set to: 0
   977                           ;newmain.c: 103:    _delay((unsigned long)((1000)*(8e6/4000.0)));
   978  0014E6  0E0B               	movlw	11
   979  0014E8  6E5F               	movwf	(??_main+1)^0,c
   980  0014EA  0E26               	movlw	38
   981  0014EC  6E5E               	movwf	??_main^0,c
   982  0014EE  0E5E               	movlw	94
   983  0014F0                     u2847:
   984  0014F0  2EE8               	decfsz	wreg,f,c
   985  0014F2  D7FE               	bra	u2847
   986  0014F4  2E5E               	decfsz	??_main^0,f,c
   987  0014F6  D7FC               	bra	u2847
   988  0014F8  2E5F               	decfsz	(??_main+1)^0,f,c
   989  0014FA  D7FA               	bra	u2847
   990  0014FC                     
   991                           ;newmain.c: 105:        for(int j=0;j<2;j++)
   992  0014FC  0E00               	movlw	0
   993  0014FE  0100               	movlb	0	; () banked
   994  001500  6FD0               	movwf	(main@j+1)& (0+255),b
   995  001502  0E00               	movlw	0
   996  001504  6FCF               	movwf	main@j& (0+255),b
   997  001506                     l2974:
   998                           
   999                           ; BSR set to: 0
  1000                           ;newmain.c: 106:    { if(j==0)
  1001  001506  51CF               	movf	main@j& (0+255),w,b
  1002  001508  11D0               	iorwf	(main@j+1)& (0+255),w,b
  1003  00150A  A4D8               	btfss	status,2,c
  1004  00150C  EF8A  F00A         	goto	u2451
  1005  001510  EF8C  F00A         	goto	u2450
  1006  001514                     u2451:
  1007  001514  EFA6  F00A         	goto	l2978
  1008  001518                     u2450:
  1009  001518                     
  1010                           ; BSR set to: 0
  1011                           ;newmain.c: 108:        tens = (input[j]-48)*10;
  1012  001518  0EC6               	movlw	low main@input
  1013  00151A  25CF               	addwf	main@j& (0+255),w,b
  1014  00151C  6ED9               	movwf	fsr2l,c
  1015  00151E  0E00               	movlw	high main@input
  1016  001520  21D0               	addwfc	(main@j+1)& (0+255),w,b
  1017  001522  6EDA               	movwf	fsr2h,c
  1018  001524  50DF               	movf	indf2,w,c
  1019  001526  6E5E               	movwf	??_main^0,c
  1020  001528  0ED0               	movlw	208
  1021  00152A  245E               	addwf	??_main^0,w,c
  1022  00152C  6E01               	movwf	___wmul@multiplier^0,c
  1023  00152E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1024  001530  0EFF               	movlw	255
  1025  001532  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1026  001534  0E00               	movlw	0
  1027  001536  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1028  001538  0E0A               	movlw	10
  1029  00153A  6E03               	movwf	___wmul@multiplicand^0,c
  1030  00153C  ECB9  F014         	call	___wmul	;wreg free
  1031  001540  C001  F07C         	movff	?___wmul,_tens
  1032  001544  C002  F07D         	movff	?___wmul+1,_tens+1
  1033  001548  EFB4  F00A         	goto	l2980
  1034  00154C                     l2978:
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;newmain.c: 111:           units = input[j]-48;
  1038  00154C  0EC6               	movlw	low main@input
  1039  00154E  25CF               	addwf	main@j& (0+255),w,b
  1040  001550  6ED9               	movwf	fsr2l,c
  1041  001552  0E00               	movlw	high main@input
  1042  001554  21D0               	addwfc	(main@j+1)& (0+255),w,b
  1043  001556  6EDA               	movwf	fsr2h,c
  1044  001558  50DF               	movf	indf2,w,c
  1045  00155A  6E5E               	movwf	??_main^0,c
  1046  00155C  0ED0               	movlw	208
  1047  00155E  245E               	addwf	??_main^0,w,c
  1048  001560  6F7A               	movwf	_units& (0+255),b
  1049  001562  6B7B               	clrf	(_units+1)& (0+255),b
  1050  001564  0EFF               	movlw	255
  1051  001566  237B               	addwfc	(_units+1)& (0+255),f,b
  1052  001568                     l2980:
  1053                           
  1054                           ;newmain.c: 112:    }
  1055  001568  0100               	movlb	0	; () banked
  1056  00156A  4BCF               	infsnz	main@j& (0+255),f,b
  1057  00156C  2BD0               	incf	(main@j+1)& (0+255),f,b
  1058  00156E                     
  1059                           ; BSR set to: 0
  1060  00156E  BFD0               	btfsc	(main@j+1)& (0+255),7,b
  1061  001570  EFC3  F00A         	goto	u2461
  1062  001574  51D0               	movf	(main@j+1)& (0+255),w,b
  1063  001576  E109               	bnz	u2460
  1064  001578  0E02               	movlw	2
  1065  00157A  5DCF               	subwf	main@j& (0+255),w,b
  1066  00157C  A0D8               	btfss	status,0,c
  1067  00157E  EFC3  F00A         	goto	u2461
  1068  001582  EFC5  F00A         	goto	u2460
  1069  001586                     u2461:
  1070  001586  EF83  F00A         	goto	l2974
  1071  00158A                     u2460:
  1072  00158A                     
  1073                           ; BSR set to: 0
  1074                           ;newmain.c: 113:   set_point=tens+units;
  1075  00158A  517A               	movf	_units& (0+255),w,b
  1076  00158C  257C               	addwf	_tens& (0+255),w,b
  1077  00158E  6F78               	movwf	_set_point& (0+255),b
  1078  001590  517B               	movf	(_units+1)& (0+255),w,b
  1079  001592  217D               	addwfc	(_tens+1)& (0+255),w,b
  1080  001594  6F79               	movwf	(_set_point+1)& (0+255),b
  1081                           
  1082                           ;newmain.c: 114:   if(set_point < min_temp || set_point > max_temp)
  1083  001596  BF79               	btfsc	(_set_point+1)& (0+255),7,b
  1084  001598  EFD7  F00A         	goto	u2471
  1085  00159C  5179               	movf	(_set_point+1)& (0+255),w,b
  1086  00159E  E109               	bnz	u2470
  1087  0015A0  0E28               	movlw	40
  1088  0015A2  5D78               	subwf	_set_point& (0+255),w,b
  1089  0015A4  A0D8               	btfss	status,0,c
  1090  0015A6  EFD7  F00A         	goto	u2471
  1091  0015AA  EFD9  F00A         	goto	u2470
  1092  0015AE                     u2471:
  1093  0015AE  EFE7  F00A         	goto	l2988
  1094  0015B2                     u2470:
  1095  0015B2                     
  1096                           ; BSR set to: 0
  1097  0015B2  BF79               	btfsc	(_set_point+1)& (0+255),7,b
  1098  0015B4  EFE5  F00A         	goto	u2481
  1099  0015B8  5179               	movf	(_set_point+1)& (0+255),w,b
  1100  0015BA  E109               	bnz	u2480
  1101  0015BC  0E64               	movlw	100
  1102  0015BE  5D78               	subwf	_set_point& (0+255),w,b
  1103  0015C0  A0D8               	btfss	status,0,c
  1104  0015C2  EFE5  F00A         	goto	u2481
  1105  0015C6  EFE7  F00A         	goto	u2480
  1106  0015CA                     u2481:
  1107  0015CA  EF07  F00B         	goto	l2996
  1108  0015CE                     u2480:
  1109  0015CE                     l2988:
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;newmain.c: 115:   {;newmain.c: 116:       LCDGoto(0,0);
  1113  0015CE  0E00               	movlw	0
  1114  0015D0  6E0A               	movwf	LCDGoto@ln^0,c
  1115  0015D2  0E00               	movlw	0
  1116  0015D4  EC31  F013         	call	_LCDGoto
  1117                           
  1118                           ;newmain.c: 117:    LCDPutCmd(0x01);
  1119  0015D8  0E01               	movlw	1
  1120  0015DA  EC50  F014         	call	_LCDPutCmd
  1121  0015DE                     
  1122                           ;newmain.c: 118:       LCDPutStr("OUT of range");
  1123  0015DE  0E4F               	movlw	low STR_2
  1124  0015E0  6E0A               	movwf	LCDPutStr@str^0,c
  1125  0015E2  0E10               	movlw	high STR_2
  1126  0015E4  6E0B               	movwf	(LCDPutStr@str+1)^0,c
  1127  0015E6  ECF3  F012         	call	_LCDPutStr	;wreg free
  1128  0015EA                     
  1129                           ;newmain.c: 119:    _delay((unsigned long)((800)*(8e6/4000.0)));
  1130  0015EA  0E09               	movlw	9
  1131  0015EC  6E5F               	movwf	(??_main+1)^0,c
  1132  0015EE  0E1E               	movlw	30
  1133  0015F0  6E5E               	movwf	??_main^0,c
  1134  0015F2  0EE4               	movlw	228
  1135  0015F4                     u2857:
  1136  0015F4  2EE8               	decfsz	wreg,f,c
  1137  0015F6  D7FE               	bra	u2857
  1138  0015F8  2E5E               	decfsz	??_main^0,f,c
  1139  0015FA  D7FC               	bra	u2857
  1140  0015FC  2E5F               	decfsz	(??_main+1)^0,f,c
  1141  0015FE  D7FA               	bra	u2857
  1142  001600  F000 F000          	nop2	
  1143  001604                     
  1144                           ;newmain.c: 120:    LCDPutCmd(0x01);
  1145  001604  0E01               	movlw	1
  1146  001606  EC50  F014         	call	_LCDPutCmd
  1147                           
  1148                           ;newmain.c: 122:   }
  1149  00160A  EF0E  F00A         	goto	l2922
  1150  00160E                     l2996:
  1151                           
  1152                           ;newmain.c: 125:        result_1 = 0;
  1153  00160E  0E00               	movlw	0
  1154  001610  0100               	movlb	0	; () banked
  1155  001612  6F6F               	movwf	(_result_1+1)& (0+255),b
  1156  001614  0E00               	movlw	0
  1157  001616  6F6E               	movwf	_result_1& (0+255),b
  1158                           
  1159                           ;newmain.c: 126:        result_2 = 0;
  1160  001618  0E00               	movlw	0
  1161  00161A  6F6D               	movwf	(_result_2+1)& (0+255),b
  1162  00161C  0E00               	movlw	0
  1163  00161E  6F6C               	movwf	_result_2& (0+255),b
  1164                           
  1165                           ;newmain.c: 127:        result_3 = 0;
  1166  001620  0E00               	movlw	0
  1167  001622  6F6B               	movwf	(_result_3+1)& (0+255),b
  1168  001624  0E00               	movlw	0
  1169  001626  6F6A               	movwf	_result_3& (0+255),b
  1170  001628                     
  1171                           ; BSR set to: 0
  1172                           ;newmain.c: 128:       LCDGoto(0,0);
  1173  001628  0E00               	movlw	0
  1174  00162A  6E0A               	movwf	LCDGoto@ln^0,c
  1175  00162C  0E00               	movlw	0
  1176  00162E  EC31  F013         	call	_LCDGoto
  1177  001632                     
  1178                           ;newmain.c: 130:       int result=adc_init();
  1179  001632  EC9E  F012         	call	_adc_init	;wreg free
  1180  001636  C038  F0C9         	movff	?_adc_init,main@result
  1181  00163A  C039  F0CA         	movff	?_adc_init+1,main@result+1
  1182  00163E                     
  1183                           ;newmain.c: 131:       LCDPutCmd(0x01);
  1184  00163E  0E01               	movlw	1
  1185  001640  EC50  F014         	call	_LCDPutCmd
  1186  001644                     
  1187                           ;newmain.c: 132:       sprintf(txt, "Current Temp=%d", result);
  1188  001644  0EAE               	movlw	low _txt
  1189  001646  6E58               	movwf	sprintf@s^0,c
  1190  001648  0E00               	movlw	high _txt
  1191  00164A  6E59               	movwf	(sprintf@s+1)^0,c
  1192  00164C  0E11               	movlw	low STR_3
  1193  00164E  6E5A               	movwf	sprintf@fmt^0,c
  1194  001650  0E10               	movlw	high STR_3
  1195  001652  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1196  001654  C0C9  F05C         	movff	main@result,?_sprintf+4
  1197  001658  C0CA  F05D         	movff	main@result+1,?_sprintf+5
  1198  00165C  ECC8  F013         	call	_sprintf	;wreg free
  1199  001660                     
  1200                           ;newmain.c: 133:       LCDPutStr(txt);
  1201  001660  0EAE               	movlw	low _txt
  1202  001662  6E0A               	movwf	LCDPutStr@str^0,c
  1203  001664  0E00               	movlw	high _txt
  1204  001666  6E0B               	movwf	(LCDPutStr@str+1)^0,c
  1205  001668  ECF3  F012         	call	_LCDPutStr	;wreg free
  1206  00166C                     
  1207                           ;newmain.c: 134:       LCDGoto(0,1);
  1208  00166C  0E01               	movlw	1
  1209  00166E  6E0A               	movwf	LCDGoto@ln^0,c
  1210  001670  0E00               	movlw	0
  1211  001672  EC31  F013         	call	_LCDGoto
  1212  001676                     
  1213                           ;newmain.c: 135:       sprintf(txt_new, "Desired Temp=%d", set_point);
  1214  001676  0E9E               	movlw	low _txt_new
  1215  001678  6E58               	movwf	sprintf@s^0,c
  1216  00167A  0E00               	movlw	high _txt_new
  1217  00167C  6E59               	movwf	(sprintf@s+1)^0,c
  1218  00167E  0E01               	movlw	low STR_4
  1219  001680  6E5A               	movwf	sprintf@fmt^0,c
  1220  001682  0E10               	movlw	high STR_4
  1221  001684  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1222  001686  C078  F05C         	movff	_set_point,?_sprintf+4
  1223  00168A  C079  F05D         	movff	_set_point+1,?_sprintf+5
  1224  00168E  ECC8  F013         	call	_sprintf	;wreg free
  1225  001692                     
  1226                           ;newmain.c: 137:       LCDPutStr(txt_new);
  1227  001692  0E9E               	movlw	low _txt_new
  1228  001694  6E0A               	movwf	LCDPutStr@str^0,c
  1229  001696  0E00               	movlw	high _txt_new
  1230  001698  6E0B               	movwf	(LCDPutStr@str+1)^0,c
  1231  00169A  ECF3  F012         	call	_LCDPutStr	;wreg free
  1232  00169E                     
  1233                           ;newmain.c: 138:       _delay((unsigned long)((1600)*(8e6/4000.0)));
  1234  00169E  0E11               	movlw	17
  1235  0016A0  6E5F               	movwf	(??_main+1)^0,c
  1236  0016A2  0E3C               	movlw	60
  1237  0016A4  6E5E               	movwf	??_main^0,c
  1238  0016A6  0ECB               	movlw	203
  1239  0016A8                     u2867:
  1240  0016A8  2EE8               	decfsz	wreg,f,c
  1241  0016AA  D7FE               	bra	u2867
  1242  0016AC  2E5E               	decfsz	??_main^0,f,c
  1243  0016AE  D7FC               	bra	u2867
  1244  0016B0  2E5F               	decfsz	(??_main+1)^0,f,c
  1245  0016B2  D7FA               	bra	u2867
  1246  0016B4  F000               	nop	
  1247  0016B6                     
  1248                           ;newmain.c: 147:           if(result>set_point)
  1249  0016B6  0100               	movlb	0	; () banked
  1250  0016B8  51C9               	movf	main@result& (0+255),w,b
  1251  0016BA  5D78               	subwf	_set_point& (0+255),w,b
  1252  0016BC  5179               	movf	(_set_point+1)& (0+255),w,b
  1253  0016BE  0A80               	xorlw	128
  1254  0016C0  6E5E               	movwf	??_main^0,c
  1255  0016C2  51CA               	movf	(main@result+1)& (0+255),w,b
  1256  0016C4  0A80               	xorlw	128
  1257  0016C6  585E               	subwfb	??_main^0,w,c
  1258  0016C8  B0D8               	btfsc	status,0,c
  1259  0016CA  EF69  F00B         	goto	u2491
  1260  0016CE  EF6B  F00B         	goto	u2490
  1261  0016D2                     u2491:
  1262  0016D2  EF8A  F00B         	goto	l3026
  1263  0016D6                     u2490:
  1264  0016D6                     
  1265                           ; BSR set to: 0
  1266                           ;newmain.c: 148:           { LATC4=0;
  1267  0016D6  988B               	bcf	3979,4,c	;volatile
  1268                           
  1269                           ;newmain.c: 149:                LATC5=1;
  1270  0016D8  8A8B               	bsf	3979,5,c	;volatile
  1271  0016DA                     
  1272                           ; BSR set to: 0
  1273                           ;newmain.c: 150:                LCDPutCmd(0x01);
  1274  0016DA  0E01               	movlw	1
  1275  0016DC  EC50  F014         	call	_LCDPutCmd
  1276                           
  1277                           ;newmain.c: 151:                LCDGoto(0,0);
  1278  0016E0  0E00               	movlw	0
  1279  0016E2  6E0A               	movwf	LCDGoto@ln^0,c
  1280  0016E4  0E00               	movlw	0
  1281  0016E6  EC31  F013         	call	_LCDGoto
  1282  0016EA                     
  1283                           ;newmain.c: 152:                 LCDPutStr("Fan ON");
  1284  0016EA  0E66               	movlw	low STR_5
  1285  0016EC  6E0A               	movwf	LCDPutStr@str^0,c
  1286  0016EE  0E10               	movlw	high STR_5
  1287  0016F0  6E0B               	movwf	(LCDPutStr@str+1)^0,c
  1288  0016F2  ECF3  F012         	call	_LCDPutStr	;wreg free
  1289  0016F6                     l3024:
  1290                           
  1291                           ;newmain.c: 153:                 _delay((unsigned long)((800)*(8e6/4000.0)));
  1292  0016F6  0E09               	movlw	9
  1293  0016F8  6E5F               	movwf	(??_main+1)^0,c
  1294  0016FA  0E1E               	movlw	30
  1295  0016FC  6E5E               	movwf	??_main^0,c
  1296  0016FE  0EE4               	movlw	228
  1297  001700                     u2877:
  1298  001700  2EE8               	decfsz	wreg,f,c
  1299  001702  D7FE               	bra	u2877
  1300  001704  2E5E               	decfsz	??_main^0,f,c
  1301  001706  D7FC               	bra	u2877
  1302  001708  2E5F               	decfsz	(??_main+1)^0,f,c
  1303  00170A  D7FA               	bra	u2877
  1304  00170C  F000 F000          	nop2	
  1305                           
  1306                           ;newmain.c: 157:           }
  1307  001710  EF07  F00B         	goto	l2996
  1308  001714                     l3026:
  1309                           
  1310                           ; BSR set to: 0
  1311  001714  5178               	movf	_set_point& (0+255),w,b
  1312  001716  5DC9               	subwf	main@result& (0+255),w,b
  1313  001718  51CA               	movf	(main@result+1)& (0+255),w,b
  1314  00171A  0A80               	xorlw	128
  1315  00171C  6E5E               	movwf	??_main^0,c
  1316  00171E  5179               	movf	(_set_point+1)& (0+255),w,b
  1317  001720  0A80               	xorlw	128
  1318  001722  585E               	subwfb	??_main^0,w,c
  1319  001724  B0D8               	btfsc	status,0,c
  1320  001726  EF97  F00B         	goto	u2501
  1321  00172A  EF99  F00B         	goto	u2500
  1322  00172E                     u2501:
  1323  00172E  EFAB  F00B         	goto	l86
  1324  001732                     u2500:
  1325  001732                     
  1326                           ; BSR set to: 0
  1327                           ;newmain.c: 159:           {;newmain.c: 160:               LATC5=0;
  1328  001732  9A8B               	bcf	3979,5,c	;volatile
  1329                           
  1330                           ;newmain.c: 161:                LATC4=1;
  1331  001734  888B               	bsf	3979,4,c	;volatile
  1332  001736                     
  1333                           ; BSR set to: 0
  1334                           ;newmain.c: 162:                 LCDPutCmd(0x01);
  1335  001736  0E01               	movlw	1
  1336  001738  EC50  F014         	call	_LCDPutCmd
  1337                           
  1338                           ;newmain.c: 163:                LCDGoto(0,0);
  1339  00173C  0E00               	movlw	0
  1340  00173E  6E0A               	movwf	LCDGoto@ln^0,c
  1341  001740  0E00               	movlw	0
  1342  001742  EC31  F013         	call	_LCDGoto
  1343  001746                     
  1344                           ;newmain.c: 164:                 LCDPutStr("Heater ON");
  1345  001746  0E5C               	movlw	low STR_6
  1346  001748  6E0A               	movwf	LCDPutStr@str^0,c
  1347  00174A  0E10               	movlw	high STR_6
  1348  00174C  6E0B               	movwf	(LCDPutStr@str+1)^0,c
  1349  00174E  ECF3  F012         	call	_LCDPutStr	;wreg free
  1350  001752  EF7B  F00B         	goto	l3024
  1351  001756                     l86:
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;newmain.c: 172:           { LATC5=0;
  1355  001756  9A8B               	bcf	3979,5,c	;volatile
  1356                           
  1357                           ;newmain.c: 173:               LATC4=0;
  1358  001758  988B               	bcf	3979,4,c	;volatile
  1359  00175A                     
  1360                           ; BSR set to: 0
  1361                           ;newmain.c: 174:               LCDPutCmd(0x01);
  1362  00175A  0E01               	movlw	1
  1363  00175C  EC50  F014         	call	_LCDPutCmd
  1364                           
  1365                           ;newmain.c: 175:               LCDGoto(0,0);
  1366  001760  0E00               	movlw	0
  1367  001762  6E0A               	movwf	LCDGoto@ln^0,c
  1368  001764  0E00               	movlw	0
  1369  001766  EC31  F013         	call	_LCDGoto
  1370  00176A                     
  1371                           ;newmain.c: 176:                 LCDPutStr("Temp as desired");
  1372  00176A  0E21               	movlw	low STR_7
  1373  00176C  6E0A               	movwf	LCDPutStr@str^0,c
  1374  00176E  0E10               	movlw	high STR_7
  1375  001770  6E0B               	movwf	(LCDPutStr@str+1)^0,c
  1376  001772  ECF3  F012         	call	_LCDPutStr	;wreg free
  1377  001776  EF7B  F00B         	goto	l3024
  1378  00177A  EF00  F000         	goto	start
  1379  00177E                     __end_of_main:
  1380                           	callstack 0
  1381                           
  1382 ;; *************** function _sprintf *****************
  1383 ;; Defined at:
  1384 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  s               2   87[COMRAM] PTR unsigned char 
  1387 ;;		 -> txt_new(16), txt(16), 
  1388 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1389 ;;		 -> STR_4(16), STR_3(16), 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  f               6    2[BANK0 ] struct _IO_FILE
  1392 ;;  ap              2    0[BANK0 ] PTR void [1]
  1393 ;;		 -> ?_sprintf(2), 
  1394 ;;  ret             2    0        int 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  2   87[COMRAM] int 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1404 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;Total ram usage:       14 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 7
  1411 ;; This function calls:
  1412 ;;		_vfprintf
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text1
  1419  002790                     __ptext1:
  1420                           	callstack 0
  1421  002790                     _sprintf:
  1422                           	callstack 23
  1423  002790  0E5C               	movlw	low (?_sprintf+4)
  1424  002792  0100               	movlb	0	; () banked
  1425  002794  6FBE               	movwf	sprintf@ap& (0+255),b
  1426  002796  0E00               	movlw	high (?_sprintf+4)
  1427  002798  6FBF               	movwf	(sprintf@ap+1)& (0+255),b
  1428  00279A  C058  F0C0         	movff	sprintf@s,sprintf@f
  1429  00279E  C059  F0C1         	movff	sprintf@s+1,sprintf@f+1
  1430  0027A2                     
  1431                           ; BSR set to: 0
  1432  0027A2  0E00               	movlw	0
  1433  0027A4  6FC3               	movwf	(sprintf@f+3)& (0+255),b
  1434  0027A6  0E00               	movlw	0
  1435  0027A8  6FC2               	movwf	(sprintf@f+2)& (0+255),b
  1436  0027AA                     
  1437                           ; BSR set to: 0
  1438  0027AA  0E00               	movlw	0
  1439  0027AC  6FC5               	movwf	(sprintf@f+5)& (0+255),b
  1440  0027AE  0E00               	movlw	0
  1441  0027B0  6FC4               	movwf	(sprintf@f+4)& (0+255),b
  1442  0027B2                     
  1443                           ; BSR set to: 0
  1444  0027B2  0EC0               	movlw	low sprintf@f
  1445  0027B4  6E50               	movwf	vfprintf@fp^0,c
  1446  0027B6  0E00               	movlw	high sprintf@f
  1447  0027B8  6E51               	movwf	(vfprintf@fp+1)^0,c
  1448  0027BA  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1449  0027BE  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1450  0027C2  0EBE               	movlw	low sprintf@ap
  1451  0027C4  6E54               	movwf	vfprintf@ap^0,c
  1452  0027C6  0E00               	movlw	high sprintf@ap
  1453  0027C8  6E55               	movwf	(vfprintf@ap+1)^0,c
  1454  0027CA  EC69  F013         	call	_vfprintf	;wreg free
  1455  0027CE  0100               	movlb	0	; () banked
  1456  0027D0  51C2               	movf	(sprintf@f+2)& (0+255),w,b
  1457  0027D2  2458               	addwf	sprintf@s^0,w,c
  1458  0027D4  6ED9               	movwf	fsr2l,c
  1459  0027D6  51C3               	movf	(sprintf@f+3)& (0+255),w,b
  1460  0027D8  2059               	addwfc	(sprintf@s+1)^0,w,c
  1461  0027DA  6EDA               	movwf	fsr2h,c
  1462  0027DC  0E00               	movlw	0
  1463  0027DE  6EDF               	movwf	indf2,c
  1464  0027E0                     
  1465                           ; BSR set to: 0
  1466  0027E0  0012               	return		;funcret
  1467  0027E2                     __end_of_sprintf:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function _vfprintf *****************
  1471 ;; Defined at:
  1472 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1475 ;;		 -> sprintf@f(6), 
  1476 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1477 ;;		 -> STR_4(16), STR_3(16), 
  1478 ;;  ap              2   83[COMRAM] PTR PTR void 
  1479 ;;		 -> sprintf@ap(2), 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1482 ;;		 -> STR_4(16), STR_3(16), 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  2   79[COMRAM] int 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1492 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;Total ram usage:        8 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 6
  1499 ;; This function calls:
  1500 ;;		_vfpfcnvrt
  1501 ;; This function is called by:
  1502 ;;		_sprintf
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text2
  1507  0026D2                     __ptext2:
  1508                           	callstack 0
  1509  0026D2                     _vfprintf:
  1510                           	callstack 23
  1511  0026D2                     
  1512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1513  0026D2  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1514  0026D6  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1515  0026DA                     
  1516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1517  0026DA  0E00               	movlw	0
  1518  0026DC  0100               	movlb	0	; () banked
  1519  0026DE  6F61               	movwf	(_nout+1)& (0+255),b
  1520  0026E0  0E00               	movlw	0
  1521  0026E2  6F60               	movwf	_nout& (0+255),b
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1524  0026E4  EF87  F013         	goto	l2694
  1525  0026E8                     l2692:
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1529  0026E8  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1530  0026EC  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1531  0026F0  0E56               	movlw	low vfprintf@cfmt
  1532  0026F2  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1533  0026F4  0E00               	movlw	high vfprintf@cfmt
  1534  0026F6  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1535  0026F8  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1536  0026FC  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1537  002700  EC30  F00D         	call	_vfpfcnvrt	;wreg free
  1538  002704  5040               	movf	?_vfpfcnvrt^0,w,c
  1539  002706  0100               	movlb	0	; () banked
  1540  002708  2760               	addwf	_nout& (0+255),f,b
  1541  00270A  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1542  00270C  2361               	addwfc	(_nout+1)& (0+255),f,b
  1543  00270E                     l2694:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1547  00270E  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1548  002712  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1549  002716                     	if	0	;tblptru may be non-zero
  1550  002716                     	endif
  1551  002716                     	if	0	;tblptru may be non-zero
  1552  002716                     	endif
  1553  002716  0008               	tblrd		*
  1554  002718  50F5               	movf	tablat,w,c
  1555  00271A  0900               	iorlw	0
  1556  00271C  A4D8               	btfss	status,2,c
  1557  00271E  EF93  F013         	goto	u2261
  1558  002722  EF95  F013         	goto	u2260
  1559  002726                     u2261:
  1560  002726  EF74  F013         	goto	l2692
  1561  00272A                     u2260:
  1562  00272A                     
  1563                           ; BSR set to: 0
  1564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1565  00272A  C060  F050         	movff	_nout,?_vfprintf
  1566  00272E  C061  F051         	movff	_nout+1,?_vfprintf+1
  1567  002732                     
  1568                           ; BSR set to: 0
  1569  002732  0012               	return		;funcret
  1570  002734                     __end_of_vfprintf:
  1571                           	callstack 0
  1572                           
  1573 ;; *************** function _vfpfcnvrt *****************
  1574 ;; Defined at:
  1575 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1578 ;;		 -> sprintf@f(6), 
  1579 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1580 ;;		 -> vfprintf@cfmt(2), 
  1581 ;;  ap              2   67[COMRAM] PTR PTR void 
  1582 ;;		 -> sprintf@ap(2), 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  ll              8   71[COMRAM] long long 
  1585 ;;  llu             8    0        unsigned long long 
  1586 ;;  f               4    0        unsigned long long 
  1587 ;;  vp              3    0        PTR void 
  1588 ;;  ct              3    0        unsigned char [3]
  1589 ;;  cp              3    0        PTR unsigned char 
  1590 ;;  i               2    0        int 
  1591 ;;  done            2    0        int 
  1592 ;;  c               1    0        unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  2   63[COMRAM] int 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1602 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;Total ram usage:       16 bytes
  1607 ;; Hardware stack levels used: 1
  1608 ;; Hardware stack levels required when called: 5
  1609 ;; This function calls:
  1610 ;;		_dtoa
  1611 ;;		_fputc
  1612 ;; This function is called by:
  1613 ;;		_vfprintf
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text3
  1618  001A60                     __ptext3:
  1619                           	callstack 0
  1620  001A60                     _vfpfcnvrt:
  1621                           	callstack 23
  1622  001A60                     
  1623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1624  001A60  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1625  001A64  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1626  001A68  CFDE FFF6          	movff	postinc2,tblptrl
  1627  001A6C  CFDD FFF7          	movff	postdec2,tblptrh
  1628  001A70                     	if	0	;tblptru may be non-zero
  1629  001A70                     	endif
  1630  001A70                     	if	0	;tblptru may be non-zero
  1631  001A70                     	endif
  1632  001A70  0008               	tblrd		*
  1633  001A72  50F5               	movf	tablat,w,c
  1634  001A74  0A25               	xorlw	37
  1635  001A76  A4D8               	btfss	status,2,c
  1636  001A78  EF40  F00D         	goto	u1821
  1637  001A7C  EF42  F00D         	goto	u1820
  1638  001A80                     u1821:
  1639  001A80  EFEE  F00D         	goto	l2428
  1640  001A84                     u1820:
  1641  001A84                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1643  001A84  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1644  001A88  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1645  001A8C  2ADE               	incf	postinc2,f,c
  1646  001A8E  0E00               	movlw	0
  1647  001A90  22DD               	addwfc	postdec2,f,c
  1648  001A92                     
  1649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1650  001A92  0E00               	movlw	0
  1651  001A94  0100               	movlb	0	; () banked
  1652  001A96  6F63               	movwf	(_width+1)& (0+255),b
  1653  001A98  0E00               	movlw	0
  1654  001A9A  6F62               	movwf	_width& (0+255),b
  1655  001A9C  C062  F066         	movff	_width,_flags
  1656  001AA0  C063  F067         	movff	_width+1,_flags+1
  1657  001AA4                     
  1658                           ; BSR set to: 0
  1659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1660  001AA4  6964               	setf	_prec& (0+255),b
  1661  001AA6  6965               	setf	(_prec+1)& (0+255),b
  1662  001AA8                     
  1663                           ; BSR set to: 0
  1664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1665  001AA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1666  001AAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1667  001AB0  CFDE FFF6          	movff	postinc2,tblptrl
  1668  001AB4  CFDD FFF7          	movff	postdec2,tblptrh
  1669  001AB8                     	if	0	;tblptru may be non-zero
  1670  001AB8                     	endif
  1671  001AB8                     	if	0	;tblptru may be non-zero
  1672  001AB8                     	endif
  1673  001AB8  0008               	tblrd		*
  1674  001ABA  50F5               	movf	tablat,w,c
  1675  001ABC  0A64               	xorlw	100
  1676  001ABE  B4D8               	btfsc	status,2,c
  1677  001AC0  EF64  F00D         	goto	u1831
  1678  001AC4  EF66  F00D         	goto	u1830
  1679  001AC8                     u1831:
  1680  001AC8  EF78  F00D         	goto	l2406
  1681  001ACC                     u1830:
  1682  001ACC                     
  1683                           ; BSR set to: 0
  1684  001ACC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1685  001AD0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1686  001AD4  CFDE FFF6          	movff	postinc2,tblptrl
  1687  001AD8  CFDD FFF7          	movff	postdec2,tblptrh
  1688  001ADC                     	if	0	;tblptru may be non-zero
  1689  001ADC                     	endif
  1690  001ADC                     	if	0	;tblptru may be non-zero
  1691  001ADC                     	endif
  1692  001ADC  0008               	tblrd		*
  1693  001ADE  50F5               	movf	tablat,w,c
  1694  001AE0  0A69               	xorlw	105
  1695  001AE2  A4D8               	btfss	status,2,c
  1696  001AE4  EF76  F00D         	goto	u1841
  1697  001AE8  EF78  F00D         	goto	u1840
  1698  001AEC                     u1841:
  1699  001AEC  EFB8  F00D         	goto	l2412
  1700  001AF0                     u1840:
  1701  001AF0                     l2406:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1705  001AF0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1706  001AF4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1707  001AF8  2ADE               	incf	postinc2,f,c
  1708  001AFA  0E00               	movlw	0
  1709  001AFC  22DD               	addwfc	postdec2,f,c
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1712  001AFE  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1713  001B02  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1714  001B06  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1715  001B0A  0E02               	movlw	2
  1716  001B0C  26DE               	addwf	postinc2,f,c
  1717  001B0E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1718  001B12  0E00               	movlw	0
  1719  001B14  22DD               	addwfc	postdec2,f,c
  1720  001B16  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1721  001B1A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1722  001B1E  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1723  001B22  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1724  001B26  0E00               	movlw	0
  1725  001B28  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1726  001B2A  0EFF               	movlw	-1
  1727  001B2C  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1728  001B2E  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1729  001B30  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1730  001B32  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1731  001B34  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1732  001B36  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1733  001B38                     
  1734                           ; BSR set to: 0
  1735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1736  001B38  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1737  001B3C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1738  001B40  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1739  001B44  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1740  001B48  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1741  001B4C  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1742  001B50  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1743  001B54  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1744  001B58  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1745  001B5C  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1746  001B60  ECBF  F00B         	call	_dtoa	;wreg free
  1747  001B64  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1748  001B68  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1749  001B6C  EF09  F00E         	goto	l1091
  1750  001B70                     l2412:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1754  001B70  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1755  001B74  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1756  001B78  CFDE FFF6          	movff	postinc2,tblptrl
  1757  001B7C  CFDD FFF7          	movff	postdec2,tblptrh
  1758  001B80                     	if	0	;tblptru may be non-zero
  1759  001B80                     	endif
  1760  001B80                     	if	0	;tblptru may be non-zero
  1761  001B80                     	endif
  1762  001B80  0008               	tblrd		*
  1763  001B82  50F5               	movf	tablat,w,c
  1764  001B84  0A25               	xorlw	37
  1765  001B86  A4D8               	btfss	status,2,c
  1766  001B88  EFC8  F00D         	goto	u1851
  1767  001B8C  EFCA  F00D         	goto	u1850
  1768  001B90                     u1851:
  1769  001B90  EFE1  F00D         	goto	l2422
  1770  001B94                     u1850:
  1771  001B94                     
  1772                           ; BSR set to: 0
  1773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1774  001B94  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1775  001B98  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1776  001B9C  2ADE               	incf	postinc2,f,c
  1777  001B9E  0E00               	movlw	0
  1778  001BA0  22DD               	addwfc	postdec2,f,c
  1779  001BA2                     
  1780                           ; BSR set to: 0
  1781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1782  001BA2  0E00               	movlw	0
  1783  001BA4  6E02               	movwf	(fputc@c+1)^0,c
  1784  001BA6  0E25               	movlw	37
  1785  001BA8  6E01               	movwf	fputc@c^0,c
  1786  001BAA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1787  001BAE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1788  001BB2  ECD6  F011         	call	_fputc	;wreg free
  1789  001BB6                     l2418:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1792  001BB6  0E00               	movlw	0
  1793  001BB8  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1794  001BBA  0E01               	movlw	1
  1795  001BBC  6E40               	movwf	?_vfpfcnvrt^0,c
  1796  001BBE  EF09  F00E         	goto	l1091
  1797  001BC2                     l2422:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1801  001BC2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1802  001BC6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1803  001BCA  2ADE               	incf	postinc2,f,c
  1804  001BCC  0E00               	movlw	0
  1805  001BCE  22DD               	addwfc	postdec2,f,c
  1806  001BD0                     
  1807                           ; BSR set to: 0
  1808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1809  001BD0  0E00               	movlw	0
  1810  001BD2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1811  001BD4  0E00               	movlw	0
  1812  001BD6  6E40               	movwf	?_vfpfcnvrt^0,c
  1813  001BD8  EF09  F00E         	goto	l1091
  1814  001BDC                     l2428:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1817  001BDC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1818  001BE0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1819  001BE4  CFDE FFF6          	movff	postinc2,tblptrl
  1820  001BE8  CFDD FFF7          	movff	postdec2,tblptrh
  1821  001BEC                     	if	0	;tblptru may be non-zero
  1822  001BEC                     	endif
  1823  001BEC                     	if	0	;tblptru may be non-zero
  1824  001BEC                     	endif
  1825  001BEC  0008               	tblrd		*
  1826  001BEE  50F5               	movf	tablat,w,c
  1827  001BF0  6E01               	movwf	fputc@c^0,c
  1828  001BF2  6A02               	clrf	(fputc@c+1)^0,c
  1829  001BF4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1830  001BF8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1831  001BFC  ECD6  F011         	call	_fputc	;wreg free
  1832  001C00                     
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1834  001C00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1835  001C04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1836  001C08  2ADE               	incf	postinc2,f,c
  1837  001C0A  0E00               	movlw	0
  1838  001C0C  22DD               	addwfc	postdec2,f,c
  1839  001C0E  EFDB  F00D         	goto	l2418
  1840  001C12                     l1091:
  1841  001C12  0012               	return		;funcret
  1842  001C14                     __end_of_vfpfcnvrt:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _dtoa *****************
  1846 ;; Defined at:
  1847 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1850 ;;		 -> sprintf@f(6), 
  1851 ;;  d               8   29[COMRAM] long long 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  n               8   53[COMRAM] long long 
  1854 ;;  i               2   61[COMRAM] int 
  1855 ;;  s               2   51[COMRAM] int 
  1856 ;;  w               2   49[COMRAM] int 
  1857 ;;  p               2   47[COMRAM] int 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2   27[COMRAM] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1867 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;Total ram usage:       36 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 4
  1874 ;; This function calls:
  1875 ;;		___aodiv
  1876 ;;		___aomod
  1877 ;;		_abs
  1878 ;;		_pad
  1879 ;; This function is called by:
  1880 ;;		_vfpfcnvrt
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text4
  1885  00177E                     __ptext4:
  1886                           	callstack 0
  1887  00177E                     _dtoa:
  1888                           	callstack 23
  1889  00177E                     
  1890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1891  00177E  C01E  F036         	movff	dtoa@d,dtoa@n
  1892  001782  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1893  001786  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1894  00178A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1895  00178E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1896  001792  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1897  001796  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1898  00179A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1899  00179E                     
  1900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1901  00179E  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1902  0017A0  EFD4  F00B         	goto	u1661
  1903  0017A4  EFD7  F00B         	goto	u1660
  1904  0017A8                     u1661:
  1905  0017A8  0E01               	movlw	1
  1906  0017AA  EFD8  F00B         	goto	u1670
  1907  0017AE                     u1660:
  1908  0017AE  0E00               	movlw	0
  1909  0017B0                     u1670:
  1910  0017B0  6E34               	movwf	dtoa@s^0,c
  1911  0017B2  6A35               	clrf	(dtoa@s+1)^0,c
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1914  0017B4  5034               	movf	dtoa@s^0,w,c
  1915  0017B6  1035               	iorwf	(dtoa@s+1)^0,w,c
  1916  0017B8  B4D8               	btfsc	status,2,c
  1917  0017BA  EFE1  F00B         	goto	u1681
  1918  0017BE  EFE3  F00B         	goto	u1680
  1919  0017C2                     u1681:
  1920  0017C2  EFF3  F00B         	goto	l2328
  1921  0017C6                     u1680:
  1922  0017C6                     
  1923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1924  0017C6  1E3D               	comf	(dtoa@n+7)^0,f,c
  1925  0017C8  1E3C               	comf	(dtoa@n+6)^0,f,c
  1926  0017CA  1E3B               	comf	(dtoa@n+5)^0,f,c
  1927  0017CC  1E3A               	comf	(dtoa@n+4)^0,f,c
  1928  0017CE  1E39               	comf	(dtoa@n+3)^0,f,c
  1929  0017D0  1E38               	comf	(dtoa@n+2)^0,f,c
  1930  0017D2  1E37               	comf	(dtoa@n+1)^0,f,c
  1931  0017D4  6C36               	negf	dtoa@n^0,c
  1932  0017D6  0E00               	movlw	0
  1933  0017D8  2237               	addwfc	(dtoa@n+1)^0,f,c
  1934  0017DA  2238               	addwfc	(dtoa@n+2)^0,f,c
  1935  0017DC  2239               	addwfc	(dtoa@n+3)^0,f,c
  1936  0017DE  223A               	addwfc	(dtoa@n+4)^0,f,c
  1937  0017E0  223B               	addwfc	(dtoa@n+5)^0,f,c
  1938  0017E2  223C               	addwfc	(dtoa@n+6)^0,f,c
  1939  0017E4  223D               	addwfc	(dtoa@n+7)^0,f,c
  1940  0017E6                     l2328:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1943  0017E6  0100               	movlb	0	; () banked
  1944  0017E8  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1945  0017EA  EFF9  F00B         	goto	u1691
  1946  0017EE  EFFB  F00B         	goto	u1690
  1947  0017F2                     u1691:
  1948  0017F2  EFFC  F00B         	goto	l2332
  1949  0017F6                     u1690:
  1950  0017F6                     
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1953  0017F6  9366               	bcf	_flags& (0+255),1,b
  1954  0017F8                     l2332:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1958  0017F8  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1959  0017FA  EF09  F00C         	goto	u1700
  1960  0017FE  5165               	movf	(_prec+1)& (0+255),w,b
  1961  001800  E106               	bnz	u1701
  1962  001802  0564               	decf	_prec& (0+255),w,b
  1963  001804  B0D8               	btfsc	status,0,c
  1964  001806  EF07  F00C         	goto	u1701
  1965  00180A  EF09  F00C         	goto	u1700
  1966  00180E                     u1701:
  1967  00180E  EF0F  F00C         	goto	l1064
  1968  001812                     u1700:
  1969  001812                     
  1970                           ; BSR set to: 0
  1971  001812  0E00               	movlw	0
  1972  001814  6E31               	movwf	(dtoa@p+1)^0,c
  1973  001816  0E01               	movlw	1
  1974  001818  6E30               	movwf	dtoa@p^0,c
  1975  00181A  EF13  F00C         	goto	l1066
  1976  00181E                     l1064:
  1977                           
  1978                           ; BSR set to: 0
  1979  00181E  C064  F030         	movff	_prec,dtoa@p
  1980  001822  C065  F031         	movff	_prec+1,dtoa@p+1
  1981  001826                     l1066:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1985  001826  C062  F032         	movff	_width,dtoa@w
  1986  00182A  C063  F033         	movff	_width+1,dtoa@w+1
  1987  00182E                     
  1988                           ; BSR set to: 0
  1989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1990  00182E  5034               	movf	dtoa@s^0,w,c
  1991  001830  1035               	iorwf	(dtoa@s+1)^0,w,c
  1992  001832  A4D8               	btfss	status,2,c
  1993  001834  EF1E  F00C         	goto	u1711
  1994  001838  EF20  F00C         	goto	u1710
  1995  00183C                     u1711:
  1996  00183C  EF27  F00C         	goto	l2340
  1997  001840                     u1710:
  1998  001840                     
  1999                           ; BSR set to: 0
  2000  001840  A566               	btfss	_flags& (0+255),2,b
  2001  001842  EF25  F00C         	goto	u1721
  2002  001846  EF27  F00C         	goto	u1720
  2003  00184A                     u1721:
  2004  00184A  EF2A  F00C         	goto	l2342
  2005  00184E                     u1720:
  2006  00184E                     l2340:
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2010  00184E  0632               	decf	dtoa@w^0,f,c
  2011  001850  A0D8               	btfss	status,0,c
  2012  001852  0633               	decf	(dtoa@w+1)^0,f,c
  2013  001854                     l2342:
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2017  001854  0E00               	movlw	0
  2018  001856  6E3F               	movwf	(dtoa@i+1)^0,c
  2019  001858  0E1F               	movlw	31
  2020  00185A  6E3E               	movwf	dtoa@i^0,c
  2021  00185C                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2024  00185C  0E00               	movlw	0
  2025  00185E  6F9D               	movwf	(_dbuf+31)& (0+255),b
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2028  001860  EFAE  F00C         	goto	l2356
  2029  001864                     l2346:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2032  001864  063E               	decf	dtoa@i^0,f,c
  2033  001866  A0D8               	btfss	status,0,c
  2034  001868  063F               	decf	(dtoa@i+1)^0,f,c
  2035  00186A                     
  2036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2037  00186A  0E7E               	movlw	low _dbuf
  2038  00186C  243E               	addwf	dtoa@i^0,w,c
  2039  00186E  6ED9               	movwf	fsr2l,c
  2040  001870  0E00               	movlw	high _dbuf
  2041  001872  203F               	addwfc	(dtoa@i+1)^0,w,c
  2042  001874  6EDA               	movwf	fsr2h,c
  2043  001876  C036  F001         	movff	dtoa@n,___aomod@dividend
  2044  00187A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2045  00187E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2046  001882  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2047  001886  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2048  00188A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2049  00188E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2050  001892  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2051  001896  0E0A               	movlw	10
  2052  001898  6E09               	movwf	___aomod@divisor^0,c
  2053  00189A  0E00               	movlw	0
  2054  00189C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2055  00189E  0E00               	movlw	0
  2056  0018A0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2057  0018A2  0E00               	movlw	0
  2058  0018A4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2059  0018A6  0E00               	movlw	0
  2060  0018A8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2061  0018AA  0E00               	movlw	0
  2062  0018AC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2063  0018AE  0E00               	movlw	0
  2064  0018B0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2065  0018B2  0E00               	movlw	0
  2066  0018B4  6E10               	movwf	(___aomod@divisor+7)^0,c
  2067  0018B6  ECA8  F00F         	call	___aomod	;wreg free
  2068  0018BA  C001  F026         	movff	?___aomod,??_dtoa
  2069  0018BE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2070  0018C2  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2071  0018C6  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2072  0018CA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2073  0018CE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2074  0018D2  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2075  0018D6  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2076  0018DA  C026  F013         	movff	??_dtoa,abs@a
  2077  0018DE  C028  F014         	movff	??_dtoa+2,abs@a+1
  2078  0018E2  EC13  F014         	call	_abs	;wreg free
  2079  0018E6  5013               	movf	?_abs^0,w,c
  2080  0018E8  0F30               	addlw	48
  2081  0018EA  6EDF               	movwf	indf2,c
  2082  0018EC                     
  2083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2084  0018EC  0630               	decf	dtoa@p^0,f,c
  2085  0018EE  A0D8               	btfss	status,0,c
  2086  0018F0  0631               	decf	(dtoa@p+1)^0,f,c
  2087  0018F2                     
  2088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2089  0018F2  0632               	decf	dtoa@w^0,f,c
  2090  0018F4  A0D8               	btfss	status,0,c
  2091  0018F6  0633               	decf	(dtoa@w+1)^0,f,c
  2092  0018F8                     
  2093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2094  0018F8  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2095  0018FC  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2096  001900  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2097  001904  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2098  001908  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2099  00190C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2100  001910  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2101  001914  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2102  001918  0E0A               	movlw	10
  2103  00191A  6E09               	movwf	___aodiv@divisor^0,c
  2104  00191C  0E00               	movlw	0
  2105  00191E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2106  001920  0E00               	movlw	0
  2107  001922  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2108  001924  0E00               	movlw	0
  2109  001926  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2110  001928  0E00               	movlw	0
  2111  00192A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2112  00192C  0E00               	movlw	0
  2113  00192E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2114  001930  0E00               	movlw	0
  2115  001932  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2116  001934  0E00               	movlw	0
  2117  001936  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2118  001938  ECE4  F00E         	call	___aodiv	;wreg free
  2119  00193C  C001  F036         	movff	?___aodiv,dtoa@n
  2120  001940  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2121  001944  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2122  001948  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2123  00194C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2124  001950  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2125  001954  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2126  001958  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2127  00195C                     l2356:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2130  00195C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2131  00195E  EFB9  F00C         	goto	u1731
  2132  001962  503F               	movf	(dtoa@i+1)^0,w,c
  2133  001964  E108               	bnz	u1730
  2134  001966  043E               	decf	dtoa@i^0,w,c
  2135  001968  A0D8               	btfss	status,0,c
  2136  00196A  EFB9  F00C         	goto	u1731
  2137  00196E  EFBB  F00C         	goto	u1730
  2138  001972                     u1731:
  2139  001972  EFEC  F00C         	goto	l2366
  2140  001976                     u1730:
  2141  001976  5036               	movf	dtoa@n^0,w,c
  2142  001978  1037               	iorwf	(dtoa@n+1)^0,w,c
  2143  00197A  1038               	iorwf	(dtoa@n+2)^0,w,c
  2144  00197C  1039               	iorwf	(dtoa@n+3)^0,w,c
  2145  00197E  103A               	iorwf	(dtoa@n+4)^0,w,c
  2146  001980  103B               	iorwf	(dtoa@n+5)^0,w,c
  2147  001982  103C               	iorwf	(dtoa@n+6)^0,w,c
  2148  001984  103D               	iorwf	(dtoa@n+7)^0,w,c
  2149  001986  A4D8               	btfss	status,2,c
  2150  001988  EFC8  F00C         	goto	u1741
  2151  00198C  EFCA  F00C         	goto	u1740
  2152  001990                     u1741:
  2153  001990  EF32  F00C         	goto	l2346
  2154  001994                     u1740:
  2155  001994  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2156  001996  EFD7  F00C         	goto	u1750
  2157  00199A  5031               	movf	(dtoa@p+1)^0,w,c
  2158  00199C  E106               	bnz	u1751
  2159  00199E  0430               	decf	dtoa@p^0,w,c
  2160  0019A0  B0D8               	btfsc	status,0,c
  2161  0019A2  EFD5  F00C         	goto	u1751
  2162  0019A6  EFD7  F00C         	goto	u1750
  2163  0019AA                     u1751:
  2164  0019AA  EF32  F00C         	goto	l2346
  2165  0019AE                     u1750:
  2166  0019AE  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2167  0019B0  EFE2  F00C         	goto	u1761
  2168  0019B4  5033               	movf	(dtoa@w+1)^0,w,c
  2169  0019B6  E108               	bnz	u1760
  2170  0019B8  0432               	decf	dtoa@w^0,w,c
  2171  0019BA  A0D8               	btfss	status,0,c
  2172  0019BC  EFE2  F00C         	goto	u1761
  2173  0019C0  EFE4  F00C         	goto	u1760
  2174  0019C4                     u1761:
  2175  0019C4  EFEC  F00C         	goto	l2366
  2176  0019C8                     u1760:
  2177  0019C8  0100               	movlb	0	; () banked
  2178  0019CA  B366               	btfsc	_flags& (0+255),1,b
  2179  0019CC  EFEA  F00C         	goto	u1771
  2180  0019D0  EFEC  F00C         	goto	u1770
  2181  0019D4                     u1771:
  2182  0019D4  EF32  F00C         	goto	l2346
  2183  0019D8                     u1770:
  2184  0019D8                     l2366:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2187  0019D8  5034               	movf	dtoa@s^0,w,c
  2188  0019DA  1035               	iorwf	(dtoa@s+1)^0,w,c
  2189  0019DC  A4D8               	btfss	status,2,c
  2190  0019DE  EFF3  F00C         	goto	u1781
  2191  0019E2  EFF5  F00C         	goto	u1780
  2192  0019E6                     u1781:
  2193  0019E6  EFFD  F00C         	goto	l2370
  2194  0019EA                     u1780:
  2195  0019EA  0100               	movlb	0	; () banked
  2196  0019EC  A566               	btfss	_flags& (0+255),2,b
  2197  0019EE  EFFB  F00C         	goto	u1791
  2198  0019F2  EFFD  F00C         	goto	u1790
  2199  0019F6                     u1791:
  2200  0019F6  EF1B  F00D         	goto	l2380
  2201  0019FA                     u1790:
  2202  0019FA                     l2370:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2205  0019FA  063E               	decf	dtoa@i^0,f,c
  2206  0019FC  A0D8               	btfss	status,0,c
  2207  0019FE  063F               	decf	(dtoa@i+1)^0,f,c
  2208  001A00                     
  2209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2210  001A00  5034               	movf	dtoa@s^0,w,c
  2211  001A02  1035               	iorwf	(dtoa@s+1)^0,w,c
  2212  001A04  A4D8               	btfss	status,2,c
  2213  001A06  EF07  F00D         	goto	u1801
  2214  001A0A  EF09  F00D         	goto	u1800
  2215  001A0E                     u1801:
  2216  001A0E  EF0F  F00D         	goto	l2376
  2217  001A12                     u1800:
  2218  001A12  0E00               	movlw	0
  2219  001A14  6E2F               	movwf	(_dtoa$1048+1)^0,c
  2220  001A16  0E2B               	movlw	43
  2221  001A18  6E2E               	movwf	_dtoa$1048^0,c
  2222  001A1A  EF13  F00D         	goto	l2378
  2223  001A1E                     l2376:
  2224  001A1E  0E00               	movlw	0
  2225  001A20  6E2F               	movwf	(_dtoa$1048+1)^0,c
  2226  001A22  0E2D               	movlw	45
  2227  001A24  6E2E               	movwf	_dtoa$1048^0,c
  2228  001A26                     l2378:
  2229  001A26  0E7E               	movlw	low _dbuf
  2230  001A28  243E               	addwf	dtoa@i^0,w,c
  2231  001A2A  6ED9               	movwf	fsr2l,c
  2232  001A2C  0E00               	movlw	high _dbuf
  2233  001A2E  203F               	addwfc	(dtoa@i+1)^0,w,c
  2234  001A30  6EDA               	movwf	fsr2h,c
  2235  001A32  C02E  FFDF         	movff	_dtoa$1048,indf2
  2236  001A36                     l2380:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2239  001A36  C01C  F011         	movff	dtoa@fp,pad@fp
  2240  001A3A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2241  001A3E  0E7E               	movlw	low _dbuf
  2242  001A40  243E               	addwf	dtoa@i^0,w,c
  2243  001A42  6E13               	movwf	pad@buf^0,c
  2244  001A44  0E00               	movlw	high _dbuf
  2245  001A46  203F               	addwfc	(dtoa@i+1)^0,w,c
  2246  001A48  6E14               	movwf	(pad@buf+1)^0,c
  2247  001A4A  C032  F015         	movff	dtoa@w,pad@p
  2248  001A4E  C033  F016         	movff	dtoa@w+1,pad@p+1
  2249  001A52  EC3B  F012         	call	_pad	;wreg free
  2250  001A56  C011  F01C         	movff	?_pad,?_dtoa
  2251  001A5A  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2252  001A5E  0012               	return		;funcret
  2253  001A60                     __end_of_dtoa:
  2254                           	callstack 0
  2255                           
  2256 ;; *************** function _pad *****************
  2257 ;; Defined at:
  2258 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2261 ;;		 -> sprintf@f(6), 
  2262 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2263 ;;		 -> dbuf(32), 
  2264 ;;  p               2   20[COMRAM] int 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  w               2   25[COMRAM] int 
  2267 ;;  i               2   23[COMRAM] int 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2   16[COMRAM] int 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2277 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;Total ram usage:       11 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 3
  2284 ;; This function calls:
  2285 ;;		_fputc
  2286 ;;		_fputs
  2287 ;;		_strlen
  2288 ;; This function is called by:
  2289 ;;		_dtoa
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text5
  2294  002476                     __ptext5:
  2295                           	callstack 0
  2296  002476                     _pad:
  2297                           	callstack 23
  2298  002476                     
  2299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2300  002476  0100               	movlb	0	; () banked
  2301  002478  A166               	btfss	_flags& (0+255),0,b
  2302  00247A  EF41  F012         	goto	u1611
  2303  00247E  EF43  F012         	goto	u1610
  2304  002482                     u1611:
  2305  002482  EF4D  F012         	goto	l2300
  2306  002486                     u1610:
  2307  002486                     
  2308                           ; BSR set to: 0
  2309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2310  002486  C013  F00A         	movff	pad@buf,fputs@s
  2311  00248A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2312  00248E  C011  F00C         	movff	pad@fp,fputs@fp
  2313  002492  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2314  002496  ECF1  F013         	call	_fputs	;wreg free
  2315  00249A                     l2300:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2318  00249A  BE16               	btfsc	(pad@p+1)^0,7,c
  2319  00249C  EF52  F012         	goto	u1621
  2320  0024A0  EF54  F012         	goto	u1620
  2321  0024A4                     u1621:
  2322  0024A4  EF5A  F012         	goto	l2304
  2323  0024A8                     u1620:
  2324  0024A8  C015  F01A         	movff	pad@p,pad@w
  2325  0024AC  C016  F01B         	movff	pad@p+1,pad@w+1
  2326  0024B0  EF5E  F012         	goto	l1053
  2327  0024B4                     l2304:
  2328  0024B4  0E00               	movlw	0
  2329  0024B6  6E1B               	movwf	(pad@w+1)^0,c
  2330  0024B8  0E00               	movlw	0
  2331  0024BA  6E1A               	movwf	pad@w^0,c
  2332  0024BC                     l1053:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2335  0024BC  0E00               	movlw	0
  2336  0024BE  6E19               	movwf	(pad@i+1)^0,c
  2337  0024C0  0E00               	movlw	0
  2338  0024C2  6E18               	movwf	pad@i^0,c
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2341  0024C4  EF70  F012         	goto	l2310
  2342  0024C8                     l2306:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2345  0024C8  0E00               	movlw	0
  2346  0024CA  6E02               	movwf	(fputc@c+1)^0,c
  2347  0024CC  0E20               	movlw	32
  2348  0024CE  6E01               	movwf	fputc@c^0,c
  2349  0024D0  C011  F003         	movff	pad@fp,fputc@fp
  2350  0024D4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2351  0024D8  ECD6  F011         	call	_fputc	;wreg free
  2352  0024DC                     
  2353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2354  0024DC  4A18               	infsnz	pad@i^0,f,c
  2355  0024DE  2A19               	incf	(pad@i+1)^0,f,c
  2356  0024E0                     l2310:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2359  0024E0  501A               	movf	pad@w^0,w,c
  2360  0024E2  5C18               	subwf	pad@i^0,w,c
  2361  0024E4  5019               	movf	(pad@i+1)^0,w,c
  2362  0024E6  0A80               	xorlw	128
  2363  0024E8  6E17               	movwf	??_pad^0,c
  2364  0024EA  501B               	movf	(pad@w+1)^0,w,c
  2365  0024EC  0A80               	xorlw	128
  2366  0024EE  5817               	subwfb	??_pad^0,w,c
  2367  0024F0  A0D8               	btfss	status,0,c
  2368  0024F2  EF7D  F012         	goto	u1631
  2369  0024F6  EF7F  F012         	goto	u1630
  2370  0024FA                     u1631:
  2371  0024FA  EF64  F012         	goto	l2306
  2372  0024FE                     u1630:
  2373  0024FE                     
  2374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2375  0024FE  0100               	movlb	0	; () banked
  2376  002500  B166               	btfsc	_flags& (0+255),0,b
  2377  002502  EF85  F012         	goto	u1641
  2378  002506  EF87  F012         	goto	u1640
  2379  00250A                     u1641:
  2380  00250A  EF91  F012         	goto	l2314
  2381  00250E                     u1640:
  2382  00250E                     
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2385  00250E  C013  F00A         	movff	pad@buf,fputs@s
  2386  002512  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2387  002516  C011  F00C         	movff	pad@fp,fputs@fp
  2388  00251A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2389  00251E  ECF1  F013         	call	_fputs	;wreg free
  2390  002522                     l2314:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2393  002522  C013  F001         	movff	pad@buf,strlen@s
  2394  002526  C014  F002         	movff	pad@buf+1,strlen@s+1
  2395  00252A  EC88  F014         	call	_strlen	;wreg free
  2396  00252E  501A               	movf	pad@w^0,w,c
  2397  002530  2401               	addwf	?_strlen^0,w,c
  2398  002532  6E11               	movwf	?_pad^0,c
  2399  002534  501B               	movf	(pad@w+1)^0,w,c
  2400  002536  2002               	addwfc	(?_strlen+1)^0,w,c
  2401  002538  6E12               	movwf	(?_pad+1)^0,c
  2402  00253A  0012               	return		;funcret
  2403  00253C                     __end_of_pad:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _strlen *****************
  2407 ;; Defined at:
  2408 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2411 ;;		 -> dbuf(32), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2414 ;;		 -> dbuf(32), 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  2    0[COMRAM] unsigned int 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        4 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_pad
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text6
  2438  002910                     __ptext6:
  2439                           	callstack 0
  2440  002910                     _strlen:
  2441                           	callstack 25
  2442  002910  C001  F003         	movff	strlen@s,strlen@a
  2443  002914  C002  F004         	movff	strlen@s+1,strlen@a+1
  2444  002918  EF90  F014         	goto	l2210
  2445  00291C                     l2208:
  2446  00291C  4A01               	infsnz	strlen@s^0,f,c
  2447  00291E  2A02               	incf	(strlen@s+1)^0,f,c
  2448  002920                     l2210:
  2449  002920  C001  FFD9         	movff	strlen@s,fsr2l
  2450  002924  C002  FFDA         	movff	strlen@s+1,fsr2h
  2451  002928  50DF               	movf	indf2,w,c
  2452  00292A  A4D8               	btfss	status,2,c
  2453  00292C  EF9A  F014         	goto	u1471
  2454  002930  EF9C  F014         	goto	u1470
  2455  002934                     u1471:
  2456  002934  EF8E  F014         	goto	l2208
  2457  002938                     u1470:
  2458  002938  5003               	movf	strlen@a^0,w,c
  2459  00293A  5C01               	subwf	strlen@s^0,w,c
  2460  00293C  6E01               	movwf	?_strlen^0,c
  2461  00293E  5004               	movf	(strlen@a+1)^0,w,c
  2462  002940  5802               	subwfb	(strlen@s+1)^0,w,c
  2463  002942  6E02               	movwf	(?_strlen+1)^0,c
  2464  002944  0012               	return		;funcret
  2465  002946                     __end_of_strlen:
  2466                           	callstack 0
  2467                           
  2468 ;; *************** function _fputs *****************
  2469 ;; Defined at:
  2470 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2473 ;;		 -> dbuf(32), 
  2474 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2475 ;;		 -> sprintf@f(6), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  i               2   14[COMRAM] int 
  2478 ;;  c               1   13[COMRAM] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  2    9[COMRAM] int 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;Total ram usage:        7 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 2
  2495 ;; This function calls:
  2496 ;;		_fputc
  2497 ;; This function is called by:
  2498 ;;		_pad
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text7
  2503  0027E2                     __ptext7:
  2504                           	callstack 0
  2505  0027E2                     _fputs:
  2506                           	callstack 23
  2507  0027E2  0E00               	movlw	0
  2508  0027E4  6E10               	movwf	(fputs@i+1)^0,c
  2509  0027E6  0E00               	movlw	0
  2510  0027E8  6E0F               	movwf	fputs@i^0,c
  2511  0027EA  EF02  F014         	goto	l2204
  2512  0027EE                     l2200:
  2513  0027EE  C00E  F001         	movff	fputs@c,fputc@c
  2514  0027F2  6A02               	clrf	(fputc@c+1)^0,c
  2515  0027F4  C00C  F003         	movff	fputs@fp,fputc@fp
  2516  0027F8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2517  0027FC  ECD6  F011         	call	_fputc	;wreg free
  2518  002800  4A0F               	infsnz	fputs@i^0,f,c
  2519  002802  2A10               	incf	(fputs@i+1)^0,f,c
  2520  002804                     l2204:
  2521  002804  500F               	movf	fputs@i^0,w,c
  2522  002806  240A               	addwf	fputs@s^0,w,c
  2523  002808  6ED9               	movwf	fsr2l,c
  2524  00280A  5010               	movf	(fputs@i+1)^0,w,c
  2525  00280C  200B               	addwfc	(fputs@s+1)^0,w,c
  2526  00280E  6EDA               	movwf	fsr2h,c
  2527  002810  50DF               	movf	indf2,w,c
  2528  002812  6E0E               	movwf	fputs@c^0,c
  2529  002814  500E               	movf	fputs@c^0,w,c
  2530  002816  A4D8               	btfss	status,2,c
  2531  002818  EF10  F014         	goto	u1461
  2532  00281C  EF12  F014         	goto	u1460
  2533  002820                     u1461:
  2534  002820  EFF7  F013         	goto	l2200
  2535  002824                     u1460:
  2536  002824  0012               	return		;funcret
  2537  002826                     __end_of_fputs:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _fputc *****************
  2541 ;; Defined at:
  2542 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  c               2    0[COMRAM] int 
  2545 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2546 ;;		 -> sprintf@f(6), 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  2    0[COMRAM] int 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;Total ram usage:        9 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 1
  2565 ;; This function calls:
  2566 ;;		_putch
  2567 ;; This function is called by:
  2568 ;;		_pad
  2569 ;;		_vfpfcnvrt
  2570 ;;		_fputs
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text8
  2575  0023AC                     __ptext8:
  2576                           	callstack 0
  2577  0023AC                     _fputc:
  2578                           	callstack 26
  2579  0023AC  5003               	movf	fputc@fp^0,w,c
  2580  0023AE  1004               	iorwf	(fputc@fp+1)^0,w,c
  2581  0023B0  B4D8               	btfsc	status,2,c
  2582  0023B2  EFDD  F011         	goto	u1421
  2583  0023B6  EFDF  F011         	goto	u1420
  2584  0023BA                     u1421:
  2585  0023BA  EFE8  F011         	goto	l2188
  2586  0023BE                     u1420:
  2587  0023BE  5003               	movf	fputc@fp^0,w,c
  2588  0023C0  1004               	iorwf	(fputc@fp+1)^0,w,c
  2589  0023C2  A4D8               	btfss	status,2,c
  2590  0023C4  EFE6  F011         	goto	u1431
  2591  0023C8  EFE8  F011         	goto	u1430
  2592  0023CC                     u1431:
  2593  0023CC  EFED  F011         	goto	l2190
  2594  0023D0                     u1430:
  2595  0023D0                     l2188:
  2596  0023D0  5001               	movf	fputc@c^0,w,c
  2597  0023D2  ECD2  F014         	call	_putch
  2598  0023D6  EF3A  F012         	goto	l1117
  2599  0023DA                     l2190:
  2600  0023DA  EE20 F004          	lfsr	2,4
  2601  0023DE  5003               	movf	fputc@fp^0,w,c
  2602  0023E0  26D9               	addwf	fsr2l,f,c
  2603  0023E2  5004               	movf	(fputc@fp+1)^0,w,c
  2604  0023E4  22DA               	addwfc	fsr2h,f,c
  2605  0023E6  50DE               	movf	postinc2,w,c
  2606  0023E8  10DE               	iorwf	postinc2,w,c
  2607  0023EA  B4D8               	btfsc	status,2,c
  2608  0023EC  EFFA  F011         	goto	u1441
  2609  0023F0  EFFC  F011         	goto	u1440
  2610  0023F4                     u1441:
  2611  0023F4  EF17  F012         	goto	l2194
  2612  0023F8                     u1440:
  2613  0023F8  EE20 F004          	lfsr	2,4
  2614  0023FC  5003               	movf	fputc@fp^0,w,c
  2615  0023FE  26D9               	addwf	fsr2l,f,c
  2616  002400  5004               	movf	(fputc@fp+1)^0,w,c
  2617  002402  22DA               	addwfc	fsr2h,f,c
  2618  002404  EE10 F002          	lfsr	1,2
  2619  002408  5003               	movf	fputc@fp^0,w,c
  2620  00240A  26E1               	addwf	fsr1l,f,c
  2621  00240C  5004               	movf	(fputc@fp+1)^0,w,c
  2622  00240E  22E2               	addwfc	fsr1h,f,c
  2623  002410  50DE               	movf	postinc2,w,c
  2624  002412  5CE6               	subwf	postinc1,w,c
  2625  002414  50E6               	movf	postinc1,w,c
  2626  002416  0A80               	xorlw	128
  2627  002418  6E09               	movwf	(??_fputc+4)^0,c
  2628  00241A  50DE               	movf	postinc2,w,c
  2629  00241C  0A80               	xorlw	128
  2630  00241E  5809               	subwfb	(??_fputc+4)^0,w,c
  2631  002420  B0D8               	btfsc	status,0,c
  2632  002422  EF15  F012         	goto	u1451
  2633  002426  EF17  F012         	goto	u1450
  2634  00242A                     u1451:
  2635  00242A  EF3A  F012         	goto	l1117
  2636  00242E                     u1450:
  2637  00242E                     l2194:
  2638  00242E  EE20 F002          	lfsr	2,2
  2639  002432  5003               	movf	fputc@fp^0,w,c
  2640  002434  26D9               	addwf	fsr2l,f,c
  2641  002436  5004               	movf	(fputc@fp+1)^0,w,c
  2642  002438  22DA               	addwfc	fsr2h,f,c
  2643  00243A  CFDE F005          	movff	postinc2,??_fputc
  2644  00243E  CFDD F006          	movff	postdec2,??_fputc+1
  2645  002442  C003  FFD9         	movff	fputc@fp,fsr2l
  2646  002446  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2647  00244A  CFDE F007          	movff	postinc2,??_fputc+2
  2648  00244E  CFDD F008          	movff	postdec2,??_fputc+3
  2649  002452  5005               	movf	??_fputc^0,w,c
  2650  002454  2407               	addwf	(??_fputc+2)^0,w,c
  2651  002456  6ED9               	movwf	fsr2l,c
  2652  002458  5006               	movf	(??_fputc+1)^0,w,c
  2653  00245A  2008               	addwfc	(??_fputc+3)^0,w,c
  2654  00245C  6EDA               	movwf	fsr2h,c
  2655  00245E  C001  FFDF         	movff	fputc@c,indf2
  2656  002462  EE20 F002          	lfsr	2,2
  2657  002466  5003               	movf	fputc@fp^0,w,c
  2658  002468  26D9               	addwf	fsr2l,f,c
  2659  00246A  5004               	movf	(fputc@fp+1)^0,w,c
  2660  00246C  22DA               	addwfc	fsr2h,f,c
  2661  00246E  2ADE               	incf	postinc2,f,c
  2662  002470  0E00               	movlw	0
  2663  002472  22DD               	addwfc	postdec2,f,c
  2664  002474                     l1117:
  2665  002474  0012               	return		;funcret
  2666  002476                     __end_of_fputc:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _putch *****************
  2670 ;; Defined at:
  2671 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  c               1    wreg     unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  c               1    0[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;Total ram usage:        0 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_fputc
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text9
  2699  0029A4                     __ptext9:
  2700                           	callstack 0
  2701  0029A4                     _putch:
  2702                           	callstack 26
  2703  0029A4  0012               	return		;funcret
  2704  0029A6                     __end_of_putch:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _abs *****************
  2708 ;; Defined at:
  2709 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  a               2   18[COMRAM] int 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  2   18[COMRAM] int 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;Total ram usage:        4 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_dtoa
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text10
  2737  002826                     __ptext10:
  2738                           	callstack 0
  2739  002826                     _abs:
  2740                           	callstack 26
  2741  002826  BE14               	btfsc	(abs@a+1)^0,7,c
  2742  002828  EF20  F014         	goto	u1650
  2743  00282C  5014               	movf	(abs@a+1)^0,w,c
  2744  00282E  E106               	bnz	u1651
  2745  002830  0413               	decf	abs@a^0,w,c
  2746  002832  B0D8               	btfsc	status,0,c
  2747  002834  EF1E  F014         	goto	u1651
  2748  002838  EF20  F014         	goto	u1650
  2749  00283C                     u1651:
  2750  00283C  EF2E  F014         	goto	l1102
  2751  002840                     u1650:
  2752  002840  C013  F015         	movff	abs@a,??_abs
  2753  002844  C014  F016         	movff	abs@a+1,??_abs+1
  2754  002848  1E15               	comf	??_abs^0,f,c
  2755  00284A  1E16               	comf	(??_abs+1)^0,f,c
  2756  00284C  4A15               	infsnz	??_abs^0,f,c
  2757  00284E  2A16               	incf	(??_abs+1)^0,f,c
  2758  002850  C015  F013         	movff	??_abs,?_abs
  2759  002854  C016  F014         	movff	??_abs+1,?_abs+1
  2760  002858  EF32  F014         	goto	l1105
  2761  00285C                     l1102:
  2762  00285C  C013  F013         	movff	abs@a,?_abs
  2763  002860  C014  F014         	movff	abs@a+1,?_abs+1
  2764  002864                     l1105:
  2765  002864  0012               	return		;funcret
  2766  002866                     __end_of_abs:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function ___aomod *****************
  2770 ;; Defined at:
  2771 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  dividend        8    0[COMRAM] long long 
  2774 ;;  divisor         8    8[COMRAM] long long 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  sign            1   17[COMRAM] unsigned char 
  2777 ;;  counter         1   16[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  8    0[COMRAM] long long 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2787 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;Total ram usage:       18 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_dtoa
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text11
  2801  001F50                     __ptext11:
  2802                           	callstack 0
  2803  001F50                     ___aomod:
  2804                           	callstack 26
  2805  001F50  0E00               	movlw	0
  2806  001F52  6E12               	movwf	___aomod@sign^0,c
  2807  001F54  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2808  001F56  EFB1  F00F         	goto	u1550
  2809  001F5A  EFAF  F00F         	goto	u1551
  2810  001F5E                     u1551:
  2811  001F5E  EFC3  F00F         	goto	l2268
  2812  001F62                     u1550:
  2813  001F62  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2814  001F64  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2815  001F66  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2816  001F68  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2817  001F6A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2818  001F6C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2819  001F6E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2820  001F70  6C01               	negf	___aomod@dividend^0,c
  2821  001F72  0E00               	movlw	0
  2822  001F74  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2823  001F76  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2824  001F78  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2825  001F7A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2826  001F7C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2827  001F7E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2828  001F80  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2829  001F82  0E01               	movlw	1
  2830  001F84  6E12               	movwf	___aomod@sign^0,c
  2831  001F86                     l2268:
  2832  001F86  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2833  001F88  EFCA  F00F         	goto	u1560
  2834  001F8C  EFC8  F00F         	goto	u1561
  2835  001F90                     u1561:
  2836  001F90  EFDA  F00F         	goto	l2272
  2837  001F94                     u1560:
  2838  001F94  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2839  001F96  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2840  001F98  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2841  001F9A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2842  001F9C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2843  001F9E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2844  001FA0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2845  001FA2  6C09               	negf	___aomod@divisor^0,c
  2846  001FA4  0E00               	movlw	0
  2847  001FA6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2848  001FA8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2849  001FAA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2850  001FAC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2851  001FAE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2852  001FB0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2853  001FB2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2854  001FB4                     l2272:
  2855  001FB4  5009               	movf	___aomod@divisor^0,w,c
  2856  001FB6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2857  001FB8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2858  001FBA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2859  001FBC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2860  001FBE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2861  001FC0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2862  001FC2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2863  001FC4  B4D8               	btfsc	status,2,c
  2864  001FC6  EFE7  F00F         	goto	u1571
  2865  001FCA  EFE9  F00F         	goto	u1570
  2866  001FCE                     u1571:
  2867  001FCE  EF31  F010         	goto	l2288
  2868  001FD2                     u1570:
  2869  001FD2  0E01               	movlw	1
  2870  001FD4  6E11               	movwf	___aomod@counter^0,c
  2871  001FD6  EFF7  F00F         	goto	l2278
  2872  001FDA                     l2276:
  2873  001FDA  90D8               	bcf	status,0,c
  2874  001FDC  3609               	rlcf	___aomod@divisor^0,f,c
  2875  001FDE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2876  001FE0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2877  001FE2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2878  001FE4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2879  001FE6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2880  001FE8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2881  001FEA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2882  001FEC  2A11               	incf	___aomod@counter^0,f,c
  2883  001FEE                     l2278:
  2884  001FEE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2885  001FF0  EFFC  F00F         	goto	u1581
  2886  001FF4  EFFE  F00F         	goto	u1580
  2887  001FF8                     u1581:
  2888  001FF8  EFED  F00F         	goto	l2276
  2889  001FFC                     u1580:
  2890  001FFC                     l2280:
  2891  001FFC  5009               	movf	___aomod@divisor^0,w,c
  2892  001FFE  5C01               	subwf	___aomod@dividend^0,w,c
  2893  002000  500A               	movf	(___aomod@divisor+1)^0,w,c
  2894  002002  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2895  002004  500B               	movf	(___aomod@divisor+2)^0,w,c
  2896  002006  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2897  002008  500C               	movf	(___aomod@divisor+3)^0,w,c
  2898  00200A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2899  00200C  500D               	movf	(___aomod@divisor+4)^0,w,c
  2900  00200E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2901  002010  500E               	movf	(___aomod@divisor+5)^0,w,c
  2902  002012  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2903  002014  500F               	movf	(___aomod@divisor+6)^0,w,c
  2904  002016  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2905  002018  5010               	movf	(___aomod@divisor+7)^0,w,c
  2906  00201A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2907  00201C  A0D8               	btfss	status,0,c
  2908  00201E  EF13  F010         	goto	u1591
  2909  002022  EF15  F010         	goto	u1590
  2910  002026                     u1591:
  2911  002026  EF25  F010         	goto	l2284
  2912  00202A                     u1590:
  2913  00202A  5009               	movf	___aomod@divisor^0,w,c
  2914  00202C  5E01               	subwf	___aomod@dividend^0,f,c
  2915  00202E  500A               	movf	(___aomod@divisor+1)^0,w,c
  2916  002030  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2917  002032  500B               	movf	(___aomod@divisor+2)^0,w,c
  2918  002034  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2919  002036  500C               	movf	(___aomod@divisor+3)^0,w,c
  2920  002038  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2921  00203A  500D               	movf	(___aomod@divisor+4)^0,w,c
  2922  00203C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2923  00203E  500E               	movf	(___aomod@divisor+5)^0,w,c
  2924  002040  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2925  002042  500F               	movf	(___aomod@divisor+6)^0,w,c
  2926  002044  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2927  002046  5010               	movf	(___aomod@divisor+7)^0,w,c
  2928  002048  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2929  00204A                     l2284:
  2930  00204A  90D8               	bcf	status,0,c
  2931  00204C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2932  00204E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2933  002050  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2934  002052  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2935  002054  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2936  002056  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2937  002058  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2938  00205A  3209               	rrcf	___aomod@divisor^0,f,c
  2939  00205C  2E11               	decfsz	___aomod@counter^0,f,c
  2940  00205E  EFFE  F00F         	goto	l2280
  2941  002062                     l2288:
  2942  002062  5012               	movf	___aomod@sign^0,w,c
  2943  002064  B4D8               	btfsc	status,2,c
  2944  002066  EF37  F010         	goto	u1601
  2945  00206A  EF39  F010         	goto	u1600
  2946  00206E                     u1601:
  2947  00206E  EF49  F010         	goto	l2292
  2948  002072                     u1600:
  2949  002072  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2950  002074  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2951  002076  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2952  002078  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2953  00207A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2954  00207C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2955  00207E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2956  002080  6C01               	negf	___aomod@dividend^0,c
  2957  002082  0E00               	movlw	0
  2958  002084  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2959  002086  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2960  002088  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2961  00208A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2962  00208C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2963  00208E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2964  002090  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2965  002092                     l2292:
  2966  002092  C001  F001         	movff	___aomod@dividend,?___aomod
  2967  002096  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2968  00209A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2969  00209E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2970  0020A2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2971  0020A6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2972  0020AA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2973  0020AE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2974  0020B2  0012               	return		;funcret
  2975  0020B4                     __end_of___aomod:
  2976                           	callstack 0
  2977                           
  2978 ;; *************** function ___aodiv *****************
  2979 ;; Defined at:
  2980 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  dividend        8    0[COMRAM] long long 
  2983 ;;  divisor         8    8[COMRAM] long long 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  quotient        8   18[COMRAM] long long 
  2986 ;;  sign            1   17[COMRAM] unsigned char 
  2987 ;;  counter         1   16[COMRAM] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  8    0[COMRAM] long long 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2997 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;Total ram usage:       26 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_dtoa
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text12
  3011  001DC8                     __ptext12:
  3012                           	callstack 0
  3013  001DC8                     ___aodiv:
  3014                           	callstack 26
  3015  001DC8  0E00               	movlw	0
  3016  001DCA  6E12               	movwf	___aodiv@sign^0,c
  3017  001DCC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3018  001DCE  EFED  F00E         	goto	u1480
  3019  001DD2  EFEB  F00E         	goto	u1481
  3020  001DD6                     u1481:
  3021  001DD6  EFFF  F00E         	goto	l2224
  3022  001DDA                     u1480:
  3023  001DDA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3024  001DDC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3025  001DDE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3026  001DE0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3027  001DE2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3028  001DE4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3029  001DE6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3030  001DE8  6C09               	negf	___aodiv@divisor^0,c
  3031  001DEA  0E00               	movlw	0
  3032  001DEC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3033  001DEE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3034  001DF0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3035  001DF2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3036  001DF4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3037  001DF6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3038  001DF8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3039  001DFA  0E01               	movlw	1
  3040  001DFC  6E12               	movwf	___aodiv@sign^0,c
  3041  001DFE                     l2224:
  3042  001DFE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3043  001E00  EF06  F00F         	goto	u1490
  3044  001E04  EF04  F00F         	goto	u1491
  3045  001E08                     u1491:
  3046  001E08  EF18  F00F         	goto	l2230
  3047  001E0C                     u1490:
  3048  001E0C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3049  001E0E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3050  001E10  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3051  001E12  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3052  001E14  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3053  001E16  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3054  001E18  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3055  001E1A  6C01               	negf	___aodiv@dividend^0,c
  3056  001E1C  0E00               	movlw	0
  3057  001E1E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3058  001E20  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3059  001E22  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3060  001E24  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3061  001E26  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3062  001E28  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3063  001E2A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3064  001E2C  0E01               	movlw	1
  3065  001E2E  1A12               	xorwf	___aodiv@sign^0,f,c
  3066  001E30                     l2230:
  3067  001E30  EE20  F013         	lfsr	2,___aodiv@quotient
  3068  001E34  0E07               	movlw	7
  3069  001E36                     u1501:
  3070  001E36  6ADE               	clrf	postinc2,c
  3071  001E38  06E8               	decf	wreg,f,c
  3072  001E3A  E2FD               	bc	u1501
  3073  001E3C  5009               	movf	___aodiv@divisor^0,w,c
  3074  001E3E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3075  001E40  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3076  001E42  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3077  001E44  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3078  001E46  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3079  001E48  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3080  001E4A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3081  001E4C  B4D8               	btfsc	status,2,c
  3082  001E4E  EF2B  F00F         	goto	u1511
  3083  001E52  EF2D  F00F         	goto	u1510
  3084  001E56                     u1511:
  3085  001E56  EF7F  F00F         	goto	l2252
  3086  001E5A                     u1510:
  3087  001E5A  0E01               	movlw	1
  3088  001E5C  6E11               	movwf	___aodiv@counter^0,c
  3089  001E5E  EF3B  F00F         	goto	l2238
  3090  001E62                     l2236:
  3091  001E62  90D8               	bcf	status,0,c
  3092  001E64  3609               	rlcf	___aodiv@divisor^0,f,c
  3093  001E66  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3094  001E68  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3095  001E6A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3096  001E6C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3097  001E6E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3098  001E70  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3099  001E72  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3100  001E74  2A11               	incf	___aodiv@counter^0,f,c
  3101  001E76                     l2238:
  3102  001E76  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3103  001E78  EF40  F00F         	goto	u1521
  3104  001E7C  EF42  F00F         	goto	u1520
  3105  001E80                     u1521:
  3106  001E80  EF31  F00F         	goto	l2236
  3107  001E84                     u1520:
  3108  001E84                     l2240:
  3109  001E84  90D8               	bcf	status,0,c
  3110  001E86  3613               	rlcf	___aodiv@quotient^0,f,c
  3111  001E88  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3112  001E8A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3113  001E8C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3114  001E8E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3115  001E90  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3116  001E92  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3117  001E94  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3118  001E96  5009               	movf	___aodiv@divisor^0,w,c
  3119  001E98  5C01               	subwf	___aodiv@dividend^0,w,c
  3120  001E9A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3121  001E9C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3122  001E9E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3123  001EA0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3124  001EA2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3125  001EA4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3126  001EA6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3127  001EA8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3128  001EAA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3129  001EAC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3130  001EAE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3131  001EB0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3132  001EB2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3133  001EB4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3134  001EB6  A0D8               	btfss	status,0,c
  3135  001EB8  EF60  F00F         	goto	u1531
  3136  001EBC  EF62  F00F         	goto	u1530
  3137  001EC0                     u1531:
  3138  001EC0  EF73  F00F         	goto	l2248
  3139  001EC4                     u1530:
  3140  001EC4  5009               	movf	___aodiv@divisor^0,w,c
  3141  001EC6  5E01               	subwf	___aodiv@dividend^0,f,c
  3142  001EC8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3143  001ECA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3144  001ECC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3145  001ECE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3146  001ED0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3147  001ED2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3148  001ED4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3149  001ED6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3150  001ED8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3151  001EDA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3152  001EDC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3153  001EDE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3154  001EE0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3155  001EE2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3156  001EE4  8013               	bsf	___aodiv@quotient^0,0,c
  3157  001EE6                     l2248:
  3158  001EE6  90D8               	bcf	status,0,c
  3159  001EE8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3160  001EEA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3161  001EEC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3162  001EEE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3163  001EF0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3164  001EF2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3165  001EF4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3166  001EF6  3209               	rrcf	___aodiv@divisor^0,f,c
  3167  001EF8  2E11               	decfsz	___aodiv@counter^0,f,c
  3168  001EFA  EF42  F00F         	goto	l2240
  3169  001EFE                     l2252:
  3170  001EFE  5012               	movf	___aodiv@sign^0,w,c
  3171  001F00  B4D8               	btfsc	status,2,c
  3172  001F02  EF85  F00F         	goto	u1541
  3173  001F06  EF87  F00F         	goto	u1540
  3174  001F0A                     u1541:
  3175  001F0A  EF97  F00F         	goto	l2256
  3176  001F0E                     u1540:
  3177  001F0E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3178  001F10  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3179  001F12  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3180  001F14  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3181  001F16  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3182  001F18  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3183  001F1A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3184  001F1C  6C13               	negf	___aodiv@quotient^0,c
  3185  001F1E  0E00               	movlw	0
  3186  001F20  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3187  001F22  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3188  001F24  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3189  001F26  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3190  001F28  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3191  001F2A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3192  001F2C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3193  001F2E                     l2256:
  3194  001F2E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3195  001F32  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3196  001F36  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3197  001F3A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3198  001F3E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3199  001F42  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3200  001F46  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3201  001F4A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3202  001F4E  0012               	return		;funcret
  3203  001F50                     __end_of___aodiv:
  3204                           	callstack 0
  3205                           
  3206 ;; *************** function _key_num *****************
  3207 ;; Defined at:
  3208 ;;		line 28 in file "KeyPad_4_4.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  k               1    wreg     unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  k               1    2[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      unsigned char 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3225 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;Total ram usage:        3 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text13
  3236  0021BA                     __ptext13:
  3237                           	callstack 0
  3238  0021BA                     _key_num:
  3239                           	callstack 30
  3240                           
  3241                           ;incstack = 0
  3242                           ;key_num@k stored from wreg
  3243  0021BA  6E03               	movwf	key_num@k^0,c
  3244  0021BC                     
  3245                           ;KeyPad_4_4.c: 29:     switch (k) {
  3246  0021BC  EF10  F011         	goto	l2874
  3247  0021C0                     l2776:
  3248  0021C0  0E37               	movlw	55
  3249  0021C2  EF5D  F011         	goto	l329
  3250  0021C6                     l2782:
  3251  0021C6  0E38               	movlw	56
  3252  0021C8  EF5D  F011         	goto	l329
  3253  0021CC                     l2788:
  3254  0021CC  0E39               	movlw	57
  3255  0021CE  EF5D  F011         	goto	l329
  3256  0021D2                     l2794:
  3257  0021D2  0E2F               	movlw	47
  3258  0021D4  EF5D  F011         	goto	l329
  3259  0021D8                     l2800:
  3260  0021D8  0E34               	movlw	52
  3261  0021DA  EF5D  F011         	goto	l329
  3262  0021DE                     l2806:
  3263  0021DE  0E35               	movlw	53
  3264  0021E0  EF5D  F011         	goto	l329
  3265  0021E4                     l2812:
  3266  0021E4  0E36               	movlw	54
  3267  0021E6  EF5D  F011         	goto	l329
  3268  0021EA                     l2818:
  3269  0021EA  0E2A               	movlw	42
  3270  0021EC  EF5D  F011         	goto	l329
  3271  0021F0                     l2824:
  3272  0021F0  0E31               	movlw	49
  3273  0021F2  EF5D  F011         	goto	l329
  3274  0021F6                     l2830:
  3275  0021F6  0E32               	movlw	50
  3276  0021F8  EF5D  F011         	goto	l329
  3277  0021FC                     l2836:
  3278  0021FC  0E33               	movlw	51
  3279  0021FE  EF5D  F011         	goto	l329
  3280  002202                     l2842:
  3281  002202  0E2D               	movlw	45
  3282  002204  EF5D  F011         	goto	l329
  3283  002208                     l2848:
  3284  002208  0E63               	movlw	99
  3285  00220A  EF5D  F011         	goto	l329
  3286  00220E                     l2854:
  3287  00220E  0E30               	movlw	48
  3288  002210  EF5D  F011         	goto	l329
  3289  002214                     l2860:
  3290  002214  0E3D               	movlw	61
  3291  002216  EF5D  F011         	goto	l329
  3292  00221A                     l2866:
  3293  00221A  0E2B               	movlw	43
  3294  00221C  EF5D  F011         	goto	l329
  3295  002220                     l2874:
  3296  002220  5003               	movf	key_num@k^0,w,c
  3297  002222  6E01               	movwf	??_key_num^0,c
  3298  002224  6A02               	clrf	(??_key_num+1)^0,c
  3299                           
  3300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3301                           ; Switch size 1, requested type "simple"
  3302                           ; Number of cases is 1, Range of values is 0 to 0
  3303                           ; switch strategies available:
  3304                           ; Name         Instructions Cycles
  3305                           ; simple_byte            4     3 (average)
  3306                           ;	Chosen strategy is simple_byte
  3307  002226  5002               	movf	(??_key_num+1)^0,w,c
  3308  002228  0A00               	xorlw	0	; case 0
  3309  00222A  B4D8               	btfsc	status,2,c
  3310  00222C  EF1A  F011         	goto	l3220
  3311  002230  EF5D  F011         	goto	l329
  3312  002234                     l3220:
  3313                           
  3314                           ; Switch size 1, requested type "simple"
  3315                           ; Number of cases is 16, Range of values is 0 to 15
  3316                           ; switch strategies available:
  3317                           ; Name         Instructions Cycles
  3318                           ; simple_byte           49    25 (average)
  3319                           ;	Chosen strategy is simple_byte
  3320  002234  5001               	movf	??_key_num^0,w,c
  3321  002236  0A00               	xorlw	0	; case 0
  3322  002238  B4D8               	btfsc	status,2,c
  3323  00223A  EFE0  F010         	goto	l2776
  3324  00223E  0A01               	xorlw	1	; case 1
  3325  002240  B4D8               	btfsc	status,2,c
  3326  002242  EFE3  F010         	goto	l2782
  3327  002246  0A03               	xorlw	3	; case 2
  3328  002248  B4D8               	btfsc	status,2,c
  3329  00224A  EFE6  F010         	goto	l2788
  3330  00224E  0A01               	xorlw	1	; case 3
  3331  002250  B4D8               	btfsc	status,2,c
  3332  002252  EFE9  F010         	goto	l2794
  3333  002256  0A07               	xorlw	7	; case 4
  3334  002258  B4D8               	btfsc	status,2,c
  3335  00225A  EFEC  F010         	goto	l2800
  3336  00225E  0A01               	xorlw	1	; case 5
  3337  002260  B4D8               	btfsc	status,2,c
  3338  002262  EFEF  F010         	goto	l2806
  3339  002266  0A03               	xorlw	3	; case 6
  3340  002268  B4D8               	btfsc	status,2,c
  3341  00226A  EFF2  F010         	goto	l2812
  3342  00226E  0A01               	xorlw	1	; case 7
  3343  002270  B4D8               	btfsc	status,2,c
  3344  002272  EFF5  F010         	goto	l2818
  3345  002276  0A0F               	xorlw	15	; case 8
  3346  002278  B4D8               	btfsc	status,2,c
  3347  00227A  EFF8  F010         	goto	l2824
  3348  00227E  0A01               	xorlw	1	; case 9
  3349  002280  B4D8               	btfsc	status,2,c
  3350  002282  EFFB  F010         	goto	l2830
  3351  002286  0A03               	xorlw	3	; case 10
  3352  002288  B4D8               	btfsc	status,2,c
  3353  00228A  EFFE  F010         	goto	l2836
  3354  00228E  0A01               	xorlw	1	; case 11
  3355  002290  B4D8               	btfsc	status,2,c
  3356  002292  EF01  F011         	goto	l2842
  3357  002296  0A07               	xorlw	7	; case 12
  3358  002298  B4D8               	btfsc	status,2,c
  3359  00229A  EF04  F011         	goto	l2848
  3360  00229E  0A01               	xorlw	1	; case 13
  3361  0022A0  B4D8               	btfsc	status,2,c
  3362  0022A2  EF07  F011         	goto	l2854
  3363  0022A6  0A03               	xorlw	3	; case 14
  3364  0022A8  B4D8               	btfsc	status,2,c
  3365  0022AA  EF0A  F011         	goto	l2860
  3366  0022AE  0A01               	xorlw	1	; case 15
  3367  0022B0  B4D8               	btfsc	status,2,c
  3368  0022B2  EF0D  F011         	goto	l2866
  3369  0022B6  EF5D  F011         	goto	l329
  3370  0022BA                     l329:
  3371  0022BA  0012               	return		;funcret
  3372  0022BC                     __end_of_key_num:
  3373                           	callstack 0
  3374                           
  3375 ;; *************** function _adc_init *****************
  3376 ;; Defined at:
  3377 ;;		line 15 in file "adc.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  result0         2   57[COMRAM] int 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2   55[COMRAM] int 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;Total ram usage:        4 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 1
  3398 ;; This function calls:
  3399 ;;		___fldiv
  3400 ;;		___fltol
  3401 ;;		___wmul
  3402 ;;		___xxtofl
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text14
  3409  00253C                     __ptext14:
  3410                           	callstack 0
  3411  00253C                     _adc_init:
  3412                           	callstack 29
  3413  00253C                     
  3414                           ;adc.c: 16:    GIE = 1;
  3415  00253C  8EF2               	bsf	4082,7,c	;volatile
  3416                           
  3417                           ;adc.c: 23:     TRISA0=1;
  3418  00253E  8092               	bsf	3986,0,c	;volatile
  3419                           
  3420                           ;adc.c: 24:      ANS0 = 1;
  3421  002540  807E               	bsf	3966,0,c	;volatile
  3422  002542                     
  3423                           ;adc.c: 26:     ADCON0bits.CHS = 0;
  3424  002542  0EC3               	movlw	-61
  3425  002544  16C2               	andwf	194,f,c	;volatile
  3426                           
  3427                           ;adc.c: 27:     ADCON1bits.VCFG = 0;
  3428  002546  0ECF               	movlw	-49
  3429  002548  16C1               	andwf	193,f,c	;volatile
  3430  00254A                     
  3431                           ;adc.c: 29:     ADON = 1;
  3432  00254A  80C2               	bsf	4034,0,c	;volatile
  3433  00254C                     
  3434                           ;adc.c: 30:     ADFM = 1;
  3435  00254C  8EC0               	bsf	4032,7,c	;volatile
  3436                           
  3437                           ;adc.c: 31:     ADCON2bits.ACQT = 0b001;
  3438  00254E  50C0               	movf	192,w,c	;volatile
  3439  002550  0BC7               	andlw	-57
  3440  002552  0908               	iorlw	8
  3441  002554  6EC0               	movwf	192,c	;volatile
  3442                           
  3443                           ;adc.c: 32:     ADCON2bits.ADCS = 0b110;
  3444  002556  50C0               	movf	192,w,c	;volatile
  3445  002558  0BF8               	andlw	-8
  3446  00255A  0906               	iorlw	6
  3447  00255C  6EC0               	movwf	192,c	;volatile
  3448  00255E                     
  3449                           ;adc.c: 34:        ADCON0bits.GO_DONE = 1;
  3450  00255E  82C2               	bsf	194,1,c	;volatile
  3451  002560                     l112:
  3452  002560  B2C2               	btfsc	194,1,c	;volatile
  3453  002562  EFB5  F012         	goto	u2411
  3454  002566  EFB7  F012         	goto	u2410
  3455  00256A                     u2411:
  3456  00256A  EFB0  F012         	goto	l112
  3457  00256E                     u2410:
  3458  00256E                     
  3459                           ;adc.c: 38:         int result0 = ADRES * 5 / 10.23;
  3460  00256E  0E14               	movlw	20
  3461  002570  6E19               	movwf	___fldiv@a^0,c
  3462  002572  0EAE               	movlw	174
  3463  002574  6E1A               	movwf	(___fldiv@a+1)^0,c
  3464  002576  0E23               	movlw	35
  3465  002578  6E1B               	movwf	(___fldiv@a+2)^0,c
  3466  00257A  0E41               	movlw	65
  3467  00257C  6E1C               	movwf	(___fldiv@a+3)^0,c
  3468  00257E  CFC3 F001          	movff	4035,___wmul@multiplier	;volatile
  3469  002582  CFC4 F002          	movff	4036,___wmul@multiplier+1	;volatile
  3470  002586  0E00               	movlw	0
  3471  002588  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3472  00258A  0E05               	movlw	5
  3473  00258C  6E03               	movwf	___wmul@multiplicand^0,c
  3474  00258E  ECB9  F014         	call	___wmul	;wreg free
  3475  002592  C001  F007         	movff	?___wmul,___xxtofl@val
  3476  002596  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  3477  00259A  6A09               	clrf	(___xxtofl@val+2)^0,c
  3478  00259C  6A0A               	clrf	(___xxtofl@val+3)^0,c
  3479  00259E  0E00               	movlw	0
  3480  0025A0  EC0A  F00E         	call	___xxtofl
  3481  0025A4  C007  F015         	movff	?___xxtofl,___fldiv@b
  3482  0025A8  C008  F016         	movff	?___xxtofl+1,___fldiv@b+1
  3483  0025AC  C009  F017         	movff	?___xxtofl+2,___fldiv@b+2
  3484  0025B0  C00A  F018         	movff	?___xxtofl+3,___fldiv@b+3
  3485  0025B4  EC37  F008         	call	___fldiv	;wreg free
  3486  0025B8  C015  F02E         	movff	?___fldiv,___fltol@f1
  3487  0025BC  C016  F02F         	movff	?___fldiv+1,___fltol@f1+1
  3488  0025C0  C017  F030         	movff	?___fldiv+2,___fltol@f1+2
  3489  0025C4  C018  F031         	movff	?___fldiv+3,___fltol@f1+3
  3490  0025C8  EC5A  F010         	call	___fltol	;wreg free
  3491  0025CC  C02E  F03A         	movff	?___fltol,adc_init@result0
  3492  0025D0  C02F  F03B         	movff	?___fltol+1,adc_init@result0+1
  3493  0025D4                     
  3494                           ;adc.c: 39:          ADRES = 0;
  3495  0025D4  0E00               	movlw	0
  3496  0025D6  6EC4               	movwf	196,c	;volatile
  3497  0025D8  0E00               	movlw	0
  3498  0025DA  6EC3               	movwf	195,c	;volatile
  3499  0025DC                     
  3500                           ;adc.c: 40:         return result0;
  3501  0025DC  C03A  F038         	movff	adc_init@result0,?_adc_init
  3502  0025E0  C03B  F039         	movff	adc_init@result0+1,?_adc_init+1
  3503  0025E4  0012               	return		;funcret
  3504  0025E6                     __end_of_adc_init:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function ___xxtofl *****************
  3508 ;; Defined at:
  3509 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  sign            1    wreg     unsigned char 
  3512 ;;  val             4    6[COMRAM] long 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  sign            1   14[COMRAM] unsigned char 
  3515 ;;  arg             4   16[COMRAM] unsigned long 
  3516 ;;  exp             1   15[COMRAM] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  4    6[COMRAM] unsigned char 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;Total ram usage:       14 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_adc_init
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text15
  3540  001C14                     __ptext15:
  3541                           	callstack 0
  3542  001C14                     ___xxtofl:
  3543                           	callstack 29
  3544                           
  3545                           ;incstack = 0
  3546                           ;___xxtofl@sign stored from wreg
  3547  001C14  6E0F               	movwf	___xxtofl@sign^0,c
  3548  001C16  500F               	movf	___xxtofl@sign^0,w,c
  3549  001C18  B4D8               	btfsc	status,2,c
  3550  001C1A  EF11  F00E         	goto	u2161
  3551  001C1E  EF13  F00E         	goto	u2160
  3552  001C22                     u2161:
  3553  001C22  EF35  F00E         	goto	l1003
  3554  001C26                     u2160:
  3555  001C26  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  3556  001C28  EF1A  F00E         	goto	u2170
  3557  001C2C  EF18  F00E         	goto	u2171
  3558  001C30                     u2171:
  3559  001C30  EF35  F00E         	goto	l1003
  3560  001C34                     u2170:
  3561  001C34  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  3562  001C38  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  3563  001C3C  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  3564  001C40  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  3565  001C44  1E0B               	comf	??___xxtofl^0,f,c
  3566  001C46  1E0C               	comf	(??___xxtofl+1)^0,f,c
  3567  001C48  1E0D               	comf	(??___xxtofl+2)^0,f,c
  3568  001C4A  1E0E               	comf	(??___xxtofl+3)^0,f,c
  3569  001C4C  2A0B               	incf	??___xxtofl^0,f,c
  3570  001C4E  0E00               	movlw	0
  3571  001C50  220C               	addwfc	(??___xxtofl+1)^0,f,c
  3572  001C52  220D               	addwfc	(??___xxtofl+2)^0,f,c
  3573  001C54  220E               	addwfc	(??___xxtofl+3)^0,f,c
  3574  001C56  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  3575  001C5A  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  3576  001C5E  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  3577  001C62  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  3578  001C66  EF3D  F00E         	goto	l2648
  3579  001C6A                     l1003:
  3580  001C6A  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  3581  001C6E  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3582  001C72  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3583  001C76  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3584  001C7A                     l2648:
  3585  001C7A  5007               	movf	___xxtofl@val^0,w,c
  3586  001C7C  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  3587  001C7E  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  3588  001C80  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  3589  001C82  A4D8               	btfss	status,2,c
  3590  001C84  EF46  F00E         	goto	u2181
  3591  001C88  EF48  F00E         	goto	u2180
  3592  001C8C                     u2181:
  3593  001C8C  EF52  F00E         	goto	l2654
  3594  001C90                     u2180:
  3595  001C90  0E00               	movlw	0
  3596  001C92  6E07               	movwf	?___xxtofl^0,c
  3597  001C94  0E00               	movlw	0
  3598  001C96  6E08               	movwf	(?___xxtofl+1)^0,c
  3599  001C98  0E00               	movlw	0
  3600  001C9A  6E09               	movwf	(?___xxtofl+2)^0,c
  3601  001C9C  0E00               	movlw	0
  3602  001C9E  6E0A               	movwf	(?___xxtofl+3)^0,c
  3603  001CA0  EFE3  F00E         	goto	l1006
  3604  001CA4                     l2654:
  3605  001CA4  0E96               	movlw	150
  3606  001CA6  6E10               	movwf	___xxtofl@exp^0,c
  3607  001CA8  EF5C  F00E         	goto	l2658
  3608  001CAC                     l2656:
  3609  001CAC  2A10               	incf	___xxtofl@exp^0,f,c
  3610  001CAE  90D8               	bcf	status,0,c
  3611  001CB0  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  3612  001CB2  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  3613  001CB4  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  3614  001CB6  3211               	rrcf	___xxtofl@arg^0,f,c
  3615  001CB8                     l2658:
  3616  001CB8  0E00               	movlw	0
  3617  001CBA  1411               	andwf	___xxtofl@arg^0,w,c
  3618  001CBC  6E0B               	movwf	??___xxtofl^0,c
  3619  001CBE  0E00               	movlw	0
  3620  001CC0  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  3621  001CC2  6E0C               	movwf	(??___xxtofl+1)^0,c
  3622  001CC4  0E00               	movlw	0
  3623  001CC6  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  3624  001CC8  6E0D               	movwf	(??___xxtofl+2)^0,c
  3625  001CCA  0EFE               	movlw	254
  3626  001CCC  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  3627  001CCE  6E0E               	movwf	(??___xxtofl+3)^0,c
  3628  001CD0  500B               	movf	??___xxtofl^0,w,c
  3629  001CD2  100C               	iorwf	(??___xxtofl+1)^0,w,c
  3630  001CD4  100D               	iorwf	(??___xxtofl+2)^0,w,c
  3631  001CD6  100E               	iorwf	(??___xxtofl+3)^0,w,c
  3632  001CD8  A4D8               	btfss	status,2,c
  3633  001CDA  EF71  F00E         	goto	u2191
  3634  001CDE  EF73  F00E         	goto	u2190
  3635  001CE2                     u2191:
  3636  001CE2  EF56  F00E         	goto	l2656
  3637  001CE6                     u2190:
  3638  001CE6  EF81  F00E         	goto	l1010
  3639  001CEA                     l2660:
  3640  001CEA  2A10               	incf	___xxtofl@exp^0,f,c
  3641  001CEC  0E01               	movlw	1
  3642  001CEE  2611               	addwf	___xxtofl@arg^0,f,c
  3643  001CF0  0E00               	movlw	0
  3644  001CF2  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  3645  001CF4  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  3646  001CF6  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  3647  001CF8  90D8               	bcf	status,0,c
  3648  001CFA  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  3649  001CFC  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  3650  001CFE  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  3651  001D00  3211               	rrcf	___xxtofl@arg^0,f,c
  3652  001D02                     l1010:
  3653  001D02  0E00               	movlw	0
  3654  001D04  1411               	andwf	___xxtofl@arg^0,w,c
  3655  001D06  6E0B               	movwf	??___xxtofl^0,c
  3656  001D08  0E00               	movlw	0
  3657  001D0A  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  3658  001D0C  6E0C               	movwf	(??___xxtofl+1)^0,c
  3659  001D0E  0E00               	movlw	0
  3660  001D10  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  3661  001D12  6E0D               	movwf	(??___xxtofl+2)^0,c
  3662  001D14  0EFF               	movlw	255
  3663  001D16  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  3664  001D18  6E0E               	movwf	(??___xxtofl+3)^0,c
  3665  001D1A  500B               	movf	??___xxtofl^0,w,c
  3666  001D1C  100C               	iorwf	(??___xxtofl+1)^0,w,c
  3667  001D1E  100D               	iorwf	(??___xxtofl+2)^0,w,c
  3668  001D20  100E               	iorwf	(??___xxtofl+3)^0,w,c
  3669  001D22  A4D8               	btfss	status,2,c
  3670  001D24  EF96  F00E         	goto	u2201
  3671  001D28  EF98  F00E         	goto	u2200
  3672  001D2C                     u2201:
  3673  001D2C  EF75  F00E         	goto	l2660
  3674  001D30                     u2200:
  3675  001D30  EFA0  F00E         	goto	l2668
  3676  001D34                     l2666:
  3677  001D34  0610               	decf	___xxtofl@exp^0,f,c
  3678  001D36  90D8               	bcf	status,0,c
  3679  001D38  3611               	rlcf	___xxtofl@arg^0,f,c
  3680  001D3A  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  3681  001D3C  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  3682  001D3E  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  3683  001D40                     l2668:
  3684  001D40  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  3685  001D42  EFA5  F00E         	goto	u2211
  3686  001D46  EFA7  F00E         	goto	u2210
  3687  001D4A                     u2211:
  3688  001D4A  EFAF  F00E         	goto	l1017
  3689  001D4E                     u2210:
  3690  001D4E  0E02               	movlw	2
  3691  001D50  6010               	cpfslt	___xxtofl@exp^0,c
  3692  001D52  EFAD  F00E         	goto	u2221
  3693  001D56  EFAF  F00E         	goto	u2220
  3694  001D5A                     u2221:
  3695  001D5A  EF9A  F00E         	goto	l2666
  3696  001D5E                     u2220:
  3697  001D5E                     l1017:
  3698  001D5E  B010               	btfsc	___xxtofl@exp^0,0,c
  3699  001D60  EFB4  F00E         	goto	u2231
  3700  001D64  EFB6  F00E         	goto	u2230
  3701  001D68                     u2231:
  3702  001D68  EFB7  F00E         	goto	l2674
  3703  001D6C                     u2230:
  3704  001D6C  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  3705  001D6E                     l2674:
  3706  001D6E  90D8               	bcf	status,0,c
  3707  001D70  3210               	rrcf	___xxtofl@exp^0,f,c
  3708  001D72  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  3709  001D76  6A0C               	clrf	(??___xxtofl+1)^0,c
  3710  001D78  6A0D               	clrf	(??___xxtofl+2)^0,c
  3711  001D7A  6A0E               	clrf	(??___xxtofl+3)^0,c
  3712  001D7C  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  3713  001D80  6A0D               	clrf	(??___xxtofl+2)^0,c
  3714  001D82  6A0C               	clrf	(??___xxtofl+1)^0,c
  3715  001D84  6A0B               	clrf	??___xxtofl^0,c
  3716  001D86  500B               	movf	??___xxtofl^0,w,c
  3717  001D88  1211               	iorwf	___xxtofl@arg^0,f,c
  3718  001D8A  500C               	movf	(??___xxtofl+1)^0,w,c
  3719  001D8C  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  3720  001D8E  500D               	movf	(??___xxtofl+2)^0,w,c
  3721  001D90  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  3722  001D92  500E               	movf	(??___xxtofl+3)^0,w,c
  3723  001D94  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  3724  001D96  500F               	movf	___xxtofl@sign^0,w,c
  3725  001D98  B4D8               	btfsc	status,2,c
  3726  001D9A  EFD1  F00E         	goto	u2241
  3727  001D9E  EFD3  F00E         	goto	u2240
  3728  001DA2                     u2241:
  3729  001DA2  EFDB  F00E         	goto	l2684
  3730  001DA6                     u2240:
  3731  001DA6  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  3732  001DA8  EFDA  F00E         	goto	u2250
  3733  001DAC  EFD8  F00E         	goto	u2251
  3734  001DB0                     u2251:
  3735  001DB0  EFDB  F00E         	goto	l2684
  3736  001DB4                     u2250:
  3737  001DB4  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  3738  001DB6                     l2684:
  3739  001DB6  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  3740  001DBA  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  3741  001DBE  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  3742  001DC2  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  3743  001DC6                     l1006:
  3744  001DC6  0012               	return		;funcret
  3745  001DC8                     __end_of___xxtofl:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function ___wmul *****************
  3749 ;; Defined at:
  3750 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  multiplier      2    0[COMRAM] unsigned int 
  3753 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  product         2    4[COMRAM] unsigned int 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  2    0[COMRAM] unsigned int 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, prodl, prodh
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;Total ram usage:        6 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;;		_adc_init
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text16
  3780  002972                     __ptext16:
  3781                           	callstack 0
  3782  002972                     ___wmul:
  3783                           	callstack 29
  3784  002972  5001               	movf	___wmul@multiplier^0,w,c
  3785  002974  0203               	mulwf	___wmul@multiplicand^0,c
  3786  002976  CFF3 F005          	movff	prodl,___wmul@product
  3787  00297A  CFF4 F006          	movff	prodh,___wmul@product+1
  3788  00297E  5001               	movf	___wmul@multiplier^0,w,c
  3789  002980  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3790  002982  50F3               	movf	243,w,c
  3791  002984  2606               	addwf	(___wmul@product+1)^0,f,c
  3792  002986  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3793  002988  0203               	mulwf	___wmul@multiplicand^0,c
  3794  00298A  50F3               	movf	243,w,c
  3795  00298C  2606               	addwf	(___wmul@product+1)^0,f,c
  3796  00298E  C005  F001         	movff	___wmul@product,?___wmul
  3797  002992  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3798  002996  0012               	return		;funcret
  3799  002998                     __end_of___wmul:
  3800                           	callstack 0
  3801                           
  3802 ;; *************** function ___fltol *****************
  3803 ;; Defined at:
  3804 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  f1              4   45[COMRAM] unsigned int 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  exp1            1   54[COMRAM] unsigned char 
  3809 ;;  sign1           1   53[COMRAM] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  4   45[COMRAM] long 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;Total ram usage:       10 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_adc_init
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text17
  3833  0020B4                     __ptext17:
  3834                           	callstack 0
  3835  0020B4                     ___fltol:
  3836                           	callstack 29
  3837  0020B4  3430               	rlcf	(___fltol@f1+2)^0,w,c
  3838  0020B6  3431               	rlcf	(___fltol@f1+3)^0,w,c
  3839  0020B8  6E37               	movwf	___fltol@exp1^0,c
  3840  0020BA  5037               	movf	___fltol@exp1^0,w,c
  3841  0020BC  A4D8               	btfss	status,2,c
  3842  0020BE  EF63  F010         	goto	u2091
  3843  0020C2  EF65  F010         	goto	u2090
  3844  0020C6                     u2091:
  3845  0020C6  EF6F  F010         	goto	l2604
  3846  0020CA                     u2090:
  3847  0020CA                     l2600:
  3848  0020CA  0E00               	movlw	0
  3849  0020CC  6E2E               	movwf	?___fltol^0,c
  3850  0020CE  0E00               	movlw	0
  3851  0020D0  6E2F               	movwf	(?___fltol+1)^0,c
  3852  0020D2  0E00               	movlw	0
  3853  0020D4  6E30               	movwf	(?___fltol+2)^0,c
  3854  0020D6  0E00               	movlw	0
  3855  0020D8  6E31               	movwf	(?___fltol+3)^0,c
  3856  0020DA  EFDC  F010         	goto	l645
  3857  0020DE                     l2604:
  3858  0020DE  C02E  F032         	movff	___fltol@f1,??___fltol
  3859  0020E2  C02F  F033         	movff	___fltol@f1+1,??___fltol+1
  3860  0020E6  C030  F034         	movff	___fltol@f1+2,??___fltol+2
  3861  0020EA  C031  F035         	movff	___fltol@f1+3,??___fltol+3
  3862  0020EE  0E20               	movlw	32
  3863  0020F0  EF7F  F010         	goto	u2100
  3864  0020F4                     u2105:
  3865  0020F4  90D8               	bcf	status,0,c
  3866  0020F6  3235               	rrcf	(??___fltol+3)^0,f,c
  3867  0020F8  3234               	rrcf	(??___fltol+2)^0,f,c
  3868  0020FA  3233               	rrcf	(??___fltol+1)^0,f,c
  3869  0020FC  3232               	rrcf	??___fltol^0,f,c
  3870  0020FE                     u2100:
  3871  0020FE  2EE8               	decfsz	wreg,f,c
  3872  002100  EF7A  F010         	goto	u2105
  3873  002104  5032               	movf	??___fltol^0,w,c
  3874  002106  6E36               	movwf	___fltol@sign1^0,c
  3875  002108  8E30               	bsf	(___fltol@f1+2)^0,7,c
  3876  00210A  0EFF               	movlw	255
  3877  00210C  162E               	andwf	___fltol@f1^0,f,c
  3878  00210E  0EFF               	movlw	255
  3879  002110  162F               	andwf	(___fltol@f1+1)^0,f,c
  3880  002112  0EFF               	movlw	255
  3881  002114  1630               	andwf	(___fltol@f1+2)^0,f,c
  3882  002116  0E00               	movlw	0
  3883  002118  1631               	andwf	(___fltol@f1+3)^0,f,c
  3884  00211A  0E96               	movlw	150
  3885  00211C  5E37               	subwf	___fltol@exp1^0,f,c
  3886  00211E  BE37               	btfsc	___fltol@exp1^0,7,c
  3887  002120  EF96  F010         	goto	u2110
  3888  002124  EF94  F010         	goto	u2111
  3889  002128                     u2111:
  3890  002128  EFAC  F010         	goto	l2624
  3891  00212C                     u2110:
  3892  00212C  5037               	movf	___fltol@exp1^0,w,c
  3893  00212E  0A80               	xorlw	128
  3894  002130  0F97               	addlw	151
  3895  002132  B0D8               	btfsc	status,0,c
  3896  002134  EF9E  F010         	goto	u2121
  3897  002138  EFA0  F010         	goto	u2120
  3898  00213C                     u2121:
  3899  00213C  EFA2  F010         	goto	l2620
  3900  002140                     u2120:
  3901  002140  EF65  F010         	goto	l2600
  3902  002144                     l2620:
  3903  002144  90D8               	bcf	status,0,c
  3904  002146  3231               	rrcf	(___fltol@f1+3)^0,f,c
  3905  002148  3230               	rrcf	(___fltol@f1+2)^0,f,c
  3906  00214A  322F               	rrcf	(___fltol@f1+1)^0,f,c
  3907  00214C  322E               	rrcf	___fltol@f1^0,f,c
  3908  00214E  3E37               	incfsz	___fltol@exp1^0,f,c
  3909  002150  EFA2  F010         	goto	l2620
  3910  002154  EFC4  F010         	goto	l2634
  3911  002158                     l2624:
  3912  002158  0E1F               	movlw	31
  3913  00215A  6437               	cpfsgt	___fltol@exp1^0,c
  3914  00215C  EFB2  F010         	goto	u2131
  3915  002160  EFB4  F010         	goto	u2130
  3916  002164                     u2131:
  3917  002164  EFBC  F010         	goto	l2632
  3918  002168                     u2130:
  3919  002168  EF65  F010         	goto	l2600
  3920  00216C                     l2630:
  3921  00216C  90D8               	bcf	status,0,c
  3922  00216E  362E               	rlcf	___fltol@f1^0,f,c
  3923  002170  362F               	rlcf	(___fltol@f1+1)^0,f,c
  3924  002172  3630               	rlcf	(___fltol@f1+2)^0,f,c
  3925  002174  3631               	rlcf	(___fltol@f1+3)^0,f,c
  3926  002176  0637               	decf	___fltol@exp1^0,f,c
  3927  002178                     l2632:
  3928  002178  5037               	movf	___fltol@exp1^0,w,c
  3929  00217A  A4D8               	btfss	status,2,c
  3930  00217C  EFC2  F010         	goto	u2141
  3931  002180  EFC4  F010         	goto	u2140
  3932  002184                     u2141:
  3933  002184  EFB6  F010         	goto	l2630
  3934  002188                     u2140:
  3935  002188                     l2634:
  3936  002188  5036               	movf	___fltol@sign1^0,w,c
  3937  00218A  B4D8               	btfsc	status,2,c
  3938  00218C  EFCA  F010         	goto	u2151
  3939  002190  EFCC  F010         	goto	u2150
  3940  002194                     u2151:
  3941  002194  EFD4  F010         	goto	l2638
  3942  002198                     u2150:
  3943  002198  1E31               	comf	(___fltol@f1+3)^0,f,c
  3944  00219A  1E30               	comf	(___fltol@f1+2)^0,f,c
  3945  00219C  1E2F               	comf	(___fltol@f1+1)^0,f,c
  3946  00219E  6C2E               	negf	___fltol@f1^0,c
  3947  0021A0  0E00               	movlw	0
  3948  0021A2  222F               	addwfc	(___fltol@f1+1)^0,f,c
  3949  0021A4  2230               	addwfc	(___fltol@f1+2)^0,f,c
  3950  0021A6  2231               	addwfc	(___fltol@f1+3)^0,f,c
  3951  0021A8                     l2638:
  3952  0021A8  C02E  F02E         	movff	___fltol@f1,?___fltol
  3953  0021AC  C02F  F02F         	movff	___fltol@f1+1,?___fltol+1
  3954  0021B0  C030  F030         	movff	___fltol@f1+2,?___fltol+2
  3955  0021B4  C031  F031         	movff	___fltol@f1+3,?___fltol+3
  3956  0021B8                     l645:
  3957  0021B8  0012               	return		;funcret
  3958  0021BA                     __end_of___fltol:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function ___fldiv *****************
  3962 ;; Defined at:
  3963 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  b               4   20[COMRAM] long 
  3966 ;;  a               4   24[COMRAM] long 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  grs             4   39[COMRAM] unsigned long 
  3969 ;;  rem             4   32[COMRAM] unsigned long 
  3970 ;;  new_exp         2   37[COMRAM] short 
  3971 ;;  aexp            1   44[COMRAM] unsigned char 
  3972 ;;  bexp            1   43[COMRAM] unsigned char 
  3973 ;;  sign            1   36[COMRAM] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  4   20[COMRAM] unsigned char 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3983 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;Total ram usage:       25 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_adc_init
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text18
  3997  00106E                     __ptext18:
  3998                           	callstack 0
  3999  00106E                     ___fldiv:
  4000                           	callstack 29
  4001  00106E  5018               	movf	(___fldiv@b+3)^0,w,c
  4002  001070  0B80               	andlw	128
  4003  001072  6E25               	movwf	___fldiv@sign^0,c
  4004  001074  5018               	movf	(___fldiv@b+3)^0,w,c
  4005  001076  2418               	addwf	(___fldiv@b+3)^0,w,c
  4006  001078  6E2C               	movwf	___fldiv@bexp^0,c
  4007  00107A  AE17               	btfss	(___fldiv@b+2)^0,7,c
  4008  00107C  EF42  F008         	goto	u1861
  4009  001080  EF44  F008         	goto	u1860
  4010  001084                     u1861:
  4011  001084  EF45  F008         	goto	l2466
  4012  001088                     u1860:
  4013  001088  802C               	bsf	___fldiv@bexp^0,0,c
  4014  00108A                     l2466:
  4015  00108A  502C               	movf	___fldiv@bexp^0,w,c
  4016  00108C  B4D8               	btfsc	status,2,c
  4017  00108E  EF4B  F008         	goto	u1871
  4018  001092  EF4D  F008         	goto	u1870
  4019  001096                     u1871:
  4020  001096  EF62  F008         	goto	l2476
  4021  00109A                     u1870:
  4022  00109A  282C               	incf	___fldiv@bexp^0,w,c
  4023  00109C  A4D8               	btfss	status,2,c
  4024  00109E  EF53  F008         	goto	u1881
  4025  0010A2  EF55  F008         	goto	u1880
  4026  0010A6                     u1881:
  4027  0010A6  EF5D  F008         	goto	l2472
  4028  0010AA                     u1880:
  4029  0010AA  0E00               	movlw	0
  4030  0010AC  6E15               	movwf	___fldiv@b^0,c
  4031  0010AE  0E00               	movlw	0
  4032  0010B0  6E16               	movwf	(___fldiv@b+1)^0,c
  4033  0010B2  0E00               	movlw	0
  4034  0010B4  6E17               	movwf	(___fldiv@b+2)^0,c
  4035  0010B6  0E00               	movlw	0
  4036  0010B8  6E18               	movwf	(___fldiv@b+3)^0,c
  4037  0010BA                     l2472:
  4038  0010BA  8E17               	bsf	(___fldiv@b+2)^0,7,c
  4039  0010BC  0E00               	movlw	0
  4040  0010BE  6E18               	movwf	(___fldiv@b+3)^0,c
  4041  0010C0  EF6A  F008         	goto	l2478
  4042  0010C4                     l2476:
  4043  0010C4  0E00               	movlw	0
  4044  0010C6  6E15               	movwf	___fldiv@b^0,c
  4045  0010C8  0E00               	movlw	0
  4046  0010CA  6E16               	movwf	(___fldiv@b+1)^0,c
  4047  0010CC  0E00               	movlw	0
  4048  0010CE  6E17               	movwf	(___fldiv@b+2)^0,c
  4049  0010D0  0E00               	movlw	0
  4050  0010D2  6E18               	movwf	(___fldiv@b+3)^0,c
  4051  0010D4                     l2478:
  4052  0010D4  501C               	movf	(___fldiv@a+3)^0,w,c
  4053  0010D6  0B80               	andlw	128
  4054  0010D8  1A25               	xorwf	___fldiv@sign^0,f,c
  4055  0010DA  501C               	movf	(___fldiv@a+3)^0,w,c
  4056  0010DC  241C               	addwf	(___fldiv@a+3)^0,w,c
  4057  0010DE  6E2D               	movwf	___fldiv@aexp^0,c
  4058  0010E0  AE1B               	btfss	(___fldiv@a+2)^0,7,c
  4059  0010E2  EF75  F008         	goto	u1891
  4060  0010E6  EF77  F008         	goto	u1890
  4061  0010EA                     u1891:
  4062  0010EA  EF78  F008         	goto	l2486
  4063  0010EE                     u1890:
  4064  0010EE  802D               	bsf	___fldiv@aexp^0,0,c
  4065  0010F0                     l2486:
  4066  0010F0  502D               	movf	___fldiv@aexp^0,w,c
  4067  0010F2  B4D8               	btfsc	status,2,c
  4068  0010F4  EF7E  F008         	goto	u1901
  4069  0010F8  EF80  F008         	goto	u1900
  4070  0010FC                     u1901:
  4071  0010FC  EF95  F008         	goto	l2496
  4072  001100                     u1900:
  4073  001100  282D               	incf	___fldiv@aexp^0,w,c
  4074  001102  A4D8               	btfss	status,2,c
  4075  001104  EF86  F008         	goto	u1911
  4076  001108  EF88  F008         	goto	u1910
  4077  00110C                     u1911:
  4078  00110C  EF90  F008         	goto	l2492
  4079  001110                     u1910:
  4080  001110  0E00               	movlw	0
  4081  001112  6E19               	movwf	___fldiv@a^0,c
  4082  001114  0E00               	movlw	0
  4083  001116  6E1A               	movwf	(___fldiv@a+1)^0,c
  4084  001118  0E00               	movlw	0
  4085  00111A  6E1B               	movwf	(___fldiv@a+2)^0,c
  4086  00111C  0E00               	movlw	0
  4087  00111E  6E1C               	movwf	(___fldiv@a+3)^0,c
  4088  001120                     l2492:
  4089  001120  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  4090  001122  0E00               	movlw	0
  4091  001124  6E1C               	movwf	(___fldiv@a+3)^0,c
  4092  001126  EF9D  F008         	goto	l2498
  4093  00112A                     l2496:
  4094  00112A  0E00               	movlw	0
  4095  00112C  6E19               	movwf	___fldiv@a^0,c
  4096  00112E  0E00               	movlw	0
  4097  001130  6E1A               	movwf	(___fldiv@a+1)^0,c
  4098  001132  0E00               	movlw	0
  4099  001134  6E1B               	movwf	(___fldiv@a+2)^0,c
  4100  001136  0E00               	movlw	0
  4101  001138  6E1C               	movwf	(___fldiv@a+3)^0,c
  4102  00113A                     l2498:
  4103  00113A  5019               	movf	___fldiv@a^0,w,c
  4104  00113C  101A               	iorwf	(___fldiv@a+1)^0,w,c
  4105  00113E  101B               	iorwf	(___fldiv@a+2)^0,w,c
  4106  001140  101C               	iorwf	(___fldiv@a+3)^0,w,c
  4107  001142  A4D8               	btfss	status,2,c
  4108  001144  EFA6  F008         	goto	u1921
  4109  001148  EFA8  F008         	goto	u1920
  4110  00114C                     u1921:
  4111  00114C  EFC0  F008         	goto	l2510
  4112  001150                     u1920:
  4113  001150  0E00               	movlw	0
  4114  001152  6E15               	movwf	___fldiv@b^0,c
  4115  001154  0E00               	movlw	0
  4116  001156  6E16               	movwf	(___fldiv@b+1)^0,c
  4117  001158  0E00               	movlw	0
  4118  00115A  6E17               	movwf	(___fldiv@b+2)^0,c
  4119  00115C  0E00               	movlw	0
  4120  00115E  6E18               	movwf	(___fldiv@b+3)^0,c
  4121  001160  0E80               	movlw	128
  4122  001162  1217               	iorwf	(___fldiv@b+2)^0,f,c
  4123  001164  0E7F               	movlw	127
  4124  001166  1218               	iorwf	(___fldiv@b+3)^0,f,c
  4125  001168                     l2504:
  4126  001168  5025               	movf	___fldiv@sign^0,w,c
  4127  00116A  1218               	iorwf	(___fldiv@b+3)^0,f,c
  4128  00116C  C015  F015         	movff	___fldiv@b,?___fldiv
  4129  001170  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  4130  001174  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  4131  001178  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  4132  00117C  EF03  F00A         	goto	l930
  4133  001180                     l2510:
  4134  001180  502C               	movf	___fldiv@bexp^0,w,c
  4135  001182  A4D8               	btfss	status,2,c
  4136  001184  EFC6  F008         	goto	u1931
  4137  001188  EFC8  F008         	goto	u1930
  4138  00118C                     u1931:
  4139  00118C  EFD2  F008         	goto	l2518
  4140  001190                     u1930:
  4141  001190  0E00               	movlw	0
  4142  001192  6E15               	movwf	?___fldiv^0,c
  4143  001194  0E00               	movlw	0
  4144  001196  6E16               	movwf	(?___fldiv+1)^0,c
  4145  001198  0E00               	movlw	0
  4146  00119A  6E17               	movwf	(?___fldiv+2)^0,c
  4147  00119C  0E00               	movlw	0
  4148  00119E  6E18               	movwf	(?___fldiv+3)^0,c
  4149  0011A0  EF03  F00A         	goto	l930
  4150  0011A4                     l2518:
  4151  0011A4  502D               	movf	___fldiv@aexp^0,w,c
  4152  0011A6  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  4153  0011AA  6A1E               	clrf	(??___fldiv+1)^0,c
  4154  0011AC  5E1D               	subwf	??___fldiv^0,f,c
  4155  0011AE  0E00               	movlw	0
  4156  0011B0  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  4157  0011B2  0E7F               	movlw	127
  4158  0011B4  241D               	addwf	??___fldiv^0,w,c
  4159  0011B6  6E26               	movwf	___fldiv@new_exp^0,c
  4160  0011B8  0E00               	movlw	0
  4161  0011BA  201E               	addwfc	(??___fldiv+1)^0,w,c
  4162  0011BC  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  4163  0011BE  C015  F021         	movff	___fldiv@b,___fldiv@rem
  4164  0011C2  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  4165  0011C6  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  4166  0011CA  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  4167  0011CE  0E00               	movlw	0
  4168  0011D0  6E15               	movwf	___fldiv@b^0,c
  4169  0011D2  0E00               	movlw	0
  4170  0011D4  6E16               	movwf	(___fldiv@b+1)^0,c
  4171  0011D6  0E00               	movlw	0
  4172  0011D8  6E17               	movwf	(___fldiv@b+2)^0,c
  4173  0011DA  0E00               	movlw	0
  4174  0011DC  6E18               	movwf	(___fldiv@b+3)^0,c
  4175  0011DE  0E00               	movlw	0
  4176  0011E0  6E28               	movwf	___fldiv@grs^0,c
  4177  0011E2  0E00               	movlw	0
  4178  0011E4  6E29               	movwf	(___fldiv@grs+1)^0,c
  4179  0011E6  0E00               	movlw	0
  4180  0011E8  6E2A               	movwf	(___fldiv@grs+2)^0,c
  4181  0011EA  0E00               	movlw	0
  4182  0011EC  6E2B               	movwf	(___fldiv@grs+3)^0,c
  4183  0011EE  0E00               	movlw	0
  4184  0011F0  6E2D               	movwf	___fldiv@aexp^0,c
  4185  0011F2  EF33  F009         	goto	l932
  4186  0011F6                     l2528:
  4187  0011F6  502D               	movf	___fldiv@aexp^0,w,c
  4188  0011F8  B4D8               	btfsc	status,2,c
  4189  0011FA  EF01  F009         	goto	u1941
  4190  0011FE  EF03  F009         	goto	u1940
  4191  001202                     u1941:
  4192  001202  EF1A  F009         	goto	l2536
  4193  001206                     u1940:
  4194  001206  90D8               	bcf	status,0,c
  4195  001208  3621               	rlcf	___fldiv@rem^0,f,c
  4196  00120A  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  4197  00120C  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  4198  00120E  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  4199  001210  90D8               	bcf	status,0,c
  4200  001212  3615               	rlcf	___fldiv@b^0,f,c
  4201  001214  3616               	rlcf	(___fldiv@b+1)^0,f,c
  4202  001216  3617               	rlcf	(___fldiv@b+2)^0,f,c
  4203  001218  3618               	rlcf	(___fldiv@b+3)^0,f,c
  4204  00121A  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  4205  00121C  EF12  F009         	goto	u1951
  4206  001220  EF14  F009         	goto	u1950
  4207  001224                     u1951:
  4208  001224  EF15  F009         	goto	l935
  4209  001228                     u1950:
  4210  001228  8015               	bsf	___fldiv@b^0,0,c
  4211  00122A                     l935:
  4212  00122A  90D8               	bcf	status,0,c
  4213  00122C  3628               	rlcf	___fldiv@grs^0,f,c
  4214  00122E  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  4215  001230  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  4216  001232  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  4217  001234                     l2536:
  4218  001234  5019               	movf	___fldiv@a^0,w,c
  4219  001236  5C21               	subwf	___fldiv@rem^0,w,c
  4220  001238  501A               	movf	(___fldiv@a+1)^0,w,c
  4221  00123A  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  4222  00123C  501B               	movf	(___fldiv@a+2)^0,w,c
  4223  00123E  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  4224  001240  501C               	movf	(___fldiv@a+3)^0,w,c
  4225  001242  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  4226  001244  A0D8               	btfss	status,0,c
  4227  001246  EF27  F009         	goto	u1961
  4228  00124A  EF29  F009         	goto	u1960
  4229  00124E                     u1961:
  4230  00124E  EF32  F009         	goto	l2542
  4231  001252                     u1960:
  4232  001252  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  4233  001254  5019               	movf	___fldiv@a^0,w,c
  4234  001256  5E21               	subwf	___fldiv@rem^0,f,c
  4235  001258  501A               	movf	(___fldiv@a+1)^0,w,c
  4236  00125A  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  4237  00125C  501B               	movf	(___fldiv@a+2)^0,w,c
  4238  00125E  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  4239  001260  501C               	movf	(___fldiv@a+3)^0,w,c
  4240  001262  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  4241  001264                     l2542:
  4242  001264  2A2D               	incf	___fldiv@aexp^0,f,c
  4243  001266                     l932:
  4244  001266  0E19               	movlw	25
  4245  001268  642D               	cpfsgt	___fldiv@aexp^0,c
  4246  00126A  EF39  F009         	goto	u1971
  4247  00126E  EF3B  F009         	goto	u1970
  4248  001272                     u1971:
  4249  001272  EFFB  F008         	goto	l2528
  4250  001276                     u1970:
  4251  001276  5021               	movf	___fldiv@rem^0,w,c
  4252  001278  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  4253  00127A  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  4254  00127C  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  4255  00127E  B4D8               	btfsc	status,2,c
  4256  001280  EF44  F009         	goto	u1981
  4257  001284  EF46  F009         	goto	u1980
  4258  001288                     u1981:
  4259  001288  EF5E  F009         	goto	l2554
  4260  00128C                     u1980:
  4261  00128C  8028               	bsf	___fldiv@grs^0,0,c
  4262  00128E  EF5E  F009         	goto	l2554
  4263  001292                     l2548:
  4264  001292  90D8               	bcf	status,0,c
  4265  001294  3615               	rlcf	___fldiv@b^0,f,c
  4266  001296  3616               	rlcf	(___fldiv@b+1)^0,f,c
  4267  001298  3617               	rlcf	(___fldiv@b+2)^0,f,c
  4268  00129A  3618               	rlcf	(___fldiv@b+3)^0,f,c
  4269  00129C  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  4270  00129E  EF53  F009         	goto	u1991
  4271  0012A2  EF55  F009         	goto	u1990
  4272  0012A6                     u1991:
  4273  0012A6  EF56  F009         	goto	l941
  4274  0012AA                     u1990:
  4275  0012AA  8015               	bsf	___fldiv@b^0,0,c
  4276  0012AC                     l941:
  4277  0012AC  90D8               	bcf	status,0,c
  4278  0012AE  3628               	rlcf	___fldiv@grs^0,f,c
  4279  0012B0  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  4280  0012B2  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  4281  0012B4  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  4282  0012B6  0626               	decf	___fldiv@new_exp^0,f,c
  4283  0012B8  A0D8               	btfss	status,0,c
  4284  0012BA  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  4285  0012BC                     l2554:
  4286  0012BC  AE17               	btfss	(___fldiv@b+2)^0,7,c
  4287  0012BE  EF63  F009         	goto	u2001
  4288  0012C2  EF65  F009         	goto	u2000
  4289  0012C6                     u2001:
  4290  0012C6  EF49  F009         	goto	l2548
  4291  0012CA                     u2000:
  4292  0012CA  0E00               	movlw	0
  4293  0012CC  6E2D               	movwf	___fldiv@aexp^0,c
  4294  0012CE  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  4295  0012D0  EF6C  F009         	goto	u2011
  4296  0012D4  EF6E  F009         	goto	u2010
  4297  0012D8                     u2011:
  4298  0012D8  EF92  F009         	goto	l943
  4299  0012DC                     u2010:
  4300  0012DC  0EFF               	movlw	255
  4301  0012DE  1428               	andwf	___fldiv@grs^0,w,c
  4302  0012E0  6E1D               	movwf	??___fldiv^0,c
  4303  0012E2  0EFF               	movlw	255
  4304  0012E4  1429               	andwf	(___fldiv@grs+1)^0,w,c
  4305  0012E6  6E1E               	movwf	(??___fldiv+1)^0,c
  4306  0012E8  0EFF               	movlw	255
  4307  0012EA  142A               	andwf	(___fldiv@grs+2)^0,w,c
  4308  0012EC  6E1F               	movwf	(??___fldiv+2)^0,c
  4309  0012EE  0E7F               	movlw	127
  4310  0012F0  142B               	andwf	(___fldiv@grs+3)^0,w,c
  4311  0012F2  6E20               	movwf	(??___fldiv+3)^0,c
  4312  0012F4  501D               	movf	??___fldiv^0,w,c
  4313  0012F6  101E               	iorwf	(??___fldiv+1)^0,w,c
  4314  0012F8  101F               	iorwf	(??___fldiv+2)^0,w,c
  4315  0012FA  1020               	iorwf	(??___fldiv+3)^0,w,c
  4316  0012FC  B4D8               	btfsc	status,2,c
  4317  0012FE  EF83  F009         	goto	u2021
  4318  001302  EF85  F009         	goto	u2020
  4319  001306                     u2021:
  4320  001306  EF89  F009         	goto	l944
  4321  00130A                     u2020:
  4322  00130A                     l2562:
  4323  00130A  0E01               	movlw	1
  4324  00130C  6E2D               	movwf	___fldiv@aexp^0,c
  4325  00130E  EF92  F009         	goto	l943
  4326  001312                     l944:
  4327  001312  A015               	btfss	___fldiv@b^0,0,c
  4328  001314  EF8E  F009         	goto	u2031
  4329  001318  EF90  F009         	goto	u2030
  4330  00131C                     u2031:
  4331  00131C  EF92  F009         	goto	l943
  4332  001320                     u2030:
  4333  001320  EF85  F009         	goto	l2562
  4334  001324                     l943:
  4335  001324  502D               	movf	___fldiv@aexp^0,w,c
  4336  001326  B4D8               	btfsc	status,2,c
  4337  001328  EF98  F009         	goto	u2041
  4338  00132C  EF9A  F009         	goto	u2040
  4339  001330                     u2041:
  4340  001330  EFBE  F009         	goto	l2574
  4341  001334                     u2040:
  4342  001334  0E01               	movlw	1
  4343  001336  2615               	addwf	___fldiv@b^0,f,c
  4344  001338  0E00               	movlw	0
  4345  00133A  2216               	addwfc	(___fldiv@b+1)^0,f,c
  4346  00133C  2217               	addwfc	(___fldiv@b+2)^0,f,c
  4347  00133E  2218               	addwfc	(___fldiv@b+3)^0,f,c
  4348  001340  A018               	btfss	(___fldiv@b+3)^0,0,c
  4349  001342  EFA5  F009         	goto	u2051
  4350  001346  EFA7  F009         	goto	u2050
  4351  00134A                     u2051:
  4352  00134A  EFBE  F009         	goto	l2574
  4353  00134E                     u2050:
  4354  00134E  C015  F01D         	movff	___fldiv@b,??___fldiv
  4355  001352  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  4356  001356  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  4357  00135A  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  4358  00135E  3420               	rlcf	(??___fldiv+3)^0,w,c
  4359  001360  3220               	rrcf	(??___fldiv+3)^0,f,c
  4360  001362  321F               	rrcf	(??___fldiv+2)^0,f,c
  4361  001364  321E               	rrcf	(??___fldiv+1)^0,f,c
  4362  001366  321D               	rrcf	??___fldiv^0,f,c
  4363  001368  C01D  F015         	movff	??___fldiv,___fldiv@b
  4364  00136C  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  4365  001370  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  4366  001374  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  4367  001378  4A26               	infsnz	___fldiv@new_exp^0,f,c
  4368  00137A  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  4369  00137C                     l2574:
  4370  00137C  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4371  00137E  EFC9  F009         	goto	u2061
  4372  001382  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  4373  001384  E108               	bnz	u2060
  4374  001386  2826               	incf	___fldiv@new_exp^0,w,c
  4375  001388  A0D8               	btfss	status,0,c
  4376  00138A  EFC9  F009         	goto	u2061
  4377  00138E  EFCB  F009         	goto	u2060
  4378  001392                     u2061:
  4379  001392  EFD6  F009         	goto	l2578
  4380  001396                     u2060:
  4381  001396  0E00               	movlw	0
  4382  001398  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  4383  00139A  6826               	setf	___fldiv@new_exp^0,c
  4384  00139C  0E00               	movlw	0
  4385  00139E  6E15               	movwf	___fldiv@b^0,c
  4386  0013A0  0E00               	movlw	0
  4387  0013A2  6E16               	movwf	(___fldiv@b+1)^0,c
  4388  0013A4  0E00               	movlw	0
  4389  0013A6  6E17               	movwf	(___fldiv@b+2)^0,c
  4390  0013A8  0E00               	movlw	0
  4391  0013AA  6E18               	movwf	(___fldiv@b+3)^0,c
  4392  0013AC                     l2578:
  4393  0013AC  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4394  0013AE  EFE3  F009         	goto	u2070
  4395  0013B2  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  4396  0013B4  E106               	bnz	u2071
  4397  0013B6  0426               	decf	___fldiv@new_exp^0,w,c
  4398  0013B8  B0D8               	btfsc	status,0,c
  4399  0013BA  EFE1  F009         	goto	u2071
  4400  0013BE  EFE3  F009         	goto	u2070
  4401  0013C2                     u2071:
  4402  0013C2  EFF1  F009         	goto	l2582
  4403  0013C6                     u2070:
  4404  0013C6  0E00               	movlw	0
  4405  0013C8  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  4406  0013CA  0E00               	movlw	0
  4407  0013CC  6E26               	movwf	___fldiv@new_exp^0,c
  4408  0013CE  0E00               	movlw	0
  4409  0013D0  6E15               	movwf	___fldiv@b^0,c
  4410  0013D2  0E00               	movlw	0
  4411  0013D4  6E16               	movwf	(___fldiv@b+1)^0,c
  4412  0013D6  0E00               	movlw	0
  4413  0013D8  6E17               	movwf	(___fldiv@b+2)^0,c
  4414  0013DA  0E00               	movlw	0
  4415  0013DC  6E18               	movwf	(___fldiv@b+3)^0,c
  4416  0013DE  0E00               	movlw	0
  4417  0013E0  6E25               	movwf	___fldiv@sign^0,c
  4418  0013E2                     l2582:
  4419  0013E2  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  4420  0013E6  A02C               	btfss	___fldiv@bexp^0,0,c
  4421  0013E8  EFF8  F009         	goto	u2081
  4422  0013EC  EFFA  F009         	goto	u2080
  4423  0013F0                     u2081:
  4424  0013F0  EFFD  F009         	goto	l2588
  4425  0013F4                     u2080:
  4426  0013F4  8E17               	bsf	(___fldiv@b+2)^0,7,c
  4427  0013F6  EFFE  F009         	goto	l2590
  4428  0013FA                     l2588:
  4429  0013FA  9E17               	bcf	(___fldiv@b+2)^0,7,c
  4430  0013FC                     l2590:
  4431  0013FC  90D8               	bcf	status,0,c
  4432  0013FE  302C               	rrcf	___fldiv@bexp^0,w,c
  4433  001400  6E18               	movwf	(___fldiv@b+3)^0,c
  4434  001402  EFB4  F008         	goto	l2504
  4435  001406                     l930:
  4436  001406  0012               	return		;funcret
  4437  001408                     __end_of___fldiv:
  4438                           	callstack 0
  4439                           
  4440 ;; *************** function _LCD_Initialize *****************
  4441 ;; Defined at:
  4442 ;;		line 46 in file "lcd.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, status,0, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;Total ram usage:        1 bytes
  4461 ;; Hardware stack levels used: 1
  4462 ;; Hardware stack levels required when called: 2
  4463 ;; This function calls:
  4464 ;;		_LCDPutCmd
  4465 ;; This function is called by:
  4466 ;;		_main
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text19
  4471  002866                     __ptext19:
  4472                           	callstack 0
  4473  002866                     _LCD_Initialize:
  4474                           	callstack 28
  4475  002866                     
  4476                           ;lcd.c: 49:     PORTD = 0;
  4477  002866  0E00               	movlw	0
  4478  002868  6E83               	movwf	131,c	;volatile
  4479                           
  4480                           ;lcd.c: 51:     TRISD = 0x00;
  4481  00286A  0E00               	movlw	0
  4482  00286C  6E95               	movwf	149,c	;volatile
  4483  00286E                     
  4484                           ;lcd.c: 54:     PORTDbits.RD1 = 1;
  4485  00286E  8283               	bsf	131,1,c	;volatile
  4486  002870                     
  4487                           ;lcd.c: 57:     _delay((unsigned long)((15)*(8e6/4000.0)));
  4488  002870  0E27               	movlw	39
  4489  002872  6E0A               	movwf	??_LCD_Initialize^0,c
  4490  002874  0EF5               	movlw	245
  4491  002876                     u2887:
  4492  002876  2EE8               	decfsz	wreg,f,c
  4493  002878  D7FE               	bra	u2887
  4494  00287A  2E0A               	decfsz	??_LCD_Initialize^0,f,c
  4495  00287C  D7FC               	bra	u2887
  4496  00287E  F000               	nop	
  4497  002880                     
  4498                           ;lcd.c: 60:     LCDPutCmd(0x32);
  4499  002880  0E32               	movlw	50
  4500  002882  EC50  F014         	call	_LCDPutCmd
  4501  002886                     
  4502                           ;lcd.c: 63:     LCDPutCmd(0x28);
  4503  002886  0E28               	movlw	40
  4504  002888  EC50  F014         	call	_LCDPutCmd
  4505  00288C                     
  4506                           ;lcd.c: 66:     LCDPutCmd(0x0C);
  4507  00288C  0E0C               	movlw	12
  4508  00288E  EC50  F014         	call	_LCDPutCmd
  4509  002892                     
  4510                           ;lcd.c: 68:     LCDPutCmd(0x01);
  4511  002892  0E01               	movlw	1
  4512  002894  EC50  F014         	call	_LCDPutCmd
  4513  002898                     
  4514                           ;lcd.c: 71:     LCDPutCmd(0x06);
  4515  002898  0E06               	movlw	6
  4516  00289A  EC50  F014         	call	_LCDPutCmd
  4517  00289E  0012               	return		;funcret
  4518  0028A0                     __end_of_LCD_Initialize:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _LCDPutStr *****************
  4522 ;; Defined at:
  4523 ;;		line 145 in file "lcd.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  str             2    9[COMRAM] PTR const unsigned char 
  4526 ;;		 -> STR_13(14), STR_12(14), STR_11(14), STR_10(14), 
  4527 ;;		 -> STR_9(14), STR_8(14), STR_7(16), STR_6(10), 
  4528 ;;		 -> STR_5(7), txt_new(16), txt(16), STR_2(13), 
  4529 ;;		 -> STR_1(16), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  i               1   13[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;Total ram usage:        5 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 2
  4548 ;; This function calls:
  4549 ;;		_LCDPutChar
  4550 ;; This function is called by:
  4551 ;;		_main
  4552 ;;		_keypad_fun
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text20
  4557  0025E6                     __ptext20:
  4558                           	callstack 0
  4559  0025E6                     _LCDPutStr:
  4560                           	callstack 28
  4561  0025E6                     
  4562                           ;lcd.c: 145: void LCDPutStr(const char *str);lcd.c: 146: {;lcd.c: 147:     uint8_t i=0;
  4563  0025E6  0E00               	movlw	0
  4564  0025E8  6E0E               	movwf	LCDPutStr@i^0,c
  4565                           
  4566                           ;lcd.c: 150:     while (str[i])
  4567  0025EA  EF11  F013         	goto	l2736
  4568  0025EE                     l2732:
  4569                           
  4570                           ;lcd.c: 151:     {;lcd.c: 153:         LCDPutChar(str[i++]);
  4571  0025EE  500E               	movf	LCDPutStr@i^0,w,c
  4572  0025F0  240A               	addwf	LCDPutStr@str^0,w,c
  4573  0025F2  6E0C               	movwf	??_LCDPutStr^0,c
  4574  0025F4  0E00               	movlw	0
  4575  0025F6  200B               	addwfc	(LCDPutStr@str+1)^0,w,c
  4576  0025F8  6E0D               	movwf	(??_LCDPutStr+1)^0,c
  4577  0025FA  C00C  FFF6         	movff	??_LCDPutStr,tblptrl
  4578  0025FE  C00D  FFF7         	movff	??_LCDPutStr+1,tblptrh
  4579  002602  0E00               	movlw	low (__smallconst shr (0+16))
  4580  002604  6EF8               	movwf	tblptru,c
  4581  002606  0E0F               	movlw	(high __ramtop+-1)
  4582  002608  64F7               	cpfsgt	tblptrh,c
  4583  00260A  D003               	bra	u2307
  4584  00260C  0008               	tblrd		*
  4585  00260E  50F5               	movf	tablat,w,c
  4586  002610  D005               	bra	u2300
  4587  002612                     u2307:
  4588  002612  CFF6 FFE9          	movff	tblptrl,fsr0l
  4589  002616  CFF7 FFEA          	movff	tblptrh,fsr0h
  4590  00261A  50EF               	movf	indf0,w,c
  4591  00261C                     u2300:
  4592  00261C  ECA3  F014         	call	_LCDPutChar
  4593  002620  2A0E               	incf	LCDPutStr@i^0,f,c
  4594  002622                     l2736:
  4595                           
  4596                           ;lcd.c: 150:     while (str[i])
  4597  002622  500E               	movf	LCDPutStr@i^0,w,c
  4598  002624  240A               	addwf	LCDPutStr@str^0,w,c
  4599  002626  6E0C               	movwf	??_LCDPutStr^0,c
  4600  002628  0E00               	movlw	0
  4601  00262A  200B               	addwfc	(LCDPutStr@str+1)^0,w,c
  4602  00262C  6E0D               	movwf	(??_LCDPutStr+1)^0,c
  4603  00262E  C00C  FFF6         	movff	??_LCDPutStr,tblptrl
  4604  002632  C00D  FFF7         	movff	??_LCDPutStr+1,tblptrh
  4605  002636  0E00               	movlw	low (__smallconst shr (0+16))
  4606  002638  6EF8               	movwf	tblptru,c
  4607  00263A  0E0F               	movlw	(high __ramtop+-1)
  4608  00263C  64F7               	cpfsgt	tblptrh,c
  4609  00263E  D003               	bra	u2317
  4610  002640  0008               	tblrd		*
  4611  002642  50F5               	movf	tablat,w,c
  4612  002644  D005               	bra	u2310
  4613  002646                     u2317:
  4614  002646  CFF6 FFE9          	movff	tblptrl,fsr0l
  4615  00264A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4616  00264E  50EF               	movf	indf0,w,c
  4617  002650                     u2310:
  4618  002650  0900               	iorlw	0
  4619  002652  A4D8               	btfss	status,2,c
  4620  002654  EF2E  F013         	goto	u2321
  4621  002658  EF30  F013         	goto	u2320
  4622  00265C                     u2321:
  4623  00265C  EFF7  F012         	goto	l2732
  4624  002660                     u2320:
  4625  002660  0012               	return		;funcret
  4626  002662                     __end_of_LCDPutStr:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _LCDPutChar *****************
  4630 ;; Defined at:
  4631 ;;		line 113 in file "lcd.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  ch              1    wreg     unsigned char 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  ch              1    8[COMRAM] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;Total ram usage:        2 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 1
  4652 ;; This function calls:
  4653 ;;		_LCDWriteNibble
  4654 ;; This function is called by:
  4655 ;;		_main
  4656 ;;		_LCDPutStr
  4657 ;;		_keypad_fun
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text21
  4662  002946                     __ptext21:
  4663                           	callstack 0
  4664  002946                     _LCDPutChar:
  4665                           	callstack 28
  4666                           
  4667                           ;incstack = 0
  4668                           ;LCDPutChar@ch stored from wreg
  4669  002946  6E09               	movwf	LCDPutChar@ch^0,c
  4670  002948                     
  4671                           ;lcd.c: 113: void LCDPutChar(uint8_t ch);lcd.c: 114: {;lcd.c: 115:     _delay((unsigned 
      +                          long)((5)*(8e6/4000.0)));
  4672  002948  0E0D               	movlw	13
  4673  00294A  6E08               	movwf	??_LCDPutChar^0,c
  4674  00294C  0EFC               	movlw	252
  4675  00294E                     u2897:
  4676  00294E  2EE8               	decfsz	wreg,f,c
  4677  002950  D7FE               	bra	u2897
  4678  002952  2E08               	decfsz	??_LCDPutChar^0,f,c
  4679  002954  D7FC               	bra	u2897
  4680  002956                     
  4681                           ;lcd.c: 118:     LCDWriteNibble(ch,1);
  4682  002956  0E01               	movlw	1
  4683  002958  6E01               	movwf	LCDWriteNibble@rs^0,c
  4684  00295A  5009               	movf	LCDPutChar@ch^0,w,c
  4685  00295C  EC9A  F013         	call	_LCDWriteNibble
  4686  002960                     
  4687                           ;lcd.c: 121:     ch = (ch << 4);
  4688  002960  3809               	swapf	LCDPutChar@ch^0,w,c
  4689  002962  0BF0               	andlw	240
  4690  002964  6E09               	movwf	LCDPutChar@ch^0,c
  4691  002966                     
  4692                           ;lcd.c: 124:     LCDWriteNibble(ch,1);
  4693  002966  0E01               	movlw	1
  4694  002968  6E01               	movwf	LCDWriteNibble@rs^0,c
  4695  00296A  5009               	movf	LCDPutChar@ch^0,w,c
  4696  00296C  EC9A  F013         	call	_LCDWriteNibble
  4697  002970  0012               	return		;funcret
  4698  002972                     __end_of_LCDPutChar:
  4699                           	callstack 0
  4700                           
  4701 ;; *************** function _LCDGoto *****************
  4702 ;; Defined at:
  4703 ;;		line 158 in file "lcd.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  pos             1    wreg     unsigned char 
  4706 ;;  ln              1    9[COMRAM] unsigned char 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  pos             1   14[COMRAM] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4718 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;Total ram usage:        6 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 2
  4725 ;; This function calls:
  4726 ;;		_LCDPutCmd
  4727 ;; This function is called by:
  4728 ;;		_main
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text22
  4733  002662                     __ptext22:
  4734                           	callstack 0
  4735  002662                     _LCDGoto:
  4736                           	callstack 28
  4737                           
  4738                           ;incstack = 0
  4739                           ;LCDGoto@pos stored from wreg
  4740  002662  6E0F               	movwf	LCDGoto@pos^0,c
  4741  002664                     
  4742                           ;lcd.c: 158: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 159: {;lcd.c: 161:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
  4743  002664  0E02               	movlw	2
  4744  002666  600A               	cpfslt	LCDGoto@ln^0,c
  4745  002668  EF38  F013         	goto	u2271
  4746  00266C  EF3A  F013         	goto	u2270
  4747  002670                     u2271:
  4748  002670  EF68  F013         	goto	l274
  4749  002674                     u2270:
  4750  002674  0E0F               	movlw	15
  4751  002676  640F               	cpfsgt	LCDGoto@pos^0,c
  4752  002678  EF40  F013         	goto	u2281
  4753  00267C  EF42  F013         	goto	u2280
  4754  002680                     u2281:
  4755  002680  EF44  F013         	goto	l2720
  4756  002684                     u2280:
  4757  002684  EF68  F013         	goto	l274
  4758  002688                     l2720:
  4759                           
  4760                           ;lcd.c: 168:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  4761  002688  040A               	decf	LCDGoto@ln^0,w,c
  4762  00268A  B4D8               	btfsc	status,2,c
  4763  00268C  EF4A  F013         	goto	u2291
  4764  002690  EF4C  F013         	goto	u2290
  4765  002694                     u2291:
  4766  002694  EF56  F013         	goto	l2724
  4767  002698                     u2290:
  4768  002698  0E80               	movlw	128
  4769  00269A  C00F  F00B         	movff	LCDGoto@pos,??_LCDGoto
  4770  00269E  6A0C               	clrf	(??_LCDGoto+1)^0,c
  4771  0026A0  100B               	iorwf	??_LCDGoto^0,w,c
  4772  0026A2  6E0D               	movwf	_LCDGoto$511^0,c
  4773  0026A4  500C               	movf	(??_LCDGoto+1)^0,w,c
  4774  0026A6  6E0E               	movwf	(_LCDGoto$511+1)^0,c
  4775  0026A8  EF5E  F013         	goto	l2726
  4776  0026AC                     l2724:
  4777  0026AC  0EC0               	movlw	192
  4778  0026AE  C00F  F00B         	movff	LCDGoto@pos,??_LCDGoto
  4779  0026B2  6A0C               	clrf	(??_LCDGoto+1)^0,c
  4780  0026B4  100B               	iorwf	??_LCDGoto^0,w,c
  4781  0026B6  6E0D               	movwf	_LCDGoto$511^0,c
  4782  0026B8  500C               	movf	(??_LCDGoto+1)^0,w,c
  4783  0026BA  6E0E               	movwf	(_LCDGoto$511+1)^0,c
  4784  0026BC                     l2726:
  4785  0026BC  500D               	movf	_LCDGoto$511^0,w,c
  4786  0026BE  EC50  F014         	call	_LCDPutCmd
  4787  0026C2                     
  4788                           ;lcd.c: 171:     _delay((unsigned long)((5)*(8e6/4000.0)));
  4789  0026C2  0E0D               	movlw	13
  4790  0026C4  6E0B               	movwf	??_LCDGoto^0,c
  4791  0026C6  0EFC               	movlw	252
  4792  0026C8                     u2907:
  4793  0026C8  2EE8               	decfsz	wreg,f,c
  4794  0026CA  D7FE               	bra	u2907
  4795  0026CC  2E0B               	decfsz	??_LCDGoto^0,f,c
  4796  0026CE  D7FC               	bra	u2907
  4797  0026D0                     l274:
  4798  0026D0  0012               	return		;funcret
  4799  0026D2                     __end_of_LCDGoto:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function _LCDPutCmd *****************
  4803 ;; Defined at:
  4804 ;;		line 128 in file "lcd.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  ch              1    wreg     unsigned char 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  ch              1    8[COMRAM] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;Total ram usage:        2 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 1
  4825 ;; This function calls:
  4826 ;;		_LCDWriteNibble
  4827 ;; This function is called by:
  4828 ;;		_main
  4829 ;;		_LCD_Initialize
  4830 ;;		_LCDGoto
  4831 ;;		_keypad_fun
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text23
  4836  0028A0                     __ptext23:
  4837                           	callstack 0
  4838  0028A0                     _LCDPutCmd:
  4839                           	callstack 28
  4840                           
  4841                           ;incstack = 0
  4842                           ;LCDPutCmd@ch stored from wreg
  4843  0028A0  6E09               	movwf	LCDPutCmd@ch^0,c
  4844  0028A2                     
  4845                           ;lcd.c: 128: void LCDPutCmd(uint8_t ch);lcd.c: 129: {;lcd.c: 130:     _delay((unsigned l
      +                          ong)((5)*(8e6/4000.0)));
  4846  0028A2  0E0D               	movlw	13
  4847  0028A4  6E08               	movwf	??_LCDPutCmd^0,c
  4848  0028A6  0EFC               	movlw	252
  4849  0028A8                     u2917:
  4850  0028A8  2EE8               	decfsz	wreg,f,c
  4851  0028AA  D7FE               	bra	u2917
  4852  0028AC  2E08               	decfsz	??_LCDPutCmd^0,f,c
  4853  0028AE  D7FC               	bra	u2917
  4854  0028B0                     
  4855                           ;lcd.c: 133:     LCDWriteNibble(ch,0);
  4856  0028B0  0E00               	movlw	0
  4857  0028B2  6E01               	movwf	LCDWriteNibble@rs^0,c
  4858  0028B4  5009               	movf	LCDPutCmd@ch^0,w,c
  4859  0028B6  EC9A  F013         	call	_LCDWriteNibble
  4860  0028BA                     
  4861                           ;lcd.c: 136:     ch = (ch << 4);
  4862  0028BA  3809               	swapf	LCDPutCmd@ch^0,w,c
  4863  0028BC  0BF0               	andlw	240
  4864  0028BE  6E09               	movwf	LCDPutCmd@ch^0,c
  4865  0028C0                     
  4866                           ;lcd.c: 138:     _delay((unsigned long)((1)*(8e6/4000.0)));
  4867  0028C0  0E03               	movlw	3
  4868  0028C2  6E08               	movwf	??_LCDPutCmd^0,c
  4869  0028C4  0E98               	movlw	152
  4870  0028C6                     u2927:
  4871  0028C6  2EE8               	decfsz	wreg,f,c
  4872  0028C8  D7FE               	bra	u2927
  4873  0028CA  2E08               	decfsz	??_LCDPutCmd^0,f,c
  4874  0028CC  D7FC               	bra	u2927
  4875  0028CE                     
  4876                           ;lcd.c: 141:     LCDWriteNibble(ch,0);
  4877  0028CE  0E00               	movlw	0
  4878  0028D0  6E01               	movwf	LCDWriteNibble@rs^0,c
  4879  0028D2  5009               	movf	LCDPutCmd@ch^0,w,c
  4880  0028D4  EC9A  F013         	call	_LCDWriteNibble
  4881  0028D8  0012               	return		;funcret
  4882  0028DA                     __end_of_LCDPutCmd:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _LCDWriteNibble *****************
  4886 ;; Defined at:
  4887 ;;		line 76 in file "lcd.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  ch              1    wreg     unsigned char 
  4890 ;;  rs              1    0[COMRAM] unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  ch              1    6[COMRAM] unsigned char 
  4893 ;;  ch7             1    5[COMRAM] unsigned char 
  4894 ;;  ch6             1    4[COMRAM] unsigned char 
  4895 ;;  ch5             1    3[COMRAM] unsigned char 
  4896 ;;  ch_shifted      1    2[COMRAM] unsigned char 
  4897 ;;  ch4             1    1[COMRAM] unsigned char 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4907 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;Total ram usage:        7 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_LCDPutChar
  4917 ;;		_LCDPutCmd
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text24
  4922  002734                     __ptext24:
  4923                           	callstack 0
  4924  002734                     _LCDWriteNibble:
  4925                           	callstack 28
  4926                           
  4927                           ;incstack = 0
  4928                           ;LCDWriteNibble@ch stored from wreg
  4929  002734  6E07               	movwf	LCDWriteNibble@ch^0,c
  4930  002736                     
  4931                           ;lcd.c: 76: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 77: { uint8_t ch_shifted ,
      +                           ch4 , ch5 , ch6 , ch7;;lcd.c: 78:      ch4 = ch & 0x10;
  4932  002736  5007               	movf	LCDWriteNibble@ch^0,w,c
  4933  002738  0B10               	andlw	16
  4934  00273A  6E02               	movwf	LCDWriteNibble@ch4^0,c
  4935                           
  4936                           ;lcd.c: 80:      ch5 = ch & 0x20 ;
  4937  00273C  5007               	movf	LCDWriteNibble@ch^0,w,c
  4938  00273E  0B20               	andlw	32
  4939  002740  6E04               	movwf	LCDWriteNibble@ch5^0,c
  4940                           
  4941                           ;lcd.c: 81:      ch5 = ch5 >> 2 ;
  4942  002742  4004               	rrncf	LCDWriteNibble@ch5^0,w,c
  4943  002744  42E8               	rrncf	wreg,f,c
  4944  002746  0B3F               	andlw	63
  4945  002748  6E04               	movwf	LCDWriteNibble@ch5^0,c
  4946                           
  4947                           ;lcd.c: 82:      ch6 = ch & 0x40 ;
  4948  00274A  5007               	movf	LCDWriteNibble@ch^0,w,c
  4949  00274C  0B40               	andlw	64
  4950  00274E  6E05               	movwf	LCDWriteNibble@ch6^0,c
  4951                           
  4952                           ;lcd.c: 83:      ch6 = ch6 >> 4 ;
  4953  002750  3805               	swapf	LCDWriteNibble@ch6^0,w,c
  4954  002752  0B0F               	andlw	15
  4955  002754  6E05               	movwf	LCDWriteNibble@ch6^0,c
  4956                           
  4957                           ;lcd.c: 84:      ch7 = ch & 0x80 ;
  4958  002756  5007               	movf	LCDWriteNibble@ch^0,w,c
  4959  002758  0B80               	andlw	128
  4960  00275A  6E06               	movwf	LCDWriteNibble@ch7^0,c
  4961                           
  4962                           ;lcd.c: 85:      ch7 = ch7 >> 7 ;
  4963  00275C  4406               	rlncf	LCDWriteNibble@ch7^0,w,c
  4964  00275E  0B01               	andlw	1
  4965  002760  6E06               	movwf	LCDWriteNibble@ch7^0,c
  4966                           
  4967                           ;lcd.c: 87:      ch_shifted = ch4 | ch5 | ch6 | ch7 ;
  4968  002762  5002               	movf	LCDWriteNibble@ch4^0,w,c
  4969  002764  1004               	iorwf	LCDWriteNibble@ch5^0,w,c
  4970  002766  1005               	iorwf	LCDWriteNibble@ch6^0,w,c
  4971  002768  1006               	iorwf	LCDWriteNibble@ch7^0,w,c
  4972  00276A  6E03               	movwf	LCDWriteNibble@ch_shifted^0,c
  4973                           
  4974                           ;lcd.c: 92:     ch_shifted = (ch_shifted & 0b00011101);
  4975  00276C  5003               	movf	LCDWriteNibble@ch_shifted^0,w,c
  4976  00276E  0B1D               	andlw	29
  4977  002770  6E03               	movwf	LCDWriteNibble@ch_shifted^0,c
  4978                           
  4979                           ;lcd.c: 95:     PORTD = (PORTD & 0b11100010);
  4980  002772  5083               	movf	131,w,c	;volatile
  4981  002774  0BE2               	andlw	226
  4982  002776  6E83               	movwf	131,c	;volatile
  4983                           
  4984                           ;lcd.c: 98:     PORTD = (PORTD | ch_shifted );
  4985  002778  5083               	movf	131,w,c	;volatile
  4986  00277A  1003               	iorwf	LCDWriteNibble@ch_shifted^0,w,c
  4987  00277C  6E83               	movwf	131,c	;volatile
  4988  00277E                     
  4989                           ;lcd.c: 101:     PORTDbits.RD7 = rs;
  4990  00277E  B001               	btfsc	LCDWriteNibble@rs^0,0,c
  4991  002780  D002               	bra	u1815
  4992  002782  9E83               	bcf	131,7,c	;volatile
  4993  002784  D001               	bra	u1816
  4994  002786                     u1815:
  4995  002786  8E83               	bsf	131,7,c	;volatile
  4996  002788                     u1816:
  4997  002788                     
  4998                           ;lcd.c: 104:     PORTDbits.RD6 = 0;
  4999  002788  9C83               	bcf	131,6,c	;volatile
  5000  00278A                     
  5001                           ;lcd.c: 107:     PORTDbits.RD5 = 1;
  5002  00278A  8A83               	bsf	131,5,c	;volatile
  5003  00278C                     
  5004                           ;lcd.c: 110:     PORTDbits.RD5 = 0;
  5005  00278C  9A83               	bcf	131,5,c	;volatile
  5006  00278E  0012               	return		;funcret
  5007  002790                     __end_of_LCDWriteNibble:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function _KeyPad_Init *****************
  5011 ;; Defined at:
  5012 ;;		line 3 in file "KeyPad_4_4.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;		None
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      void 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;Total ram usage:        0 bytes
  5031 ;; Hardware stack levels used: 1
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_main
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text25
  5040  002998                     __ptext25:
  5041                           	callstack 0
  5042  002998                     _KeyPad_Init:
  5043                           	callstack 30
  5044  002998                     
  5045                           ;KeyPad_4_4.c: 4:     TRISB = 0xF0;
  5046  002998  0EF0               	movlw	240
  5047  00299A  6E93               	movwf	147,c	;volatile
  5048  00299C                     
  5049                           ;KeyPad_4_4.c: 5:     LATB = 0xFF;
  5050  00299C  688A               	setf	138,c	;volatile
  5051  00299E  0012               	return		;funcret
  5052  0029A0                     __end_of_KeyPad_Init:
  5053                           	callstack 0
  5054                           
  5055 ;; *************** function _Get_Key *****************
  5056 ;; Defined at:
  5057 ;;		line 8 in file "KeyPad_4_4.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  c               1    4[COMRAM] unsigned char 
  5062 ;;  r               1    3[COMRAM] unsigned char 
  5063 ;;  Key             1    2[COMRAM] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      unsigned char 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, prodl, prodh
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;Total ram usage:        5 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_main
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text26
  5087  0022BC                     __ptext26:
  5088                           	callstack 0
  5089  0022BC                     _Get_Key:
  5090                           	callstack 30
  5091  0022BC                     
  5092                           ;KeyPad_4_4.c: 10:       LATB = 0xFF;
  5093  0022BC  688A               	setf	138,c	;volatile
  5094                           
  5095                           ;KeyPad_4_4.c: 11:         char Key = -1;
  5096  0022BE  6803               	setf	Get_Key@Key^0,c
  5097  0022C0                     
  5098                           ;KeyPad_4_4.c: 12:     for (char r = 0; r < 4; r++) {
  5099  0022C0  0E00               	movlw	0
  5100  0022C2  6E04               	movwf	Get_Key@r^0,c
  5101  0022C4                     l2746:
  5102                           
  5103                           ;KeyPad_4_4.c: 13:         LATB &= ~(1 << r);
  5104  0022C4  C004  F001         	movff	Get_Key@r,??_Get_Key
  5105  0022C8  0E01               	movlw	1
  5106  0022CA  6E02               	movwf	(??_Get_Key+1)^0,c
  5107  0022CC  2A01               	incf	??_Get_Key^0,f,c
  5108  0022CE  EF6B  F011         	goto	u2334
  5109  0022D2                     u2335:
  5110  0022D2  90D8               	bcf	status,0,c
  5111  0022D4  3602               	rlcf	(??_Get_Key+1)^0,f,c
  5112  0022D6                     u2334:
  5113  0022D6  2E01               	decfsz	??_Get_Key^0,f,c
  5114  0022D8  EF69  F011         	goto	u2335
  5115  0022DC  5002               	movf	(??_Get_Key+1)^0,w,c
  5116  0022DE  0AFF               	xorlw	255
  5117  0022E0  168A               	andwf	138,f,c	;volatile
  5118  0022E2                     
  5119                           ;KeyPad_4_4.c: 14:         for (char c = 0; c < 4; c++) {
  5120  0022E2  0E00               	movlw	0
  5121  0022E4  6E05               	movwf	Get_Key@c^0,c
  5122  0022E6                     l2754:
  5123                           
  5124                           ;KeyPad_4_4.c: 15:             if (!(PORTB & (1 << (c + 4)))) {
  5125  0022E6  C005  F001         	movff	Get_Key@c,??_Get_Key
  5126  0022EA  0E04               	movlw	4
  5127  0022EC  2601               	addwf	??_Get_Key^0,f,c
  5128  0022EE  0E01               	movlw	1
  5129  0022F0  6E02               	movwf	(??_Get_Key+1)^0,c
  5130  0022F2  2A01               	incf	??_Get_Key^0,f,c
  5131  0022F4  EF7E  F011         	goto	u2344
  5132  0022F8                     u2345:
  5133  0022F8  90D8               	bcf	status,0,c
  5134  0022FA  3602               	rlcf	(??_Get_Key+1)^0,f,c
  5135  0022FC                     u2344:
  5136  0022FC  2E01               	decfsz	??_Get_Key^0,f,c
  5137  0022FE  EF7C  F011         	goto	u2345
  5138  002302  5002               	movf	(??_Get_Key+1)^0,w,c
  5139  002304  1481               	andwf	129,w,c	;volatile
  5140  002306  0900               	iorlw	0
  5141  002308  A4D8               	btfss	status,2,c
  5142  00230A  EF89  F011         	goto	u2351
  5143  00230E  EF8B  F011         	goto	u2350
  5144  002312                     u2351:
  5145  002312  EFA8  F011         	goto	l2760
  5146  002316                     u2350:
  5147  002316                     
  5148                           ;KeyPad_4_4.c: 16:                 Key = r * 4 + c;
  5149  002316  5004               	movf	Get_Key@r^0,w,c
  5150  002318  0D04               	mullw	4
  5151  00231A  50F3               	movf	243,w,c
  5152  00231C  2405               	addwf	Get_Key@c^0,w,c
  5153  00231E  6E03               	movwf	Get_Key@Key^0,c
  5154  002320                     l2758:
  5155  002320  C005  F001         	movff	Get_Key@c,??_Get_Key
  5156  002324  0E04               	movlw	4
  5157  002326  2601               	addwf	??_Get_Key^0,f,c
  5158  002328  0E01               	movlw	1
  5159  00232A  6E02               	movwf	(??_Get_Key+1)^0,c
  5160  00232C  2A01               	incf	??_Get_Key^0,f,c
  5161  00232E  EF9B  F011         	goto	u2364
  5162  002332                     u2365:
  5163  002332  90D8               	bcf	status,0,c
  5164  002334  3602               	rlcf	(??_Get_Key+1)^0,f,c
  5165  002336                     u2364:
  5166  002336  2E01               	decfsz	??_Get_Key^0,f,c
  5167  002338  EF99  F011         	goto	u2365
  5168  00233C  5002               	movf	(??_Get_Key+1)^0,w,c
  5169  00233E  1481               	andwf	129,w,c	;volatile
  5170  002340  0900               	iorlw	0
  5171  002342  B4D8               	btfsc	status,2,c
  5172  002344  EFA6  F011         	goto	u2371
  5173  002348  EFA8  F011         	goto	u2370
  5174  00234C                     u2371:
  5175  00234C  EF90  F011         	goto	l2758
  5176  002350                     u2370:
  5177  002350                     l2760:
  5178                           
  5179                           ;KeyPad_4_4.c: 19:         }
  5180  002350  2A05               	incf	Get_Key@c^0,f,c
  5181  002352  0E03               	movlw	3
  5182  002354  6405               	cpfsgt	Get_Key@c^0,c
  5183  002356  EFAF  F011         	goto	u2381
  5184  00235A  EFB1  F011         	goto	u2380
  5185  00235E                     u2381:
  5186  00235E  EF73  F011         	goto	l2754
  5187  002362                     u2380:
  5188  002362                     
  5189                           ;KeyPad_4_4.c: 20:         _delay((unsigned long)((200)*(8e6/4000.0)));
  5190  002362  0E03               	movlw	3
  5191  002364  6E02               	movwf	(??_Get_Key+1)^0,c
  5192  002366  0E08               	movlw	8
  5193  002368  6E01               	movwf	??_Get_Key^0,c
  5194  00236A  0E77               	movlw	119
  5195  00236C                     u2937:
  5196  00236C  2EE8               	decfsz	wreg,f,c
  5197  00236E  D7FE               	bra	u2937
  5198  002370  2E01               	decfsz	??_Get_Key^0,f,c
  5199  002372  D7FC               	bra	u2937
  5200  002374  2E02               	decfsz	(??_Get_Key+1)^0,f,c
  5201  002376  D7FA               	bra	u2937
  5202  002378  F000               	nop	
  5203  00237A                     
  5204                           ;KeyPad_4_4.c: 21:         LATB |= (1 << r);
  5205  00237A  C004  F001         	movff	Get_Key@r,??_Get_Key
  5206  00237E  0E01               	movlw	1
  5207  002380  6E02               	movwf	(??_Get_Key+1)^0,c
  5208  002382  2A01               	incf	??_Get_Key^0,f,c
  5209  002384  EFC6  F011         	goto	u2394
  5210  002388                     u2395:
  5211  002388  90D8               	bcf	status,0,c
  5212  00238A  3602               	rlcf	(??_Get_Key+1)^0,f,c
  5213  00238C                     u2394:
  5214  00238C  2E01               	decfsz	??_Get_Key^0,f,c
  5215  00238E  EFC4  F011         	goto	u2395
  5216  002392  5002               	movf	(??_Get_Key+1)^0,w,c
  5217  002394  128A               	iorwf	138,f,c	;volatile
  5218                           
  5219                           ;KeyPad_4_4.c: 22:     }
  5220  002396  2A04               	incf	Get_Key@r^0,f,c
  5221  002398  0E03               	movlw	3
  5222  00239A  6404               	cpfsgt	Get_Key@r^0,c
  5223  00239C  EFD2  F011         	goto	u2401
  5224  0023A0  EFD4  F011         	goto	u2400
  5225  0023A4                     u2401:
  5226  0023A4  EF62  F011         	goto	l2746
  5227  0023A8                     u2400:
  5228  0023A8                     
  5229                           ;KeyPad_4_4.c: 24:            return Key;
  5230  0023A8  5003               	movf	Get_Key@Key^0,w,c
  5231  0023AA  0012               	return		;funcret
  5232  0023AC                     __end_of_Get_Key:
  5233                           	callstack 0
  5234                           
  5235                           	psect	rparam
  5236  0000                     
  5237                           	psect	idloc
  5238                           
  5239                           ;Config register IDLOC0 @ 0x200000
  5240                           ;	unspecified, using default values
  5241  200000                     	org	2097152
  5242  200000  FF                 	db	255
  5243                           
  5244                           ;Config register IDLOC1 @ 0x200001
  5245                           ;	unspecified, using default values
  5246  200001                     	org	2097153
  5247  200001  FF                 	db	255
  5248                           
  5249                           ;Config register IDLOC2 @ 0x200002
  5250                           ;	unspecified, using default values
  5251  200002                     	org	2097154
  5252  200002  FF                 	db	255
  5253                           
  5254                           ;Config register IDLOC3 @ 0x200003
  5255                           ;	unspecified, using default values
  5256  200003                     	org	2097155
  5257  200003  FF                 	db	255
  5258                           
  5259                           ;Config register IDLOC4 @ 0x200004
  5260                           ;	unspecified, using default values
  5261  200004                     	org	2097156
  5262  200004  FF                 	db	255
  5263                           
  5264                           ;Config register IDLOC5 @ 0x200005
  5265                           ;	unspecified, using default values
  5266  200005                     	org	2097157
  5267  200005  FF                 	db	255
  5268                           
  5269                           ;Config register IDLOC6 @ 0x200006
  5270                           ;	unspecified, using default values
  5271  200006                     	org	2097158
  5272  200006  FF                 	db	255
  5273                           
  5274                           ;Config register IDLOC7 @ 0x200007
  5275                           ;	unspecified, using default values
  5276  200007                     	org	2097159
  5277  200007  FF                 	db	255
  5278                           
  5279                           	psect	config
  5280                           
  5281                           ; Padding undefined space
  5282  300000                     	org	3145728
  5283  300000  FF                 	db	255
  5284                           
  5285                           ;Config register CONFIG1H @ 0x300001
  5286                           ;	Oscillator Selection bits
  5287                           ;	FOSC = HS, HS oscillator
  5288                           ;	Fail-Safe Clock Monitor Enable bit
  5289                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5290                           ;	Internal/External Oscillator Switchover bit
  5291                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5292  300001                     	org	3145729
  5293  300001  02                 	db	2
  5294                           
  5295                           ;Config register CONFIG2L @ 0x300002
  5296                           ;	Power-up Timer Enable bit
  5297                           ;	PWRT = OFF, PWRT disabled
  5298                           ;	Brown-out Reset Enable bits
  5299                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5300                           ;	Brown Out Reset Voltage bits
  5301                           ;	BORV = 18, VBOR set to 1.8 V nominal
  5302  300002                     	org	3145730
  5303  300002  1F                 	db	31
  5304                           
  5305                           ;Config register CONFIG2H @ 0x300003
  5306                           ;	Watchdog Timer Enable bit
  5307                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5308                           ;	Watchdog Timer Postscale Select bits
  5309                           ;	WDTPS = 32768, 1:32768
  5310  300003                     	org	3145731
  5311  300003  1E                 	db	30
  5312                           
  5313                           ; Padding undefined space
  5314  300004                     	org	3145732
  5315  300004  FF                 	db	255
  5316                           
  5317                           ;Config register CONFIG3H @ 0x300005
  5318                           ;	CCP2 MUX bit
  5319                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5320                           ;	PORTB A/D Enable bit
  5321                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5322                           ;	Low-Power Timer1 Oscillator Enable bit
  5323                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5324                           ;	HFINTOSC Fast Start-up
  5325                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  5326                           ;	MCLR Pin Enable bit
  5327                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pi  5328  300005                     	org	3145733
  5329  300005  89                 	db	137
  5330                           
  5331                           ;Config register CONFIG4L @ 0x300006
  5332                           ;	Stack Full/Underflow Reset Enable bit
  5333                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5334                           ;	Single-Supply ICSP Enable bit
  5335                           ;	LVP = OFF, Single-Supply ICSP disabled
  5336                           ;	Extended Instruction Set Enable bit
  5337                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5338                           ;	Background Debugger Enable bit
  5339                           ;	DEBUG = 0x1, unprogrammed default
  5340  300006                     	org	3145734
  5341  300006  81                 	db	129
  5342                           
  5343                           ; Padding undefined space
  5344  300007                     	org	3145735
  5345  300007  FF                 	db	255
  5346                           
  5347                           ;Config register CONFIG5L @ 0x300008
  5348                           ;	Code Protection Block 0
  5349                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5350                           ;	Code Protection Block 1
  5351                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5352                           ;	Code Protection Block 2
  5353                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5354                           ;	Code Protection Block 3
  5355                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5356  300008                     	org	3145736
  5357  300008  0F                 	db	15
  5358                           
  5359                           ;Config register CONFIG5H @ 0x300009
  5360                           ;	Boot Block Code Protection bit
  5361                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5362                           ;	Data EEPROM Code Protection bit
  5363                           ;	CPD = OFF, Data EEPROM not code-protected
  5364  300009                     	org	3145737
  5365  300009  C0                 	db	192
  5366                           
  5367                           ;Config register CONFIG6L @ 0x30000A
  5368                           ;	Write Protection Block 0
  5369                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5370                           ;	Write Protection Block 1
  5371                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5372                           ;	Write Protection Block 2
  5373                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5374                           ;	Write Protection Block 3
  5375                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5376  30000A                     	org	3145738
  5377  30000A  0F                 	db	15
  5378                           
  5379                           ;Config register CONFIG6H @ 0x30000B
  5380                           ;	Configuration Register Write Protection bit
  5381                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5382                           ;	Boot Block Write Protection bit
  5383                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5384                           ;	Data EEPROM Write Protection bit
  5385                           ;	WRTD = OFF, Data EEPROM not write-protected
  5386  30000B                     	org	3145739
  5387  30000B  E0                 	db	224
  5388                           
  5389                           ;Config register CONFIG7L @ 0x30000C
  5390                           ;	Table Read Protection Block 0
  5391                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5392                           ;	Table Read Protection Block 1
  5393                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5394                           ;	Table Read Protection Block 2
  5395                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5396                           ;	Table Read Protection Block 3
  5397                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5398  30000C                     	org	3145740
  5399  30000C  0F                 	db	15
  5400                           
  5401                           ;Config register CONFIG7H @ 0x30000D
  5402                           ;	Boot Block Table Read Protection bit
  5403                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5404  30000D                     	org	3145741
  5405  30000D  40                 	db	64
  5406                           tosu	equ	0xFFF
  5407                           tosh	equ	0xFFE
  5408                           tosl	equ	0xFFD
  5409                           stkptr	equ	0xFFC
  5410                           pclatu	equ	0xFFB
  5411                           pclath	equ	0xFFA
  5412                           pcl	equ	0xFF9
  5413                           tblptru	equ	0xFF8
  5414                           tblptrh	equ	0xFF7
  5415                           tblptrl	equ	0xFF6
  5416                           tablat	equ	0xFF5
  5417                           prodh	equ	0xFF4
  5418                           prodl	equ	0xFF3
  5419                           indf0	equ	0xFEF
  5420                           postinc0	equ	0xFEE
  5421                           postdec0	equ	0xFED
  5422                           preinc0	equ	0xFEC
  5423                           plusw0	equ	0xFEB
  5424                           fsr0h	equ	0xFEA
  5425                           fsr0l	equ	0xFE9
  5426                           wreg	equ	0xFE8
  5427                           indf1	equ	0xFE7
  5428                           postinc1	equ	0xFE6
  5429                           postdec1	equ	0xFE5
  5430                           preinc1	equ	0xFE4
  5431                           plusw1	equ	0xFE3
  5432                           fsr1h	equ	0xFE2
  5433                           fsr1l	equ	0xFE1
  5434                           bsr	equ	0xFE0
  5435                           indf2	equ	0xFDF
  5436                           postinc2	equ	0xFDE
  5437                           postdec2	equ	0xFDD
  5438                           preinc2	equ	0xFDC
  5439                           plusw2	equ	0xFDB
  5440                           fsr2h	equ	0xFDA
  5441                           fsr2l	equ	0xFD9
  5442                           status	equ	0xFD8

Data Sizes:
    Strings     108
    Constant    0
    Data        4
    BSS         94
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     19     117
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> txt_new(BANK0[16]), txt(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> txt_new(BANK0[16]), txt(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S975_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> txt_new(BANK0[16]), txt(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> txt_new(BANK0[16]), txt(BANK0[16]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[14]), 
		 -> STR_9(CODE[14]), STR_8(CODE[14]), STR_7(CODE[16]), STR_6(CODE[10]), 
		 -> STR_5(CODE[7]), txt_new(BANK0[16]), txt(BANK0[16]), STR_2(CODE[13]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _adc_init->___fltol
    ___xxtofl->___wmul
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   15753
                                             93 COMRAM     2     2      0
                                              8 BANK0     11    11      0
                            _Get_Key
                        _KeyPad_Init
                            _LCDGoto
                         _LCDPutChar
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
                             ___wmul
                           _adc_init
                            _key_num
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6608
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _key_num                                              3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             4     2      2    2680
                                             55 COMRAM     4     2      2
                            ___fldiv
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     555
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             45 COMRAM    10     6      4
                            ___fldiv (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             20 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     688
                                              9 COMRAM     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            5     3      2    1766
                                              9 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           2     2      0     688
                                              7 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1    1354
                                              9 COMRAM     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     688
                                              7 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       7     6      1     621
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _KeyPad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Key                                              5     5      0     248
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Get_Key
   _KeyPad_Init
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutChar
     _LCDWriteNibble
   _LCDPutCmd
   _LCDPutStr
     _LCDPutChar
   _LCD_Initialize
     _LCDPutCmd
   ___wmul
   _adc_init
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol
       ___fldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
   _key_num
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      75       5       73.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D4      32        0.0%
DATA                 0      0      D4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 25 02:32:45 2021

            ___fldiv@aexp 002D              ___fldiv@bexp 002C            _LCD_Initialize 2866  
            ___fldiv@sign 0025               ?_LCDPutChar 0001                        l86 1756  
                      _RD 007D30                        _WR 007D31       ___wmul@multiplicand 0003  
                     l112 2560                       l115 25E4                       l313 299E  
                     l324 23AA                       l253 289E                       l262 28D8  
                     l256 278E                       l329 22BA                       l274 26D0  
                     l259 2970                       l268 2660                       l348 2996  
                     l462 1F4E                       l475 20B2                       l645 21B8  
                     l930 1406                       l932 1266                       l941 12AC  
                     l943 1324                       l935 122A                       l944 1312  
                     _GIE 007F97                       _PSA 007EAB             ??_KeyPad_Init 0001  
                     _abs 2826                       _pad 2476                       _sum 0074  
                     _txt 00AE                       wreg 000FE8           __end_of_LCDGoto 26D2  
            ___fltol@exp1 0037                      l1010 1D02                      l1003 1C6A  
                    l1006 1DC6                      l1102 285C                      l1017 1D5E  
                    l1105 2864                      l1026 27E0                      ?_abs 0013  
                    l1117 2474                      l1125 2824                      l1053 24BC  
                    l1134 2944                      l1128 29A4                      l2200 27EE  
                    l1056 24FE                      l1064 181E                      l3000 1632  
                    l2202 2800                      l2210 2920                      l1058 253A  
                    l1066 1826                      l3010 1676                      l3002 163E  
                    l1091 1C12                      l2220 1DDA                      l2204 2804  
                    l2212 2938                      l2300 249A                      l1084 1A5E  
                    l3020 16DA                      l3012 1692                      l3004 1644  
                    l2230 1E30                      l2222 1DFA                      l2206 2910  
                    l2310 24E0                      l2302 24A8                      l3030 1736  
                    l3022 16EA                      l3014 169E                      l3006 1660  
                    l2240 1E84                      l2232 1E3C                      l2224 1DFE  
                    l2216 1DC8                      l2320 2840                      l2208 291C  
                    l2312 250E                      l2304 24B4                      l2400 1AA4  
                    l3032 1746                      l3024 16F6                      l3016 16B6  
                    l3008 166C                      l1097 272A                      l2250 1EF8  
                    l2242 1E96                      l2234 1E5A                      l2226 1E0C  
                    l2218 1DCC                      l2314 2522                      l2306 24C8  
                    l2330 17F6                      l2322 177E                      l2402 1AA8  
                    l1098 2732                      l3018 16D6                      l3026 1714  
                    l2500 1150                      l3220 2234                      l2244 1EC4  
                    l2236 1E62                      l2252 1EFE                      l2228 1E2C  
                    l2260 1F50                      l2308 24DC                      l2340 184E  
                    l2332 17F8                      l2324 179E                      l2412 1B70  
                    l2404 1ACC                      l3036 175A                      l3028 1732  
                    l2502 1160                      l2510 1180                      l2254 1F0E  
                    l2246 1EE4                      l2238 1E76                      l2270 1F94  
                    l2262 1F54                      l2318 2826                      l2190 23DA  
                    l2350 18EC                      l2342 1854                      l2334 1812  
                    l2326 17C6                      l2430 1C00                      l2414 1B94  
                    l2422 1BC2                      l2406 1AF0                      l3038 176A  
                    l2440 28BA                      l2520 11BE                      l2512 1190  
                    l2504 1168                      l2600 20CA                      l2256 1F2E  
                    l2248 1EE6                      l2280 1FFC                      l2272 1FB4  
                    l2264 1F62                      l2192 23F8                      l2184 23AC  
                    l2360 1994                      l2352 18F2                      l2344 185C  
                    l2336 182E                      l2328 17E6                      l2424 1BD0  
                    l2416 1BA2                      l2408 1B38                      l2442 28C0  
                    l2450 2960                      l2530 1206                      l2522 11CE  
                    l2514 1190                      l2506 116C                      l2610 211A  
                    l2290 2072                      l2282 202A                      l2274 1FD2  
                    l2266 1F82                      l2194 242E                      l2186 23BE  
                    l2370 19FA                      l2362 19AE                      l2354 18F8  
                    l2346 1864                      l2338 1840                      l2418 1BB6  
                    l2444 28CE                      l2436 28A2                      l2452 2966  
                    l2700 2870                      l2540 1254                      l2532 121A  
                    l2524 11DE                      l2460 106E                      l2620 2144  
                    l2612 211E                      l2604 20DE                      l2292 2092  
                    l2284 204A                      l2276 1FDA                      l2268 1F86  
                    l2188 23D0                      l2372 1A00                      l2380 1A36  
                    l2364 19C8                      l2348 186A                      l2356 195C  
                    l2428 1BDC                      l2390 278A                      l2438 28B0  
                    l2446 2948                      l2710 2898                      l2702 2880  
                    l2550 129C                      l2542 1264                      l2534 1228  
                    l2526 11EE                      l2518 11A4                      l2470 10AA  
                    l2462 107A                      l2630 216C                      l2622 214E  
                    l2614 212C                      l2606 2108                      l2454 2972  
                    l2286 205C                      l2278 1FEE                      l2198 27E2  
                    l2374 1A12                      l2358 1976                      l2366 19D8  
                    l2712 2998                      l2392 278C                      l2384 2736  
                    l2720 2688                      l2448 2956                      l2704 2886  
                    l2560 12DC                      l2552 12AA                      l2544 1276  
                    l2536 1234                      l2528 11F6                      l2480 10DA  
                    l2472 10BA                      l2464 1088                      l2632 2178  
                    l2624 2158                      l2608 210A                      l2456 298E  
                    l2800 21D8                      l2288 2062                      l2296 2476  
                    l2376 1A1E                      l2368 19EA                      l2714 299C  
                    l2386 277E                      l2722 2698                      l2730 25E6  
                    l2706 288C                      l2570 134E                      l2562 130A  
                    l2546 128C                      l2554 12BC                      l2538 1252  
                    l2490 1110                      l2482 10E0                      l2474 10BC  
                    l2466 108A                      l2634 2188                      l2650 1C90  
                    l2642 1C16                      l2298 2486                      l2378 1A26  
                    l2394 1A60                      l2740 22C0                      l2388 2788  
                    l2724 26AC                      l2716 2664                      l2732 25EE  
                    l2708 2892                      l2580 13C6                      l2572 1378  
                    l2556 12CA                      l2548 1292                      l2492 1120  
                    l2484 10EE                      l2468 109A                      l2476 10C4  
                    l2636 2198                      l2660 1CEA                      l2644 1C26  
                    l2812 21E4                      l2396 1A84                      l2900 27A2  
                    l2726 26BC                      l2718 2674                      l2734 2620  
                    l2590 13FC                      l2582 13E2                      l2566 1334  
                    l2574 137C                      l2558 12CE                      l2494 1122  
                    l2486 10F0                      l2478 10D4                      l2638 21A8  
                    l2670 1D4E                      l2662 1CEC                      l2654 1CA4  
                    l2646 1C34                      l2830 21F6                      l2806 21DE  
                    l2398 1A92                      l2902 27AA                      l2910 1408  
                    l2760 2350                      l2728 26C2                      l2736 2622  
                    l2584 13E6                      l2576 1396                      l2568 1340  
                    l2488 1100                      l2496 112A                      l2680 1DA6  
                    l2672 1D6C                      l2664 1CF8                      l2656 1CAC  
                    l2648 1C7A                      l2824 21F0                      l2904 27B2  
                    l2920 1418                      l2912 140C                      l2770 23A8  
                    l2762 2352                      l2754 22E6                      l2746 22C4  
                    l2738 22BC                      l2586 13F4                      l2578 13AC  
                    l2498 113A                      l2682 1DB4                      l2674 1D6E  
                    l2666 1D34                      l2658 1CB8                      l2842 2202  
                    l2818 21EA                      l2690 26DA                      l2906 27CE  
                    l2922 141C                      l2914 140E                      l2764 2362  
                    l2756 2316                      l2748 22E2                      l2588 13FA  
                    l2684 1DB6                      l2676 1D72                      l2668 1D40  
                    l2860 2214                      l2836 21FC                      l2692 26E8  
                    l2940 145A                      l2932 142A                      l2924 141E  
                    l2916 1410                      l2766 237A                      l2758 2320  
                    l2598 20B4                      l2678 1D96                      l2854 220E  
                    l2782 21C6                      l2774 21BC                      l2694 270E  
                    l2942 1464                      l2934 143A                      l2926 1420  
                    l2918 1414                      ?_pad 0011                      l2768 2398  
                    l2696 2866                      l2880 253C                      l2848 2208  
                    l2776 21C0                      l2688 26D2                      l2960 14BE  
                    l2944 1470                      l2936 143E                      l2698 286E  
                    l2890 256E                      l2882 2542                      l2866 221A  
                    l2794 21D2                      l2874 2220                      l2962 14C4  
                    l2946 148A                      l2938 145A                      l2892 25D4  
                    l2884 254A                      l2788 21CC                      l2980 1568  
                    l2964 14CA                      l2956 149A                      l2948 1490  
                    l2894 25DC                      l2886 254C                      l2990 15DE  
                    l2982 156E                      l2974 1506                      l2966 14E6  
                    l2958 14AA                      l2888 255E                      l2992 15EA  
                    l2984 158A                      l2976 1518                      l2968 14FC  
                    l2898 2790                      l2994 1604                      l2986 15B2  
                    l2978 154C                      l2996 160E                      l2988 15CE  
                    l2998 1628                      _ADFM 007E07                      _ADON 007E10  
                    _CFGS 007D36                      _ANS0 007BF0                      STR_1 1031  
                    STR_2 104F                      STR_3 1011                      STR_4 1001  
                    STR_5 1066                      STR_6 105C                      STR_7 1021  
                    STR_8 1041                      _T0CS 007EAD                      u2000 12CA  
                    u2001 12C6                      u2010 12DC                      u2011 12D8  
                    u2020 130A                      u2100 20FE                      u2021 1306  
                    u2030 1320                      u2110 212C                      u2031 131C  
                    u2111 2128                      u2040 1334                      u2120 2140  
                    u2200 1D30                      u2041 1330                      u2121 213C  
                    u2105 20F4                      u2201 1D2C                      u2050 134E  
                    u2130 2168                      u2210 1D4E                      u2051 134A  
                    u2131 2164                      u2211 1D4A                      u2300 261C  
                    u2060 1396                      u2140 2188                      u2220 1D5E  
                    u1420 23BE                      u2061 1392                      u2141 2184  
                    u2221 1D5A                      u1501 1E36                      u1421 23BA  
                    u2310 2650                      u2070 13C6                      u2150 2198  
                    u2230 1D6C                      u1510 1E5A                      u1430 23D0  
                    _LATB 000F8A                      u2071 13C2                      u2151 2194  
                    u2231 1D68                      u1511 1E56                      u1431 23CC  
                    u2400 23A8                      u2320 2660                      u2080 13F4  
                    u2240 1DA6                      u2160 1C26                      u1520 1E84  
                    u1600 2072                      u1440 23F8                      u2401 23A4  
                    u2321 265C                      u2081 13F0                      u2241 1DA2  
                    u2161 1C22                      u1521 1E80                      u1601 206E  
                    u1441 23F4                      u2090 20CA                      u2250 1DB4  
                    u2170 1C34                      u2410 256E                      u1530 1EC4  
                    u1450 242E                      u1610 2486                      u2307 2612  
                    u2091 20C6                      u2251 1DB0                      u2171 1C30  
                    u2411 256A                      u1531 1EC0                      u1451 242A  
                    u1611 2482                      u2180 1C90                      u1540 1F0E  
                    u1460 2824                      u1620 24A8                      u1700 1812  
                    u2260 272A                      u2500 1732                      u2420 145A  
                    u2317 2646                      u2181 1C8C                      u1541 1F0A  
                    u1461 2820                      u1621 24A4                      u1701 180E  
                    u2261 2726                      u2501 172E                      u2421 1456  
                    u2350 2316                      u2334 22D6                      u2270 2674  
                    u2190 1CE6                      u1550 1F62                      u1470 2938  
                    u1630 24FE                      u1710 1840                      u2430 14AA  
                    u2351 2312                      u2335 22D2                      u2271 2670  
                    u2191 1CE2                      u1551 1F5E                      u1471 2934  
                    u1631 24FA                      u1711 183C                      u2431 14A6  
                    u2344 22FC                      u2280 2684                      u1480 1DDA  
                    u1560 1F94                      u1640 250E                      u1800 1A12  
                    u1720 184E                      u2440 14E6                      u2345 22F8  
                    u2281 2680                      u1481 1DD6                      u1561 1F90  
                    u1641 250A                      u1801 1A0E                      u1721 184A  
                    u2441 14E2                      u2370 2350                      u2290 2698  
                    u1490 1E0C                      u1570 1FD2                      u1650 2840  
                    u1730 1976                      u2450 1518                      u2371 234C  
                    u2291 2694                      u1491 1E08                      u1571 1FCE  
                    u1651 283C                      u1731 1972                      u2451 1514  
                    u2380 2362                      u2364 2336                      u1900 1100  
                    u1580 1FFC                      u1740 1994                      u1660 17AE  
                    u1820 1A84                      u2460 158A                      u2381 235E  
                    u2365 2332                      u1901 10FC                      u1581 1FF8  
                    u1741 1990                      u1661 17A8                      u1821 1A80  
                    u2461 1586                      u1910 1110                      u1590 202A  
                    u1750 19AE                      u1670 17B0                      u1830 1ACC  
                    u2470 15B2                      u1815 2786                      u1911 110C  
                    u1591 2026                      u1751 19AA                      u1831 1AC8  
                    u2471 15AE                      u1816 2788                      u1920 1150  
                    u1760 19C8                      u1680 17C6                      u1840 1AF0  
                    u2480 15CE                      _IPEN 007E87                      u1921 114C  
                    u1761 19C4                      u1681 17C2                      u1841 1AEC  
                    u2481 15CA                      u2394 238C                      u1930 1190  
                    u1770 19D8                      u1690 17F6                      u1850 1B94  
                    u2490 16D6                      u2395 2388                      u1931 118C  
                    u1771 19D4                      u1691 17F2                      u1851 1B90  
                    u2491 16D2                      u1940 1206                      u1860 1088  
                    u1780 19EA                      u1941 1202                      u1861 1084  
                    u1781 19E6                      u1950 1228                      u1870 109A  
                    u1790 19FA                      u1951 1224                      u1871 1096  
                    u1791 19F6                      u1960 1252                      u1880 10AA  
                    u1961 124E                      u1881 10A6                      u1970 1276  
                    u1890 10EE                      u2907 26C8                      u1971 1272  
                    u1891 10EA                      _PEIE 007F96                      u1980 128C  
                    u2917 28A8                      u1981 1288                      u2837 147A  
                    u1990 12AA                      u2927 28C6                      u1991 12A6  
                    u2847 14F0                      u2937 236C                      u2857 15F4  
                    u2867 16A8                      u2877 1700                      u2887 2876  
                    u2897 294E                      _TMR0 000FD6                      _WREN 007D32  
                    abs@a 0013                      _dbuf 007E                      _main 1408  
                    _dtoa 177E                      _prec 0064                      _temp 0076  
                    _tens 007C                      _nout 0060                      pad@i 0018  
                    pad@p 0015                      fsr0h 000FEA                      fsr1h 000FE2  
                    indf0 000FEF                      fsr2h 000FDA                      fsr0l 000FE9  
                    indf2 000FDF                      fsr1l 000FE1                      pad@w 001A  
                    fsr2l 000FD9        __size_of_LCDPutCmd 003A                      prodh 000FF4  
                    prodl 000FF3                      start 0000        __size_of_LCDPutStr 007C  
         ___fldiv@new_exp 0026           __end_of_Get_Key 23AC    __end_of_LCD_Initialize 28A0  
            ___param_bank 000000                     ??_abs 0015                     ??_pad 0017  
             LCDPutCmd@ch 0009             ___fltol@sign1 0036           __end_of___aodiv 1F50  
                   ?_main 0001                     ?_dtoa 001C           __end_of___aomod 20B4  
         __end_of___fldiv 1408                     _ADRES 000FC3                     _EEADR 000FA9  
         __end_of___fltol 21BA                     _EEPGD 007D37                     _LATC4 007C5C  
                   _LATC5 007C5D              vfpfcnvrt@fmt 0042                     _PORTB 000F81  
                   _PORTD 000F83                     _TRISB 000F93                     _TRISD 000F95  
                   _flags 0066  LCDWriteNibble@ch_shifted 0003                     _fputc 23AC  
         __end_of_key_num 22BC                     _fputs 27E2       __end_of_KeyPad_Init 29A0  
                   pad@fp 0011                     _width 0062                     _putch 29A4  
                   main@c 00C8                     main@i 00CD                     main@j 00CF  
                   main@k 00CB                     _units 007A                     dtoa@d 001E  
                   dtoa@i 003E                     dtoa@n 0036                     dtoa@p 0030  
                   dtoa@s 0034                     dtoa@w 0032                     tablat 000FF5  
     __size_of_LCDPutChar 002C                     status 000FD8           __end_of_sprintf 27E2  
         ?_LCD_Initialize 0001           __initialization 28DA              __end_of_main 177E  
            __end_of_dtoa 1A60                    ??_main 005E                    ??_dtoa 0026  
           __activetblptr 000002                 ??_LCDGoto 000B         __end_of_LCDPutCmd 28DA  
            LCDPutChar@ch 0009         __end_of_LCDPutStr 2662                    ?_fputc 0001  
                  ?_fputs 000A                    _EEDATA 000FA8                    _EECON2 000FA7  
                  _T08BIT 007EAE                    ?_putch 0001          __end_of_adc_init 25E6  
                  _TMR0IE 007F95                    _TMR0IF 007F92                 ??_Get_Key 0001  
                  _TMR0ON 007EAF              LCDPutStr@str 000A                    _TRISA0 007C90  
                  _TRISC4 007CA4                    _TRISC5 007CA5          __end_of___xxtofl 1DC8  
          _LCDWriteNibble 2734              vfprintf@cfmt 0056                 ??___aodiv 0011  
               ??___aomod 0011                    ___wmul 2972                 ??___fldiv 001D  
               ??___fltol 0032                    clear_0 2900                    isa$std 000001  
                  pad@buf 0013                    dtoa@fp 001C                    _strlen 2910  
                  fputc@c 0001                    fputs@c 000E                    fputs@i 000F  
             _KeyPad_Init 2998                 ??_key_num 0001                    fputs@s 000A  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                    putch@c 0001          __end_of_vfprintf 2734  
               ??_sprintf 005E              ___xxtofl@arg 0011              ___xxtofl@exp 0010  
            ___xxtofl@val 0007    __end_of_LCDWriteNibble 2790                __accesstop 0060  
 __end_of__initialization 2906             ___rparam_used 000001                ___fltol@f1 002E  
               LCDGoto@ln 000A            __pcstackCOMRAM 0001              __pidataBANK0 29A0  
           __end_of_fputc 2476              ??_LCDPutChar 0008             __end_of_fputs 2826  
           __end_of_putch 29A6                   ??_fputc 0005                   ??_fputs 000E  
                 ??_putch 0001                __pbssBANK0 0060           ?_LCDWriteNibble 0001  
      __end_of_LCDPutChar 2972                   ?___wmul 0001                 ?_adc_init 0038  
                 ?_strlen 0001                   _LCDGoto 2662         LCDWriteNibble@ch4 0002  
       LCDWriteNibble@ch5 0004         LCDWriteNibble@ch6 0005         LCDWriteNibble@ch7 0006  
               ?___xxtofl 0007        __size_of_vfpfcnvrt 01B4                   _Get_Key 22BC  
        ??_LCD_Initialize 000A                   __Hparam 0000                   __Lparam 0000  
                 ___aodiv 1DC8                   ___aomod 1F50                   ___fldiv 106E  
                 ___fltol 20B4           __size_of___wmul 0026                 ?_vfprintf 0050  
            __psmallconst 1000                   __pcinit 28DA                   __ramtop 1000  
              ??_adc_init 003A                   __ptext0 1408                   __ptext1 2790  
                 __ptext2 26D2                   __ptext3 1A60                   __ptext4 177E  
                 __ptext5 2476                   __ptext6 2910                   __ptext7 27E2  
                 __ptext8 23AC                   __ptext9 29A4                 _T0CONbits 000FD5  
         __size_of_strlen 0036              __size_of_abs 0040              __size_of_pad 00C6  
                 _key_num 21BA                ??___xxtofl 000B                   _invalid 0068  
               _LCDPutCmd 28A0                   _sprintf 2790                 _LCDPutStr 25E6  
    end_of_initialization 2906                   _txt_new 009E                   fputc@fp 0003  
           __Lmediumconst 0000                   fputs@fp 000C         __end_of_vfpfcnvrt 1C14  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE                ??_vfprintf 0056  
                 strlen@a 0003                   strlen@s 0001                 _PORTBbits 000F81  
               _PORTDbits 000F83              ?_KeyPad_Init 0001             ___xxtofl@sign 000F  
             ___fldiv@grs 0028               ___fldiv@rem 0021                ?_LCDPutCmd 0001  
              ?_LCDPutStr 000A                LCDGoto@pos 000F                main@result 00C9  
             vfpfcnvrt@ap 0044               vfpfcnvrt@fp 0040                LCDPutStr@i 000E  
             vfpfcnvrt@ll 0048            __end_of___wmul 2998            __end_of_strlen 2946  
     start_initialization 28DA          ??_LCDWriteNibble 0002               __end_of_abs 2866  
             __end_of_pad 253C               vfprintf@fmt 0052                  ??___wmul 0005  
             __pdataBANK0 00D1                  ??_strlen 0003                  ?_LCDGoto 000A  
               ___fldiv@a 0019                 ___fldiv@b 0015         __size_of_adc_init 00AA  
         adc_init@result0 003A             __pcstackBANK0 00BE          ___aodiv@dividend 0001  
       __size_of___xxtofl 01B4               ??_LCDPutCmd 0008               ??_LCDPutStr 000C  
                ?_Get_Key 0001                 _dtoa$1048 002E                  ?___aodiv 0001  
                ?___aomod 0001                  ?___fldiv 0015          ___aodiv@quotient 0013  
                ?___fltol 002E          LCDWriteNibble@ch 0007          LCDWriteNibble@rs 0001  
       __size_of_vfprintf 0062               __smallconst 1000                  ?_key_num 0001  
    __size_of_KeyPad_Init 0008                  ?_sprintf 0058            __size_of_fputc 00CA  
          __size_of_fputs 0044            __size_of_putch 0002            ___wmul@product 0005  
             _LCDGoto$511 000D                  Get_Key@c 0005                  Get_Key@r 0004  
               _set_point 0078                 _vfpfcnvrt 1A60                _ADCON0bits 000FC2  
              _ADCON1bits 000FC1                _ADCON2bits 000FC0         ___wmul@multiplier 0001  
               main@input 00C6          __size_of_LCDGoto 0070                 copy_data0 28EE  
        __size_of_Get_Key 00F0                  __Hrparam 0000                vfprintf@ap 0054  
                __Lrparam 0000                vfprintf@fp 0050   __size_of_LCD_Initialize 003A  
        __size_of___aodiv 0188          __size_of___aomod 0164          __size_of___fldiv 039A  
        __size_of___fltol 0106                ?_vfpfcnvrt 0040           ___aodiv@divisor 0009  
                _adc_init 253C           ___aodiv@counter 0011                sprintf@fmt 005A  
                ___xxtofl 1C14          __size_of_key_num 0102                  __ptext10 2826  
                __ptext11 1F50                  __ptext20 25E6                  __ptext12 1DC8  
                __ptext21 2946                  __ptext13 21BA                  __ptext22 2662  
                __ptext14 253C                  __ptext23 28A0                  __ptext15 1C14  
                __ptext24 2734                  __ptext16 2972                  __ptext25 2998  
                __ptext17 20B4                  __ptext26 22BC                  __ptext18 106E  
                __ptext19 2866                  _avg_temp 0072          __size_of_sprintf 0052  
                _max_temp 00D1             __size_of_main 0376             __size_of_dtoa 02E2  
                _min_temp 00D3                  _result_1 006E                  _result_2 006C  
                _result_3 006A                  isa$xinst 000000                  _num_read 0070  
                _vfprintf 26D2                _LCDPutChar 2946          ___aomod@dividend 0001  
                key_num@k 0003                 sprintf@ap 00BE                Get_Key@Key 0003  
         ___aomod@divisor 0009               ??_vfpfcnvrt 0046           ___aomod@counter 0011  
                sprintf@f 00C0                  sprintf@s 0058              ___aodiv@sign 0012  
 __size_of_LCDWriteNibble 005C              ___aomod@sign 0012  
